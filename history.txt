nvim ~/.config/nushell/config.nu
nvim ~/.config/nushell/env.nu
echo $EDITOR
echo $env.EDITOR
echo $env.XDG_CONFIG_HOME
echo $env.LC_ALL
lazygit
whereis lazygit
ls .cargo/bin/
bat
echo $env.HOME/bin
cd .config/nushell/
man nu
def --env mkcd [dir: path] { mkdir -p $dir && cd $dir }
def --env mkcd [dir: path] { mkdir -p $dir ; and cd $dir }
def --env mkcd [dir: path] { mkdir $dir ; and cd $dir }
mkdir temp/temp
rmdir temp/temp/
echo ($env.HOME + "hello")
alias nvif = nvim \(fzf)
echo $env.config
echo $env.config-path
echo $nu.config-path
yay -Ss nu-lsp
yay -Ss nu
yay -Ss nushell
nvim ../nvim/lua/autocmd.lua
exec alias.nu
eval ls
nohup neovide alias.nu out+err>/dev/null &
n nohup.out
disown
launch neovide alias.nu
ggrks how to config nushell
ls | where extension == 'nu'
ls | where name ends-with .nu
rm nohup.out
fname.zip | str ends-with .zip
exho fname.zip | str ends-with .zip
echo fname.zip | str ends-with .zip
echo fname.zip | str ends-with .zi
if "fname.zip" | str ends-with 'zip' { echo 'true' }
true && false
true || false
mkdir temp and cd temp
rmdir temp/ and/ cd
mkdir temp ; cd temp
false ; cd temp
test 5 < 3
test '5 < 3'
test '5 > 3'
true ; echo 'true'
false ; echo 'true'
false and echo 'true'
false try echo 'true'
try
and
$env.LAST_EXIT_CODE
../../project/c/rpx
alias cd = cd
^cd -
match 'hello.zip' { (_ + '.zip') => echo 'true', _ => false }
match 'hello.zip' { (_ + '.zip') => echo 'true' }
match 'hello.zip' { (_ + '.zip') => true }
match 'hello.zip' { (_ + '.zip') => true, _ => false }
match 'hello.zip' { (str end-with .zip) => true, _ => false }
match 'hello.zip' { (str 'hello.zip' end-with .zip) => true, _ => false }
if (hello.zip | str end-with .zip) {true}
if (hello.zip | str end-with '.zip') {true}
if ('hello.zip' | str end-with '.zip') {true}
if ('hello.zip' | str ends-with .zip) {true}
if ('hello.zip' | str ends-with .zip) {false}
match 'hello.zip' { (str ends-with .zip) => true, _ => false }
nvim .zshrc
zoxide init nushell | save -f zoxide.nu
n zoxide.nu
zoxide query
z ar
ls | get modified
ls | get name | str join
ls | get name | str join ' '
ls -al
rmdir temp/
date now | $in + iday
date now | $in + 1day
date now | $in + 1month
date now | $in + 1m
date now | $in + 10day
date now | $in + 10min
alias.nu | path parse
echo alias.nu | path parse
echo alias.nu | path parse | pick extension
echo alias.nu | path parse | get extension
echo ~/alias.nu | path parse | get extension
extract alias.nu
echo 'abc.tar.gz' | path parse
path parse -h
nu --ide-ast alias.nu
bat project/c/rpx/README.md
fastfetch --fake windows
fastfetch --list-logo
man fastfetch
fastfetch --list-logos
fastfetch --logo nixos
ansi blue
echo hello(ansi blue)world
starshop
starship init nushell
starship init nu
starship init nu | source
starship init nu | exec
./.config/nushell/
let $val = (echo 'hello world')
decode -h
../.config/nushell/
open alias.nu
bat makefile
open /etc/keyd/default.conf
/etc/keyd/default.conf | get newlayer
open /etc/keyd/default.conf | get newlayer
open ~/keylayout.json
open ~/keylayout.json | get keys
ps | get mem
ps | get name | get vivaldi
ps | get name | get systemd
ps | get name.vivaldi
ps | get name.systemd
ps | get name | get 296
ps | get name.296
open compile_commands.json
open compile_commands.json|to toml
open compile_commands.json|to csv
open compile_commands.json|to text
open compile_commands.json|to xml
open compile_commands.json|to yaml
in -h
ps | find nu | get pid
ps | find nua | get pid | is-empty
ps | find nu | get pid | is-empty
z ../../../.config/nushell/
mut $val = null
echo $val
$val = 4
ps | get pid name | find nu
ps | select pid name | find nu
wait-for-process-done-byname nu
wait-for-process-done-byname nvim
ps | select name | where nu
ps | select name | where name == nu
ps | where name == nu
wait-for-process-done pid 33957
ps | where pid == 33957
ps | where pid == 33957 | is-not-empty
ps | where pid == 39857 | is-not-empty
ps | where name == 50 | is-not-empty
ps | where pid == '33957'
waitpid -h
man waitpid
wait-for-process-done name nu
ps | where 'name' == 'vivaldi-bin'
wait-for-process-done 'name' 'vivaldi-bin'
ps | where 'name' == 'vivaldi-bin' | is-not-empty
ps | select name | where vivaldi-bin
ps | select name | where name == vivaldi-bin
ps | select name | where name ==vivaldi-bin
wait-for-process-done name vivaldi-bin
wait-for-process-done pid 42591
shutdown-when-done
source shutdown-when-done.nu
wait-for-process-done name vivaldi
def f [--o: int] { ^echo $o }
def f [--o: int] { if $o {^echo $o} }
def f [--o: int] { if $o? {^echo $o} }
def f [--o: int] { if $o.? {^echo $o} }
def f [--o: int] { if $o != null {^echo $o} }
null | into bool
../neovim/
ps | find zsh
open monster-vimmer.txt
sys
sys net
cpufreq-bench
cpupower
cpupower info
cpupower nonitor
cpupower monitor
sys users | table
ls **/*.json
open CMakePresets.json
http -h
help download
help curl
http get https://ourworldindata.org/life-expectancy
http get https://ourworldindata.org/life-expectancy | from xml
http get 'https://ourworldindata.org/life-expectancy' | from xml
http get 'https://ourworldindata.org/life-expectancy' | query db
http get 'https://ourworldindata.org/life-expectancy' | query web
http get 'https://ourworldindata.org/life-expectancy' | query web -h
query web -h
ps | uniq | wc
ps | wc
ps | select name | uniq
ps | select name | uniq | wc
ls **/*.zig
kill 104930
kill -h
ps | sort-by mem
memusage
memusage -h
memusage --help
yay -Ss emacs
yay -S emacs-wayland
smacs
rmf .emacs.d/
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
n .spacemacs
yay -S superfile
yay -S go
z .config/superfile/
n config.toml
yay -S television
television
tv ~
tv env
tv -h
tv alias
../nushell/
n ../superfile/config.toml
term -h
term size
help term
yay -S dunst
dunst -h
dunst -print hello
dunstctl
dunstctl -h
dunstctl history
dunst
n ../mako/config
ls -l /etc/tlp.conf
^ls -l /etc/tlp.conf
n ~/rc/defaults.conf
nvimsudo /etc/tlp.conf
l /usr/share/tlp/defaults.conf
n ../hypr/hyprland.conf
yay -S fufexan
yay -Ss fufexan
yay -Ss fufexanrm `~/Downloads/audio (3).mp3`
rm `~/Downloads/audio (3).mp3`
ls -ald
ls -adl
ls -adlt
cd .emacs.d/
n init.el
n core/core-configuration-layer.el
vi
which vi
version
version | pivot
glob **/*.c --depth 2
glob **/*.c --depth 3
glob -h
du -h
watch -h
loop -h
touch -h
echo 'hello' 'world'
echo 'hello<\n>'
echo -h
scope
uname | columns
columns -h
uname | describe
[[name, mem]; [1, 2]]
[[name, mem]; [1, 2]] | describe
drop -h
l | drop column 4
each -h
[[1 2 3 4 5]; [6 7 8 9 0]] | each {|l, r| $l + $r }
[[1, 2, 3, 4, 5]; [6, 7, 8, 9, 0]] | each {|l, r| $l + $r }
[[z, o, t, th, f]; [1, 2, 3, 4, 5]; [6, 7, 8, 9, 0]] | each {|l, r| $l + $r }
[1 2 3]
[1 2 3] | enumerate
[1 2 3] | each --keep-empty {|e| if $e == 2 { "found 2!"} } | describe
every -h
[["c1" "c2" "c3"];[1 2 3] [4 5 6]]
[[1 2 3] [4 5 6]] | each {|l, r| $l + $r }
[[1 2 3] [4 5 6]] | each {|l| $l }
[[1 2 3] [4 5 6]] | each {|l| each { |r| $l + $r } }
[[1 2 3] [4 5 6]] | each {|l| each { |r| $l.item + $r } }
[[1 2 3] [4 5 6]] | enumerate | each {|l| each { |r| $l.item + $r } }
[[1 2 3] [4 5 6]] | each {|l| each { |r| $l.$r + $r } }
[[1 2 3] [4 5 6]] | each {|l| each { |r| $l.0 + $r } }
[[1 2 3] [1 2 3]]
[[1 2 3]; [1 2 3]]
[[1 4] [2 5] [3 6]] | each {|l| echo $l }
[[1 4] [2 5] [3 6]] | each {|l| $l.0 + $l.1 }
[[1 2] 3 4]
sys cpu
sys disks
sys temp
sys users | flatten
sum -h
ls | group-by type
items -h
history | length
history
history -h
history | were command =~ yay
echo 'a' 'b'
echo 'a' 'b' | lines
echo 'a' 'b' | str join |lines
(^echo a; ^echo b) | lines
ls | split-by type
sys mem
sys mem | split-by 1
sys mem | split-by total
ls -dt
take -h
[[name mem]; [hello 1]]
[[name mem]; [hello 1]] | describe
[[name mem]; [hello 1]] | first
[[name mem]; [hello 1]] | take 1
[[name mem]; [hello 1] [world 2]] | take 1
[[name mem]; [hello 1] [world 2]] | first 2
[[name mem]; [hello 1] [world 2]] | take 2
first -h
1..100
tee {1..100 | print}
tee {1..100 | print} | $in * 5
tee -h
print -h
100 | print 10
ps | where name =~ vivaldi
port 3121 4000
port 0 4000
port -h
[{x:12, y:15}, {x:8, y:9}], [[x, y]; [12, 15], [8, 9]]
[[{x:12, y:15}, {x:8, y:9}], [[x, y]; [12, 15], [8, 9]]]
{name:"Nushell", lang: "Rust"}
[[{x:12, y:15}, {x:8, y:9}], [[x, y]; [12, 15], [8, 9]]] | describe
desc -h
describe -h
ls | describe -d
{shell:'true', uwu:true, features: {bugs:false, multiplatform:true, speed: 10}, fib: [1 1 2 3 5 8], on_save: {|x| $'Saving ($x)'}, first_commit: 2019-05-10, my_duration: (4min + 20sec)}
*.c | describe
echo *.c | describe
echo *.c
echo *.c | into glob | describe
echo *.c | into glob
let b = { $in.name.0 | path exists }
ls | do $b
[[name, age]; [a 1] [b 2] [c 3]]
'apl' =~ '^\w{4}'
'apl' =~ '^\w{3}'
ansi -h
whoami -h
$"Captain (whoami)"
whereis nvim
which nvim -a
which vim
which vim -a
which which -a
1..3..10
10..1
10..3..1
vivaldi in (ps)
vivaldi in (ps | get name)
ps | get name
ps | get name | describe
help in
help operators in
let psn = (ps | get name)
vivaldi in $psn
$psn
date now | date to-record
date now | date to-record | $in.year
let carapace_completer = {|spans|<\n>carapace $spans.0 nushell ...$spans | from json}
do $carapace_completer git
open .config/nushell/history.txt
cd (tv | path dirname)
ls | where type == dir | each { |it| $it.name} | str join (char nl) | tv
ls -r | where type == dir | each { |it| $it.name} | str join (char nl) | tv
../../../.config/nushell/
source $nu.config-path
git remote add origin https://github.com/koyamahayato2357/nushell.git
g l --name-only
random dice
random dice -d 100 -n 10
random dice -d 100 -s 10
random chars
random binary
random binary 10
debug
debug info
man exec
banner -h
banner
create_left_prompt -h
create_right_prompt
math -h
5 ** 5
5 ** 5 ** 2
5 ** 5 ** 3
5 ** 5 ** 4
5 ** 5 ** 5
5 ** 5 ** 6
5 ** (5 ** 5)
do -i -h
../project/
mkcd shell
cd shell/
n ../../.config/nushell/alias.nu
rmdir ../and/ ../cd/
g cl https://github.com/nushell/nu_scripts.git
cd nu_scripts/modules/git/
source git.nu
gl 50
git age
'git age'
git\ age
../nvim/
n mod.nu
../prompt/
source starship.nu
create_left_prompt
gl
z project/shell/nu_scripts/modules/prompt/
n full-line.nu
spf
cd weather/
source get-weather.nu
get_my_location
get_my_location 0
get_my_location 1
get_my_location 2
weather_emoji_table
n get-weather.nu
get_weather
clip
cat $nu.current-exe
kill 109707
z project/shell/nu_scripts/
cd aliases/
n bat/bat-aliases.nu
n git/git-aliases.nu
cd modules/
n fuzzy/
cat $nu.history-path
source fuzzy/fuzzy_command_search.nu
fuzzy-command-search
help commands
help commands | get name
help commands | select name
n fuzzy/fuzzy_command_search.nu
help commands | select name | str join
help commands | select name | describe
help commands | select name | each {|it| echo $it.name }
help commands | select name | each {|it| ^echo $it.name }
help commands | select name | to toml
help commands | select name | to json
help commands | select name | to json | to toml
help commands | select name | to json | to text
help commands | select name | to json | to csv
help commands | select name | to csv
help commands | select name | to csv | head
help commands | select name | to csv | tail -n +2
help commands | select name | to csv | tail -n +2 | uniq | head
help commands | select name | to csv | tail -n +2 | ^uniq | head
help commands | select name | to csv | tail -n +2 | ^uniq
help commands | select name | to csv | tail -n +2 | head
help commands | select name | to csv | tail -n +2 | tv
(help commands | select name | to csv | tail -n +2 | ^uniq | tv)
kill 113663
exec -h
xargs uniq
xargs ls
xargs
xargs xargs
ps | where name =~ nu
kill 125554
help commands | select name | to csv | tail -n +2 | ^uniq | tv
^fzf
cat $nu.history-path | ^fzf
z .config/nushell/
cat history.txt | uniq | wc
cat history.txt | ^uniq | wc
cat history.txt
cat history.txt | uniq
^uniq -h
^uniq --help
cat history.txt | awk '!seen[$0]++ { line[NR] = $0 } { delete line[NR-1] } END { for (i in line) print line[i] }'
open history.txt | uniq-by name
open history.txt | to toml | uniq-by name
open history.txt | to toml
open history.txt | to csv
open history.txt | to json
cat history.txt | to json
[(cat history.txt)]
[(cat history.txt)] | split -h
[(cat history.txt)] | lines
[(cat history.txt)] | split cell-path
[(cat history.txt)] | split row
[(cat history.txt)] | split list
[(cat history.txt)] | uniq
[(cat history.txt)].0
cat history.txt | table
cat history.txt | table -i
cat history.txt | table -i name
cat history.txt | table -i 0
[[name]; (cat history.txt)]
[[name]; [(cat history.txt)]]
cat history.txt | sort -u
sort -h
cat history.txt | sort | uniq
cat history.txt | ^sort -u
cat history.txt | ^sort | ^uniq
^echo -e 'apple\napple\nbanana'
^echo -e 'apple\napple\nbanana' | ^uniq
cat history.txt | sed 's/ \+$//' | ^sort | ^uniq
cat history.txt | sed 's/ \+$//' | ^sort | ^uniq | tv
save -g
z ../.config/nushell/
rg ansi
n env.nu
echo -e 'hello ' | str replace ' \+$' ''
echo 'hello ' | str replace ' \+$' ''
echo 'hello ' | str replace ' +$' ''
echo 'hello ' | str replace ' $' ''
echo 'hello ' | str replace (' $' | into glob) ''
echo 'hello ' | str replace ' +$' '' -r
cat $nu.history-path | str replace -r ' +$' ''
cat $nu.history-path | str replace -r ' +$' '' | ^sort | ^uniq
cat $nu.history-path | str replace ' +$' '' -r | ^sort | ^uniq
cat $nu.history-path | str replace ' +$' '' -r | ^sort -u
^echo 'hello\nhello'
^echo -e 'hello\nhello'
^echo -e 'hello\nhello' | str replace 'h' 'a'
^echo -e 'hello\nhello' | str replace 'h' 'a' -a
cat $nu.history-path | str replace ' +$' '' -ar | ^sort -u
^echo -e 'hello\nhello' | str replace 'o$' 'a' -a
^echo -e 'hello\nhello' | str replace 'o$' 'a' -ar
starship prompt --cmd-duration $env.CMD_DURATION_MS $"--status=($env.LAST_EXIT_CODE)" --terminal-width (term size).columns
starship prompt --right --cmd-duration $env.CMD_DURATION_MS $"--status=($env.LAST_EXIT_CODE)" --terminal-width (term size).columns
source config.nu
sys users
mkcd ~/project/zig/uniqu
zig build run -- src/main.zig
zig test src/main.zig -- src/main.zig
zig test -h
zig test -h | grep arg
lldb zig-out/bin/uniqu
zig run src/main.zig -- temp.txt
zig run src/main.zig -- src/main.zig
valgrind zig-out/bin/uniqu
valgrind zig-out/bin/uniqu src/main.zig
rg uniq
./zig-out/bin/uniqu
cat src/main.zig | ./zig-out/bin/uniqu
mv ../uniqu/ ../superuniq
cd .
../../project/zig/superuniq/
zig clean
mkdir ~/bin
cp zig-out/bin/superuniq ~/bin/
superuniq
which superuniq
l ~/bin/
cat history.txt | superuniq > his.txt
cat history.txt | superuniq | save -f his.txt
n his.txt
rm his.txt
z project/zig/superuniq/
cat src/main.zig | wl-copy
rm temp.txt
n src/version.c
~/proc/ChezScheme/
n s/cptypes.ss
n test/tests.zig
rmf .nix*
ls /
rm keylayout.json
l fonts/
rmf fonts/bdf/
yay -S platformio
pio
cd project/club/ctrlr/
yay -Ss python
yay -Ss python3
yay -S python310
n youken.txt
l /usr/lib/python3.6/
grib --help
grid -h
n .config/hyprpanel/config.json
cd Pictures/
cd `Vivaldi Captures/`
lsix `2024-12-01 21.59.33 teams.microsoft.com 61bdaaae0d2f.png`
yay -S pinta
launch pinta
wl-copy --version
wl-copy --help
man wl-clipboard
cat "Pictures/Vivaldi Captures/2024-12-01 21.59.33 teams.microsoft.com 61bdaaae0d2f.png" | wl-copy
pinta
yay -Rsc pinta
yay -S krita
krita
yay -Rsc krita
yay -Ss tux paint
yay -S tuxpaint
tuxpaint
yay -Rsc tuxpaint
yay -S gimp
yay -Ss gimp
yay -Ss gimp wayland
gimp
yay -Rsc gimp
n `Downloads/test_1 1.ino`
cat youken.txt
z ../../zig/superuniq/
zoxide
echo $env.__zoxide_hooked
zoxide add
zoxide add ~/project/zig/superuniq/
zoxide add ~/.config/nushell/
find -h
n --clean src/evalfn.c
rg argc
rg spr
rg `=`
rg '`=`'
mkcd ~/project/club/
g cl https://github.com/ZigEmbeddedGroup/microzig.git --depth 1
cd microzig/
cd examples/stmicro/stm32/
l zig-out/firmware/STM32F103C8.elf
rg f446re
rg f446re -i
./examples/stmicro/stm32/
python3 gpt_repository_loader.py ~/project/c/rpx/ -o rpx.txt
ls *.mp3 | get name
ls *.mp3 | get name | each { |it| mv $it $"../Music/($it + 2.mp3)" }
l ../Music/
rmf Pinta/
rmf sway*
rmf neofetch/ GIMP/
rmf wofi/ unity3d/
mkcd starship
rmdir starship
touch starship.toml
echo $env.STARSHIP_SHELL
echo $env.STARSHIP_SESSION_KEY
rm starship.toml
n kritarc
rm krita*
n kxkbrc
n kscreenlockerrc
l ibus/
ps | find ibus
ibus
rmf ibus/
sway --help
l autostart/
rmdir autostart/
l dconf/
n zsh/fzf.zsh
n zsh/zoxide.zsh
fcitx --help
l fcitx/
n Trolltech.conf
l Kitware/
n Kitware/CMakeSetup.conf
yay -Ss baloo
rmf baloofilerc
^ls -R | grep baloo
yay -Rsc firefox
rm `Downloads/stm32f446re (1).pdf`
yay -Ss arm-none-abi
yay -Ss arm
yay -Ss arm-none-eabi
yay -S arm-none-eabi-gcc
arm-none-eabi-gcc --version
clang --target=arm-none-eabi
clang --target
mkcd project/club/raw
clang --target=arm-none-eabi -mcpu=cortex-m4 -mthumb -O2 -c main.c -o main.o
clang --target=arm-none-eabi -mcpu=cortex-m4 -mthumb -TSTM32F446RE.ld -o firmware.elf main.o -lnosys
clang --target=arm-none-eabi -mcpu=cortex-m4 -mthumb -TSTM32F446RE.ld -o firmware.elf main.o -lc -lnosys
n STM32F446RE.ld
ld --verbose
readelf -r .build/2411f779628ef21a6715c81b438f0b46/target/ansiesc.o
file .build/2411f779628ef21a6715c81b438f0b46/target/ansiesc.o
file .build/441c49f43cf3b6c23fb8af6cf506705c/target/ansiesc.o
readelf -r .build/441c49f43cf3b6c23fb8af6cf506705c/target/ansiesc.o
ls .cache/
readelf -r .build/441c49f43cf3b6c23fb8af6cf506705c/target/main.o
readelf -l .build/441c49f43cf3b6c23fb8af6cf506705c/target/main.o
readelf -l .build/441c49f43cf3b6c23fb8af6cf506705c/target/rpx
zoxide add ../../club/microzig/
z micro
cd port/stmicro/
cd stm32/
n src/generate.zig
rg linker
n tools/generate_linker_script.zig
z examples/stmicro/stm32/
rg f103c8
rg f103c8 -i
vim port/stmicro/stm32/src/chips/all.zig
n port/stmicro/stm32/src/chips/all.zig
n port/stmicro/stm32/src/Chips.zig
rg GlobalConfiguration
rg Target
ls port/stmicro/stm32/src/chips/all.zig
rg 103C8 port/stmicro/stm32/src/chips/all.zig
rg 446RE port/stmicro/stm32/src/chips/all.zig
n src/blinky.zig
l /usr/share/keyd/layouts/
ld.lld --verbose
ldconfig --help
lldb zig-out/bin/rpx
sudo rm -rf .deps/ build/
rg CC Makefile
rg CC CMakeLists.txt
n --clean src/main.c
rg feature
rg '3.0.x'
rg Feature
n CHANGELOG.md
z plugins/CopilotChat.nvim/
n lua/CopilotChat/init.lua
rg warn
n lua/CopilotChat/health.lua
rg removed
rg CopilotChat lua/
rmf plugins/CopilotChat.nvim/
rg nui
zig build run -t=bench
make run OL=3 T=bench
rg get_rtinfo
zig build run -DT=bench --release=debug
cmake . --target build
cmake . build
l ~/.local/share/Trash/
rmf llvm-project/
g cl https://github.com/llvm-project/llvm-project --depth 1
g cl https://github.com/llvm/llvm-project --depth 1
cd llvm-project/
cmake -G "Ninja" ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release
cd proc/llvm-project/
sudo systemctl stop hyprland
sudo systemctl stop hyprctl
kill 852
kill 664
ps | find ly
sudo kill 664
cat .histfile | awk '{ print $2 }'
cat .histfile | awk '{ print $2 }' | head
cat .histfile | awk '{ print $1 }' | head
cat .histfile | cut -d';' -f1 | head
cat .histfile | cut -d';' -f2 | head
pueue completions nu
pueue completions nushell
source -h
(which clang).path
(which clang).path | ls
ls /usr/local/bin/clang
readlink /usr/local/bin/clang
ls /usr/local/bin/clang20
pueue -h
pueue completions nushell | save -f pueue.nu
n pueue.nu
zig build --release=fast -Tuse-llvm
rg 19\.x
n cmake/Findclang.cmake
cat ~/.histfile | cut -d';' -f2-
yay -S zap
zap
plug
zap update
yay -Rsc zap
yay -Rsc zap-git
yay -Rsc zap-git-debug
zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1
sudo pacman -S fzf
cd /home/sundo/.local/share
git clone https://github.com/zap-zsh/zap.git
cd zap
sudo nvim /etc/wsl.conf
sudo vim /etc/wsl.conf
sudo pacman -S lazygit
cargo install asm-ls
CARGO_TARGET_DIR=/tmp/cargo-install8A1fuU cargo install asm-lsp
cargo install --git https://github.com/bergercookie/asm-lsp
mkcd ~/temp
git clone https://github.com/bergercookie/asm-lsp.git
cd asm-lsp
rmf asm-lsp
mkcd tool
git clone https://gitlab.com/jallbrit/cbonsai
cd cbonsai
sudo pacman -S make cmake
cbonsai --help
./cbonsai
./cbonsai -i
./cbonsai --help
./cbonsai -il
git clone https://github.com/pipeseroni/pipes.sh.git
cd pipes.sh
helix pipes.sh
./pipes.sh -p 3
./pipes.sh -p 100
./pipes.sh -p 10
cd ~/project
mkcd pro
mkcd pro2
git clone git@github.com:s2201050/Pro2-First-Report.git
./Pro2-First-Report
z li
z pro2
../fibonacci
du --help
vl
cargo new overflow_test
ssh --help
ssh -T git@github.com -i ~/.ssh/private
ssh -T git@github.com -i ~/.ssh/arch
mkcd ~/project/c/brain\*\*\*\*
cp ../../makefile-formats/makefile-c ./Makefile
n makefile-c
n main.bf
cp main.bf test.bf
./a.out main.bf
rm main.bf
cd ~/project/c/brain\*\*\*\*
cat test.bf
./a.out test.bf| wc -l
factor 117
./a.out test.bf|head -n 10
./a.out test.bf|head -n 100
sudo pacman -S bf
mkcd ~/tool
git clone https://github.com/fabianishere/brainfuck.git
cd brainfuck
brainfuck test.bf
gcc main.c -O3
cat <<EOF > test.bf\
n ../.gitignore
rm .gitignore
n ../../.gitignore
../../inner_outer_product
sudo pacman -S texlive-latexextra
uplatexx main.tex
n Session.vim
vim -S Session.vim
n -S Session.vim
rm main.c.tex mainouter.c.tex
z in
z inn
cat main.tex
./a.out -1
./a.out 7
./a.out 10
./a.out 30
sudo su
n ../inner_outer_product/IS16_log.log
rm IS16_log.log
n m
rm m
factor
sudo pacman -S man man-db
sudo pacman -S man-pages
man 3 printf
cp /mnt/c/Users/sundo/Downloads/gpio_* .
mkdir -p project/arduino/kumikomisystem
mv ./gpio_* project/arduino/kumikomisystem
cd project/arduino/kumikomisystem
cp gpio_single-01.ino kadai1.ino kadai2.ino
cp gpio_single-01.ino kadai1.ino
cp gpio_single-01.ino kadai2.ino
cp gpio_multi-01.ino kadai3.ino
cp gpio_multi-01.ino kadai4.ino
n kadai1.ino
rm kadai{1,2}*
rm gpio_single-01.ino
./a.out test.bf
n test.bf
mkdir test
mv test.bf test/memorysize.bf
../a.out power.bf
z rust
cargo new brain\*\*\*\*
cargo new brainfuc
cd brainfuc
../../c/brain\*\*\*\*
z sys
cat kadai3.ino
z line
bat main.c
z fib
z inner
z bra
git clone git@github.com:koyamahayato2357/source.git
mkdir gameoflife && cp source/reliablelife.c gameoflife
cd gameoflife
mv reliablelife.c main.c
git config --global init.defaultBranch main
git remote add origin git@github.com:koyamahayato2357/gameoflife.git
mkdir frequency-analysis && cp source/word_percentage.c frequency_analysis/main.c
cp source/word_percentage.c frequency-analysis/main.c
cd frequency-analysis
git remote add origin git@github.com:koyamahayato2357/frequency-analysis.git
git commit -m "first commit"
git push --set-upstream origin main
../source
bat -p ackermann.c
bat ackermann.c
z sou
gcc getch.c
bat --list-languages
man ls
z editor/neovim
grep "\\033[H\\033[J" -r **/*.[ch]
grep "\\033\[H\\033\[J" -r **/*.[ch]
grep "\033\[H\033\[J" -r **/*.[ch]
grep ".033\[H.033\[J" -r **/*.[ch]
grep ".033\[H.033\[J" -r **/*.c
grep ".033\[H.033\[J" -r *
grep "033" -r *
bat --list-themes
sudo make CMAKE_INSTALL_PREFIX=/usr/local/nvim install
/usr/local/nvim/bin/nvim --version
n kadai4.ino
z syst
gcc test.c
man 3 tcsetattr
man 3 fgetc
man 3 unfgetc
sudo pacman -S lv
man more
man more| bat
man 3 ungetc| bat
man 3 ungetc| bat -p -l man
MANPAGER=less
man 3 ungetc
batman ungetc
man 3 ungetc| bat -p -l man --color=always
man 3 ungetc| bat -p
batman 6
batman /etc/passwd
batman puts
cd project/makefile-formats
z local
z .local/share/nvim/lazy/vim-repeat
n ../README.markdown
cat repeat.vim
n repeat.vim
touch lua/repeat.lua
nv lua/repeat.lua
n lua/repeat.lua
n ~/.local/share/nvim/lazy/vim-repeat/autoload/repeat.vim
rm lua/repeat.lua
./lesson-2-practice-of-pointer-chapter-11-s2201050
./a.out 5 5
./a.out 3 3
cd less
git add practice2.log
gcc practice01_1.c
./a.out 9 9
git config --global user.email "sundongxiaoshan202@sendai-nct.jp"
script practice1.log
z les
git reset --hard fdce794ddcc29fc0bfe66cb64810bffde89c3ea6
rmf lesson-2-practice-of-pointer-chapter-11-s2201050
git clone git@github.com:GE3ProgrammingII/lesson-2-practice-of-pointer-chapter-11-s2201050.git
cd lesson-2-practice-of-pointer-chapter-11-s2201050
z le
git add practice1.log
git filter-branch -f --env-filter "GIT_AUTHOR_NAME='s2201050'; \\
" HEAD~11..HEAD
git push -f origin main
mkcd project/c/mivim
cp ~/project/makefile-formats/makefile-c Makefile
git remote add origin git@github.com:koyamahayato2357/mivim.git
touch getch.{c,h} main.c
cp ../../source/getch.c .
n getch.h
touch functions.{c,h}
n functions.h
n functions.c
mkdir Include
mv *.h Include
mv Include/* .
rmdir Include
mkdir ../include
mv *.h ../include
l ../include
n brain\*\*\*\*
cd brain\*\*\*\*
git remote add origin git@github.com:koyamahayato2357/brain-.git
git reset
git reset 427e5e08991f52c74f20c69f2760331671fd86aa
git reset --hard 427e5e08991f52c74f20c69f2760331671fd86aa
n test/test.bf
time ./a.out test/test.bf
time ./a.out test/power.bf
n test/interactive.bf
./a.out test/interactive.bf
man 3 getchar
sudo pacman -S neovide
neovide --wsl
sudo pacman -Rc libmd
sudo pacman -Rc alsa-lib
sudo pacman -Rc alsa-ucm-conf alsa-topology-conf
sudo pacman -Rc lm_sensors default-cursors wayland
sudo pacman -Rc libdrm libbsd libxkbcommon
sudo pacman -Rc libdrm libxkbcommon
sudo pacman -Rc libpciaccess libxxf86vm libxfixes-
sudo pacman -Rc libpciaccess libxxf86vm libxfixes
sudo pacman -Rc xkeyboard-config
echo $PATH
which clangd
where clangd
where lua-language-server
where texlab
where rust-analyzer
where gcc
man cc
cc --help
info cc
man info
cc --version
sudo pacman -S openssl-1.1
sudo pacman -R openssl-1.1
sudo pacman -S pkgconf
n temp.asm
n temp.sh
batman bat
vim .config/nvim/init.lua
bat ~n/init.lua
cd project/c
mkcd belltest
wezterm
cl;sozsh
cd project/c/belltest
hrc
echo windows terminal is kuso
batman ed
man ed
batman utime
ln -s .wezterm.lua /mnt/c/Users/sundo/.wezterm.lua
rm /mnt/c/Users/sundo/.wezterm.lua
cp .wezterm.lua /mnt/c/Users/sundo
sudo pacman -S jq
cat ~rc/settings.json| jq
n ~rc/settings.json
cat `fzf`| jq
~/project/shell-scripts/diary.sh
mkcd bin
cp ../project/shell-scripts/diary.sh .
sudo pacman -S gnu-sed
sudo pacman -S sed
sed "/^/ m 1" diary.sh
sed "/^/d" diary.sh
n diary.sh
sudo pacman -S kakasi
kakasi
sudo pacman -Rc kakasi
sudo pacman -Rc oniguruma
more diary.sh
less diary.sh
where cc
l `where cc`
sudo pacman -S git-delta
cd ~/editor/neovim
mv ~/.gitconfig .
ln -s ~/.gitconfig ./.gitconfig
ln -s .gitconfig ~/.gitconfig
rm ~/.gitconfig
cp .gitconfig ../
l **/.git
echo **/.git
echo **/.git| sed "s/ /\n/"
echo **/.git| sed "s/ /\n/g"
where brainfuck
sudo rm `where brainfuck`
rmf tool/brainfuck
./a.out test/power.bf
./a.out test/memorysize.bf
n project/c/brain\*\*\*\*/main.c
~n/lua
n ~/.local/share/nvim/lazy/Comment.nvim/lua/Comment/init.lua
cat comment.lua
cd ~/.local/share/nvim/lazy/Comment.nvim
grep "gc" -r **/*.lua
nv comment.lua
n ~/.local/share/nvim/lazy/Comment.nvim/lua/Comment
n comment.lua
sudo pacman -S ncdu
n c.so
n plugin
cd queries
cd c
cd autoload
n nvim_treesitter.vim
n temp.yml
n nvim-treesitter.lua
l nvim-treesitter
batman gnu
batman game
batman ls
batman cat
man ls | bat -l man
bat nvim-treesitter.lua
lsd -R
lsd project
lsd project -R
lsd -alFh
cd /usr/src
cd x86_64-pc-linux-gnu
cd 13.2.1
cd wsl
cd lib64
cd include
rg " malloc("
rg " malloc\("
rg "void *malloc\(.*)" **/*.c
rg "void[ *]{2}malloc\(.*)" **/*.c
cd dev
cd bin
git difftool| bat -p
batman lua-language-server
batman lua-ls
n luarc.json
mv luarc.json .luarc.json
g P
g C --global -e
git config --global -e
cd ~rc
difft .gitconfig ../.gitconfig
bat .gitignore
cargo install ripgrep
difft ~rc/.wezterm.lua /mnt/c/Users/sundo/.wezterm.lua
cp ~whome
cd ~whome
cp /mnt/c/Users/sundo/.wezterm.lua .
batman 3 delete
mkcd ~/project/cpp
mkcd allocate
gcc main.cpp
g++ main.cpp
mkcd ../c/allocate
mkcd ../../asm/allocate
mv cpp/c/* c/
mv cpp/asm .
cd asm
cd allocate
n allocate.asm
n allocate.s
sudo pacman -S arm-none-eabi-binutils
sudo pacman -S arm-none-eabi-gcc
as allocate.s
batman as
man as
sudo pacman -S arm-none-eabi
sudo pacman -Rc arm-none-eabi-gcc
sudo pacman -Rc arm-none-eabi-binutils
mkcd ../hello
as main.asm
ld a.out
ld a.out -o hello
./hello
sudo pacman -S nasm
nasm -felf32 main.asm
ld -melf_i386 main.o
mkcd ../outinteger
nv main.asm
compileasm outinteger/main
compileasm main
n main.asm
disasm main
disasm -S main
objdump -S main
disasm -S `which ls`| bat -p
batman objdump
man objdump
disasm -S `which ls` > ls.objdump
n ls.objdump
rm ls.objdump
sudo pacman -S expac
expac -S %N -Q gcc
expac -S '%n %N' | grep 'gcc'
objdump -S `which clear`
objdump -S `which clear` > clear.objdump
n clear.objdump
rm clear.objdump
pacman -Qo $(which find)
sudo pacman -R expac
sudo pacman -S asp
git cl https://github.com/archlinux/asp.git
cd asp
sudo pacman -S m4
rmf asp
kill 7544
kill 7571
kill 8031
kill 8555
kill 8573
kill 8823
git diff .luarc.json
nv .luarc.json
asm-lsp
procs
kill 1400
l ~/.cargo/bin
base64 init.lua
base64 init.lua | base64 init.lua
base64 init.lua | base64
batman base64
base64 init.lua | base64 -d
cat init.lua| tr -d "aeiou"
batman tr
batman cut
rg --version
batman tee
batman less
less init.lua --header=100
bat init.lua
less --header 1 init.lua
git log | bat
sudo pacman -S info
batman most
batman pg
pg init.lua
whereis man
l `whereis man | sed "s/^.*://"`
l `whereis man | sed "s/^.*://"` | bat
l `whereis man | sed "s/^.*://"` | grep ja
cd $(ls -d `whereis man | sed "s/^.*://"` | grep ja)
ls -d `whereis man | sed "s/^.*://"` | grep ja
ls -d `whereis man | sed "s/^.*://"`
man 6
echo $MANPATH
man 6 intro
sudo pacman -S sl
man 6 sl
man sl
sudo pacman -R sl
sudo pacman -S bsd-games
man 6 hangman
man bsd-games
batman ascii
batman utf-8
man 6 nethack
cd project/c/source
n minesweeper.c
mkcd ../minesweeper
cp ../source/minesweeper.c ./main.c
clang-format -i main.c
git remote add origin git@github.com:koyamahayato2357/minesweeper.git
cp ~/project/makefile-formats/makefile-c ./Makefile
~mail
sudo pacman -S roswell
mkcd ../../lisp
cd hello
ros init hello
n hello.ros
ros build hello.ros
n hello.asd
ros run hello.ros
ros build hello.ros| head -n 30
ros build hello.ros 2>&1| head -n 30
ros build hello.ros 2>&1| head -n 40
ros init test
rm test.ros
rmf hello
cd test/src
mv lisp ~/.roswell/local-projects
cd ~/.roswell/local-projects
cd lisp
cd local-projects/lisp
ros run
cd code-char
nv main.lisp
ros init code-char
ros build code-char.ros 2>&1 | head -n 45
ros build code-char.ros
./code-char
n code-char.ros
ros run code-char.ros
mkcd project/help
n lisp.help
../c/
mkcd bastet
cp ../source/getch.c .
n getch.c
mv getch.c main.c
cd ~nvimruntime/
echo ~nvimruntime
cd ~/.local/share/nvim/lazy/ultimate-autopair.nvim
rg "<A-e>" -i
n default.lua
nv ~whome/.wezterm.lua
n lua/comment.lua
rm lua/comment.lua
nv lua/gitlens.lua
git -C /home/sundo/.config/nvim blame gitlens.lua
git -C /home/sundo/.config/nvim blame -c -L 10,20 gitlens.lua
git -C /home/sundo/.config/nvim blame -c -L 10,20 /home/sundo/.config/nvim/lua/gitlens.lua
git blame
git blame -s gitlens.lua
n gitlens.lua
go install vim-startuptime
go install vim-startuptime@latest
go install github.com/rhysd/vim-startuptime@latest
PATH=PATH:~/go/bin
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 | bat
n ~n/lua/gitlens.lua
sudo pacman -S ed
ed .zshrc
sudo pacman -S hex
man hex
sudo pacman -R hex
batman echo
n excutable
batman xxd
n `which ls`
chmod +x ls
./ls
./ls -al
rm ls
mv IS16_log.log IS16_inner_outer_product.log
mv main.c IS16_report.c
mv tex/main.pdf IS16_operation_check.pdf
n IS16_report.c
mv /mnt/c/Users/sundo/Downloads/pro2-inner-outer-product-fc.drawio\ \(1\).drawio.pdf IS16_flowchart.pdf
mv main.pdf ../IS16_operation_check.pdf
../../fibonacci/
mv IS16_log.log IS16_fibonacci.log
mv main.c IS16_fibonacci.c
mv /mnt/c/Users/sundo/Downloads/pro2-fibonacci.drawio\ \(1\).drawio\ \(2\).pdf IS16_fibonacci_flowchart.pdf
mv main.pdf ../IS16_fibonacci_operation_check.pdf
../inner_outer_product
mv IS16_report.c IS16_inner_outer_product.c
mv IS16_flowchart.pdf IS16_inner_outer_product_flowchart.pdf
mv IS16_operation_check.pdf IS16_inner_outer_product_operation_check.pdf
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 | head 50
n opt.lua
n map.lua
cd Pro
cd linear-expr
l -R init.lua lua
~/.config/helix
sudo pacman -Rc helix
mkcd ~/treesitter
git clone https://github.com/tree-sitter/tree-sitter-c.git
git clone https://github.com/latex-lsp/tree-sitter-latex.git
git clone https://github.com/tree-sitter-grammars/tree-sitter-lua.git
git clone https://github.com/alemuller/tree-sitter-make.git
git clone https://github.com/tree-sitter/tree-sitter-rust.git
cd tree-sitter-c
../tree-sitter-lua
mkdir parser
cd parser
mv ~/treesitter/tree-sitter-c/libtree-sitter-c.so c.so
mv ~/treesitter/tree-sitter-rust/libtree-sitter-rust.so rust.so
mv ~/treesitter/tree-sitter-lua/libtree-sitter-lua.so lua.so
rm parser/c.so
rm parser/lua.so
rmf tree-sitter-{c,lua}
cd ~/project/rust
cd overflow_test
xxd parser/rust.so
cd ~/treesitter
cd tree-sitter-make
n grammar.js
tsserver --help
tsserver
tsserver grammar.js
git clone https://github.com/tree-sitter/tree-sitter-bash.git
git clone https://github.com/shunsambongi/tree-sitter-gitignore.git
cd tree-sitter-gitignore
l target/release
l target/release/build/
l target/release/build/tree-sitter-ignore-82871b398b881041/
l src/
cd target/
l release
cd release
git clone https://github.com/tree-sitter-grammars/tree-sitter-commonlisp.git
l /usr/local/include/tree_sitter
l /usr/local/lib/libtree-sitter-rust.so
l /usr/local/lib/libtree-sitter-rust.so.0
l /usr/local/lib/libtree-sitter-rust.so.0.21
difft /usr/local/lib/libtree-sitter-rust.so.0.21 ~/.config/nvim/parser/rust.so
sudo mv /usr/local/lib/libtree-sitter-rust.so.0.21 ~/.config/nvim/parser/rust.so
mv ~n/parser/rust.so ~n/parser/bk
l queries/
n queries/highlights.scm
cp queries package.json ~n/parser
cp queries package.json ~n/parser -r
~n/parser
mv bk rust.so
rmf queries package.json
n ~/project/rust/overflow_test/src/main.rs
cd ~/.local/share/nvim/lazy/nvim-treesitter/parser
cd project/arduino/kumikomisystem/
nv 3test.c
gcc 3test.c
n 3test.c
sudo pacman -S npm
mv libtree-sitter-commonlisp.so ~n/parser/commonlisp.so
../tree-sitter-gitignore
;
../tree-sitter-make
time npx tree-sitter generate
npm build
npx ekgret
npx --version
npm tree-sitter generate
npx --help
sudo pacman -S neovim
sudo pacman -Rc neovim
sudo pacman -Rc figlet
which myip
myip -v
rm temp.rs
n temp.ros
n temp.clisp
l queries/bash
~/treesitter
git clone https://github.com/tree-sitter/tree-sitter-html.git
tree-sitter-html
mkdir ~n/queries/html
mv queries/* ~n/queries/html
git clone https://github.com/tree-sitter/tree-sitter-javascript.git
tree-sitter-javascript
mv libtree-sitter-javascript.so ~n/parser/javascript.so
mkdir ~n/queries/javascript
mv queries/* ~n/queries/javascript
git clone https://github.com/tree-sitter/tree-sitter-css.git
git clone https://github.com/tree-sitter/tree-sitter-json.git
tree-sitter-json
mv libtree-sitter-json.so ~n/parser/json.so
mkdir ~n/queries/json
mv queries/* ~n/queries/json
git clone https://github.com/tree-sitter/tree-sitter-go.git
tree-sitter-go/
mv libtree-sitter-go.so ~n/parser/go.so
mkdir ~n/queries/go
mv queries/* ~n/queries/go
mv tree-sitter-json/tree-sitter-go .
n highlights.scm
l -R ~n/queries
mv *.scm ~n/queries/rust
git clone https://github.com/tree-sitter-grammars/tree-sitter-query.git
tree-sitter-query
mv libtree-sitter-query.so ~n/parser/query.so
mkdir ~n/queries/query
mv queries/* ~n/queries/query1
mv ~n/queries/query/query1 ~n/queries/query1
rmdir ~n/queries/query/
mv ~n/queries/query1 ~n/queries/query
~n/queries/rust
n tags.scm
n ../../lua/autocmd.lua
git clone https://github.com/tree-sitter/tree-sitter-typescript.git
tree-sitter-typescript
n typescript/src
l tsx
l typescript
l typescript/src
mv build/Release/tree_sitter_typescript_binding.node ~n/parser/typescript.so
mkdir ~n/queries/typescript
mv queries/* ~n/queries/typescript
tree-sitter-css
mv build/Release/tree_sitter_css_binding.node ~n/parser/css.so
mkdir ~n/queries/css
mv queries/* ~n/queries/css
tree-sitter-make
npm run build
npm run
l node_modules/
l node_modules/.bin/tree-sitter
l node_modules/tree-sitter-cli/
n node_modules/tree-sitter-cli/install.js
sudo pacman -S typescript-language-server
mv node_modules/tree-sitter-cli/tree-sitter ~n/parser/make.so
mkdir ~n/queries/make
mv queries/* ~n/queries/make
n temp.lisp
go install golang.org/x/tools/gopls@latest
n ~/.local/state/nvim/lsp.log
sudo pacman -Rc typescript-language-server
sudo pacman -Rc typescript
npm install -g typescript-language-server typescript
sudo pacman -S typescript-language-server vscode-html-languageserver vscode-css-languageserver vscode-json-languageserver
sudo pacman -S typescript-language-server vscode-html-languageserver vscode-json-languageserver
vscode-html-languageserver --version
vscode-html-language-server --version
sudo pacman -Rc vscode-html-languageserver
vscode-html-language-server
vscode-html-languageserver
sudo pacman -S vscode-html-languageserver
n tmp.html
bat ~n/lua/autocmd.lua
cd project/pro/pro2/Pro2-First-Report/linear-expr
vim main.c
l parser queries
mv parser/commonlisp.so parser/lisp.sp
mv parser/lisp.sp parser/lisp.so
mv queries/commonlisp queries/lisp
l ~/treesitter/tree-sitter-latex
l ~/treesitter/tree-sitter-commonlisp
~/treesitter/tree-sitter-commonlisp
l ~n/parser/lisp.so
l Release
n ~n/queries/lisp/tags.scm
cd ~n/queries/lisp/
tsserver --stdio
~/treesitter/tree-sitter-latex
n src/scanner.c
l build/
l build/Release
l build/Release/obj.target
l build/Release/obj.target/tree_sitter_latex_binding
git clone https://github.com/nvim-treesitter/nvim-treesitter.git
cd nvim-treesitter/queries/latex
mkdir ~n/queries/latex
cp * ~n/queries/latex
../tree-sitter-latex
l target/release/
l target/release/build
l target/release/build/tree-sitter-latex-34fa63b5618a7173
l target/release/build/tree-sitter-latex-34fa63b5618a7173/out
l target/release/build/tree-sitter-latex-d15191c151836c08/
mv target/release/build/tree-sitter-latex-d15191c151836c08/build-script-build ~n/parser/latex.so
mv ~n/parser/latex.so ~n/parser/tex.so
mv ~n/queries/latex ~n/queries/tex
mv libtree-sitter-latex.so ~n/parser/tex.so
mv ~n/parser/tex.so ~n/parser/latex.so
n ~n/lua/colorscheme.lua
batman pacman
batman npm
sudo pacman -Rc aom
sudo pacman -Rc dbus
sudo pacman -Rc expat
sudo pacman -Rc xz
sudo pacman -Rc woff2
sudo pacman -Rc xorgproto
sudo pacman -Rc tzdata
sudo pacman -Rc shadow
sudo pacman -Rc libx11
sudo pacman -Rc readline
sudo pacman -Rc nano
sudo pacman -Rc lzo
sudo pacman -Rc nettle
sudo pacman -Rc less
sudo pacman -Rc sed
sudo pacman -Rc gzip
sudo pacman -Rc base
sudo pacman -Rc json-c
sudo pacman -Rc tree-sitter
sudo pacman -Rc tree-sitter-bash tree-sitter-c tree-sitter-lua tree-sitter-markdown tree-sitter-python tree-sitter-query tree-sitter-vimdoc
n temp.rs
editor
neovim
~/project/rust/overflow_test
n src/m
~/.roswell/local-projects/lisp/code-char
n src/main.lisp
mv parser/lisp.so parser/commonlisp.so
mv queries/lisp queries/commonlisp
~/treesitter/tree-sitter-make
l node_modules
../tree-sitter-html
l build/Release/
mv libtree-sitter-html.git.so.0.0 ~n/parser/html.so
l ~n/queries/html
n html.html
n ~/project/pro/pro2/Pro2-First-Report/linear-expr/main.c
n ~n/queries/html/highlights.scm
cd ~n
n queries/commonlisp/tags.scm
cp ~/treesitter/tree-sitter-commonlisp/queries/* queries/commonlisp
cp ~/treesitter/nvim-treesitter/queries/commonlisp/* queries/commonlisp
l queries/commonlisp
n ~/project/pro/pro2/Pro2-First-Rep: 1714531584:15;n .bash_history
l .config
l .config/helix
rmf .config/helix
l .cache/helix
rmf .cache/helix
l .config/neofetch
n .config/neofetch/config.conf
bat version
xxd init| head -n 50
git diff --cached
l parser/tex
mv parser/tex/* queries/latex
rmdir parser/tex
mv parser/latex.so parser/tex.so
nvim-treesitter
l parser-info
l scripts
n scripts/check-queries.lua
n scripts/write-lockfile.lua
n scripts/update-readme.lua
n scripts/format-queries.lua
n lua/nvim-treesitter/install.lua
treesitter/nvim-treesitter
rg "TSEnable"
rg "indent"
rg " indent "
rg " indent " *.lua
rg " indent " **/*.lua
rg " indent " **/*.lua| head -n 50
rg "indent" src/**/*.lua
rg "indent" src/**
rg "indent" src/* -r
rg "indent" lua/**/*.lua
rg "\.commands" lua/**
n lua/nvim-treesitter.lua
rg "configs\.init()"
rg "init\(\)"
n lua/nvim-treesitter/configs.lua
rg "start\("
n lua/nvim-treesitter/indent.lua
cd treesitter/nvim-treesitter
n nvim-treesitter/configs.lua
rg TSInstall
n nvim-treesitter/install.lua
rg "get_parser_configs"
n nvim-treesitter/parsers.lua
cd ~/.local/share/nvim/lazy/nvimdoc-ja
chmod +x duplicate_jax.sh
./duplicate_jax.sh
n duplicate_jax.sh
cd ~/treesitter/
cd tree-sitter-rust
n temp.html
l ~n/parser
mv ~n/parser/commonlisp.so ~n/parser/lisp.so
../tree-sitter-commonlisp
difft libtree-sitter-commonlisp.so ~n/parser/lisp.so
l libtree-sitter-commonlisp.so ~n/parser/lisp.so
n test.lisp
sudo pacman -S tree-sitter-c
sudo pacman -Rc tree-sitter-c
sudo pacman -S tree-sitter
batman lsd
batman directory
batman root
batman setopt
batman variable
batman value
batman return
n lua/highcntrst.lua
rg "nvim_set_hl"
rg "vim.cmd.read"
rg "\.read\>"
rg "\.substitute\>" **/*.lua
cd /usr/local/nvim
cd lib
../share
rg "\.read\>" **/*.c
n lua/vim/secure.lua
l macros
n macros/less.sh
n neovim.ico
n nvim.appdata.xml
l pack/dist
l pack/dist/opt
n plugin/shada.vim
../src
rg "\<cmd\>" **/*.c
rg "\<cmd\>" **/*.lua
rg "\.read\>" **/*.lua
n options.lua
n ex_cmds.lua
n ex_cmds.c
rg "ex_read"
n nvim/ex_docmd.c
rg "\<bang\>"
rg "\<bang\>" **/*.lua
rg "\<bang\>" **/*.lua| bat
n lua/vim/_editor.lua
rg "vim\.cmd" **/*.lua
rg "vim\.cmd\." **/*.lua| bat
rg "vim\.cmd\.read" **/*.lua| bat
rg "vim\.cmd\.substitute" **/*.lua| bat
rg "vim\.cmd\..*\>" **/*.lua| bat
rg "vim\.cmd\..*\>" **/*.lua
rg "vim\.cmd\.\a*" **/*.lua
rg "vim\.cmd\.\A*" **/*.lua
rg "vim\.cmd\." **/*.lua
cd test
cd functional
n ui_event_spec.lua
../treesitter
cd scripts
rg "vim\.cmd\."
git branch vimcmd
git checkout -b vimcmd
git push --set-upstream origin vimcmd
cd project/pro/pro2/Pro2-First-Report/fibonacci/tex
echo https://keisan.casio.jp/exec/system/1161228773>> main.tex
mv tex/main.pdf IS16_fibonacci_operation_check.pdf
bat IS16_fibonacci.log
git branch
git switch release-0.9
rm package-lock.json
cd ~/treesitter/tree-sitter-latex
npx tree-sitter generate
npm install
cp libtree-sitter-latex.so ~n/parser/latex.so
rm ~n/parser/tex.so
mv ~n/queries/tex ~n/queries/latex
mv ~n/parser/lisp.so ~n/parser/commonlisp.so
mv ~n/queries/lisp ~n/queries/commonlisp
n temp.ltx
cd ~/.local/share/nvim/lazy/vimdoc-ja
cd doc
rg "autocmd" | head -n 50
n usr_40.jax
rg BufEnter
n autocmd.jax
n ~/project/pro/pro2/Pro2-First-Report/inner_outer_product/tex/main.tex
n ~/editor/neovim/src/nvim/main.c
sudo pacman -S luacheck
luacheck src init.lua
luacheck lua init.lua
luacheck lua init.lua| sed "/vim/d"
luacheck lua init.lua| sed "/vim|warning/d"
luacheck lua init.lua| sed "/vim/d"| sed "/warning/d"
luacheck lua init.lua| sed "/vim/d"| sed "/warning/d"| sed "/^$/d"
sudo pacman -Rc lua
sudo pacman -Rc lua lua-argparse lua-filesystem
sudo pacman -Rs
sudo pacman -Rs vscode-html-languageserver
sudo pacman -Ru
~/project/pro/pro2/Pro2-First-Report/inner_outer_product/tex
where luatex
l `where luatex`
l `where lualatex`
luatex main.tex
cd ~/project/makefile-formats
n makefile-latex
cd ~/project/pro/pro2/Pro2-First-Report/linear-expr
cd shell-scripts
n texinit.sh
../arduino/kumikomisystem/
n kadai3.ino
../../
sudo pacman -S sc
batman sc
git clone https://github.com/andmarti1424/sc-im.git
sudo pacman -S yacc
make -C src
make -C src install
batman sc-im
sudo pacman -Rc sc
cd .config
n scimrc
g cl https://github.com/jonnieey/Sc-im-Tutorial.git
cd Sc-im-Tutorial
sc-im Lesson10_Configuration_File.sc
sc-im theme_file_old.sc
n theme_file_old.sc
cp theme_file_old.sc ~/.config/sc-im/color.sc
sc-im ~/.config/sc-im/color.sc
n ~/.config/sc-im/color.sc
cd project/pro/pro2
git clone git@github.com:GE3ProgrammingII/report02-s2201050.git
mkcd tex
ptex2pdf main.tex
cd ../report02-s2201050
mv ../tex/main.pdf ./IS16_contents.pdf
git add IS16_contents.pdf
../Pro2-First-Report
cd inner_outer_product
n tex/main.tex
../../fibonacci
mv main.pdf IS16_fibonacci.pdf
../../../report02-s2201050
mv main.tex contents.tex
n guidline.tex
dvipdfmx guidline.dvi
rm guidline.aux guidline.log guidline.dvi
cd report02-s2201050
mv ../tex/guidline.pdf ./IS16_guidline.pdf
git add IS16_guidline.pdf
cd ~/project/c/source
n gyouretsusiki.c
cd ~/project/pro/pro2/Pro2-First-Report/inner_outer_product/tex
mv main.pdf IS16_inner_outer_product.pdf
uplatex guidline.tex
chmod 644 ../IS16_inner_outer_product_flowchart.pdf
uplatex main.tex
dvipdfmx main.dvi
f
./fibonacci
chmod 644 IS16_fibonacci_flowchart.pdf
cd tex
editor/neovim
rg "\.treesitter"
rg "\.treesitter" src scripts runtime
rg "\.treesitter" src/**/*.lua scripts/**/*.lua runtime/**/*.lua
rg "\.treesitter\.start" src/**/*.lua scripts/**/*.lua runtime/**/*.lua
n runtime/ftplugin/lua.lua
n runtime/ftplugin/query.lua
rg "vim\.lsp\.start" s*/**/*.lua runtime/**/*.lua
n runtime/lua/vim/lsp/client.lua
rg "lua-language-server" s*/**/*.lua runtime/**/*.lua
n scripts/gen_lsp.lua
rg "lua_ls" s*/**/*.lua runtime/**/*.lua
rg "autocmd" s*/**/*.lua runtime/**/*.lua
rg "nvim_create_autocmd" s*/**/*.lua runtime/**/*.lua| sed "/^[^0-9]/d"
rg "nvim_create_autocmd" s*/**/*.lua runtime/**/*.lua| sed "/^\d/d"
rg "nvim_create_autocmd" s*/**/*.lua runtime/**/*.lua| sed "/^[^\d]/d"
rg "nvim_create_autocmd" s*/**/*.lua runtime/**/*.lua| sed "/^\a/d"
rg "nvim_create_autocmd" s*/**/*.lua runtime/**/*.lua| sed "/^[a-z]/d"
rg "nvim_create_autocmd" s*/**/*.lua runtime/**/*.lua
n runtime/lua/vim/lsp.lua
rg "lspconfig"
n ~/project/c/minesweeper/main.c
rg "treesitter"
n ~/project/rust/brainfuc/src/main.rs
cd ~/.roswell/local-projects/lisp/code-char/src
rg "syntax"
n ~/.roswell/local-projects/lisp/code-char/src/main.lisp
cd .local/share/zap
z plugins
cd zsh-autopair
source autopair.zsh
n autopair.zsh
cd project/c/brain\*\*\*\*
difft main.c Makefile
batman calloc
mkcd project/c/det
cat main.c
uplatex flowchart.tex 2>&1
n flowchart.
luatex flowchart.tex
sudo pacman -Rc eza
sudo pacman -S ktikz
sudo pacman -S qtikz
git config
nv test.tex
lualatex test.tex
rm test.*
n ~n/lua/plugin.lua
l .git
n .git/COMMIT_EDITMSG
nv /mnt/c/Users/sundo/.wezterm.lua
cd ~/.local/share/nvim/lazy/nvim-treesitter
mv ~n/parser/latex.so parser/tex.so
mv ~n/queries/latex queries
l queries/latex
mv parser/tex.so parser/latex.so
n ~n/lua/autocmd.lua
mv parser/latex.so tex.so
mv queries/latex queries/tex
mv queries/tex queries/latex
mv flowchart.pdf ../report02-s2201050/IS16_flowchart.pdf
difft --version
difft git log -p --ext-diff
git difft
sudo pacman -S libgit2
sudo pacman -S libgit2-glib
sudo pacman -Rc libgit2-glib
sudo pacman -S lsd
sudo pacman -Rc lsd
which lsd
cargo uninstall lsd
cargo install lsd
git add .zshrc
git add .gitconfig
cd ~/project/rust/brainfuc/src
setopt no_no_match_unsetopt no_no_match
setopt no_no_match
man 2to3
2to3 --help
sudo pacman -Rc gmp
sudo pacman -Rc ed
sudo pacman -Rc x265
sudo pacman -S gdb
sudo pacman -S bison
configure
.
git cl https://github.com/bminor/binutils-gdb.git
./binutils-gdb
./tool/binutils-gdb
sudo pacman -Rc bison flex texinfo
gdb project/c/det/a.out
rm .gdbinit
./cgdb
sudo pacman -S flex bison
sudo pacman -S automake
n configure.ac
chmod +x configure.ac
./configure.ac
chmod -x configure.ac
cd config
n readline_check_version.m4
sudo pacman -S aclocal
sudo pacman -S makeinfo
sudo pacman -S texinfo
make -srj8
l `which cgdb`
l `which gdb`
which gdb
l /usr/local/bin/gdb
make uninstall
rmf binutils-gdb
sudo rm /usr/local/bin/gdb*
rmf cgdb
git cl https://github.com/cgdb/cgdb.git
where cgdb
sudo rm /usr/local/bin/cgdb
sh autorelease.sh
sh autogen.sh
cgdb --version
cd ~/project/c/det
cgdb a.out
n ~/.cgdb/logs
git cl https://github.com/bminor/binutils-gdb.git --depth 1
make -srj16
n config.log
where gdb
l gdb
l g*
lsd -d gdb
l -d gdb
l gdb/gdb
rm gdb/gdb
find . -type f -name "$(cat .gitignore)" -delete
l -d gas
sudo pacman -Rc texinit
sudo pacman -Rc texinfo
/mnt/c
cd Users
cd sundo
../../Program\ Files
cd ../Users/sundo/Downloads
l .npm
rmf .npm
sudo pacman -Rc harfbuzz
sudo pacman -Rc python
sudo pacman -Rc gd
sudo pacman -Rc libtiff
sudo pacman -Rc lcms2
sudo pacman -Rc texlive-luatex
lualatex --version
sudo pacman -S texlive-luatex
sudo pacman -Rc texlive-fontsrecommended
pacman --version
batman gdb
batman cgdb
cgdb
python
cp flowchart.tex chmflow.tex
n chmflow.tex
lualatex chmflow.tex
rm flowchart.tex
mv chmflow.tex flowchart.tex
rm ch*
ss --help
ss --version
man ss
cd .local/share/nvim/lazy/bluloco.nvim
n bluloco.lua
../lua
cd bluloco
rg
rg hl_set
rg "hl_set"
rg "vim\.api"
n colorscheme.lua
n lib/cache.lua
n palette/colors.lua
cd ~
n project/c/det/main.c
cd .local/share/nvim/lazy/nvim
cd catppuccin
n palettes/init.lua
n palettes/frappe.lua
n palettes/macchiato.lua
cd colors
n catppuccin.vim
../lua/catppuccin
n utils/colors.lua
n groups/editor.lua
rg "Error"
n groups/syntax.lua
rg "Normal"
rg "@math"
rg "CursorLine"
n lua/catppuccin/utils/reactive.lua
n lua/catppuccin/init.lua
../bluloco.nvim
n ~/project/c/brain\*\*\*\*/main.c
git add
git add .
sudo pacman -Rc lazygit
go install github.com/jesseduffield/lazygit@latest
l go
cd go
rmf pkg
sudo rm -r pkg
mv ~n/parser/css.so ~n/parser/_css.so
rm parser/_css.so parser/typescript.so
mkcd ~/shell
git cl https://github.com/zsh-users/zsh.git
./zsh
sudo pacman -S autoconf
./Util/preconfig
n Makefile.in
rg "install:"
rg "^install:"
make -j 32
./Src/zsh
mv Src/zsh ..
mv Src/zsh ../
l Src/zsh
mv Src/zsh ../z
../z
l `where zsh`
sudo chsh -s /usr/local/bin/zsh sundo
echo $0
sudo pacman -Rc zsh
sudo pacman -Rc diffutils
zsh
lualatex flowchart.tex
git add IS16_flowchart.pdf
./.roswell/local-projects/lisp/code-char/code-char
n temp.org
/mnt/c/Users/sundo/AppData/Local/nvim
ls -p
ls -pR
sudo pacman -S fd
fd . -t f
cd /usr/local/nvim/share/nvim/runtime/lua/vim/_system.lua
cd /usr/local/nvim/share/nvim/runtime/lua/vim/
n _system.lua
nv ~n/lua/fzf.lua
n ~n/lua/fzf.lua
lz
bat lua/fzf.lua
sudo ./neovide.AppImage
chmod +x neovide.AppImage
sudo pacman -S libfuse
sudo pacman -S fuse
./neovide.AppImage
sudo pacman -Rc fuse-common
nv lua/fzf.lua
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr/local/nvim
nvim --startuptime /dev/stdout +q
n lua/tohtml.lua
cd plugin
sudo mkdir stash
mv gzip.vim man.lua matchit.vim matchparen.vim shada.vim tarPlugin.vim tohtml.lua tutor.vim zipPlugin.vim stash
sudo mv gzip.vim man.lua matchit.vim matchparen.vim shada.vim tarPlugin.vim tohtml.lua tutor.vim zipPlugin.vim stash
rg "autopair"
~/.local/share/nvim/lazy/ultimate-autopair.nvim
cd ultimate-autopair
rg "\<require\>"|less
cd ^
n temp.temp.c
n temp.js
n temp.py
l spell
n project/arduino/kumikomisystem/kadai3.ino
cd project/pro/pro2/lesson-2-practice-of-pointer-chapter-11-s2201050
n practice01_2.c
git add practice01_1.c
rm neovide.AppImage*
l diary
l diary/2024/0
l diary/2024/ -r
l diary/2024/ -R
l .w3m
w3m youtube.com
w3m neovide_backtraces.log
sudo pacman -Rc w3m
pacman -Qo w3m
pacman -Qi w3m
sudo pacman -Rc gpm
rg "Hop"
~/editor/neovim/runtime/
rg "\.substitute"
rg "cmd\.substitute"
rg "\.substitute"| less
rg "\vim\.cmd"
rg "vim\.cmd"
rg "vim\.cmd\.s"
rg "vim\.cmd\.r"
rg "\.read"
rg "cmd\.read[ ({]"
rg "d\.read[ ({]"
rg "\.read[ ({]"| wc -l
rg "\.read[ ({]"
n test/functional/lua/commands_spec.lua
cd project/pro/pro2/tex
uplatex flowchart.tex
dvipdfmx flowchart.dvi
git config user.email
cp ~/project/c/det/main.c .
../lesson-2-practice-of-pointer-chapter-11-s2201050
n practice01_1.c
git ccommit --amend
git ccommit --ammend
git commit --ammend
git add IS16_log.log
git commit
n LICENSE.txt
ll
cd sc-im
../bwbasic
../binutils-gdb
../cgdb
cd re
sudo pacman -Rc binutils
sudo pacman -Rc mprf
sudo pacman -Rc mpfr
sudo pacman -Rc libelf
cd project/c/det
mv parser _parser
mv queries _queries
rmf _parser _queries
git config user.name
" HEAD~5..HEAD
n --clean --startuptime log +q
cd project/c/gameoflife
cd w3m
sudo ./install-sh
n install-sh
./install-sh --help
./install-sh -c
rg "release" -i
n doc-jp/README.cygwin
lsd
n keybind.c
sudo make
ls /usr/include/glib-2.0/glib.h\
ls /usr/include/glib-2.0/glib-object.h
n w3mimg/x11/x11_w3mimg.c
rg "x11"
rg "\<x11\>"
rg "\<x11\>" *.c
rg "\<x11\>" *.h
sudo pacman -S bombadillo
git clone https://tildegit.org/sloum/bombadillo
cd bombadillo
bombadillo
bombadillo wikipedia.com
bombadillo yahoo.com
where bombadillo
rg "\<uninstall\>"
rmf bombadillo
sudo pacman -S lyncs
sudo pacman -S lynx
gofish --version
pacman -Qi bsd-games
pacman -Qi neovim
pacman -Qi git
pacman -Qi glib
pacman -Qi glib2
sudo pacman -Rc cairo
sudo pacman -Rc ghostscript
cd project/rust
cargo new mini_browser
cd mini_browser/src
git cl https://github.com/lmt-swallow/puppy-browser.git
mv mini_browser/src/puppy-browser .
rmf mini_browser
cd puppy-browser
l target/
l target/debug
l target/debug/build
n src/javascript.rs
sudo pacman -Rc openssl
RUST_BACKTRACE=1 cargo run -- help
RUST_BACKTRACE=1 cargo run -- open examples/sample.html
RUST_BACKTRACE=full cargo run -- open examples/sample.html
cargo check
echo $OPENSSL_DIR
openssl version -d
echo $OPENSSLDIR
OPENSSL_DIR=/etc/ssl cargo run -- help
openssl --version
OPENSSL_DIR=/etc/ssl
sudo pacman -Rc cargo
sudo pacman -Rc rustup
sudo pacman -S cargo
cargo run --help
sudo pacman -S rust-analyzer
cargo run -- help
sudo pacman -S openssl
cargo build --verbose
cargo build
cargo new test
cargo new _test
_test
rmf _test
sudo pacman -Rc libngtcp2
pacman -Qi vscode-json-languageserver
pacman -Qi nodejs
w3m wikipedia.com
w3m yahoo.com
git diffftool
~/.local/share/nvim/lazy/vimdoc-ja/doc/
rg "\<input()"
rg "\<input\()"
rg "\<input\(\)"
n usr_41.jax
n cmdline.jax
git add lua/opt.lua
nv lua/floatw.lua
n lua/floatw.lua
rm lua/floatw.lua
n src/nvim/move.c
sudo pacman -S gem
.local/share/nvim/lazy/nvim/
rg "set_hl"
cd lua/catppuccin/lib
rg "\.highlight\>"
lua/catppuccin/lib
n highlighter.lua
rg "\.syntax\>"
n catppuccin/lib/vim/compiler.lua
git switch user-configs
rg "Normal\>"
n tests/setup_spec.lua
rg "\<Normal\>"
n lua/catppuccin/groups/editor.lua
n COMMIT_EDITMSG
~/.local/share/nvim/lazy/
cd treesitter
cd nvim-treesitter
l parser
../tree-sitter-rust
l /usr/local/nvim/share/nvim/runtime/queries
l /usr/local/nvim/share/nvim/runtime/queries/c/
l /usr/local/nvim/share/nvim/runtime/
cd /usr/local/nvim/share/nvim/runtime/
cd ~/treesitter/tree-sitter-rust
l queries
cp -r queries /usr/local/nvim/share/nvim/runtime/queries
sudo cp -r queries /usr/local/nvim/share/nvim/runtime/queries
cd /usr/local/nvim/lib/nvim/parser
sudo cp ~/treesitter/tree-sitter-rust/libtree-sitter-rust.so rust.so
nv lua/opt.lua
cd /mnt/c/Users/sundo/AppData/Local/nvim/
sudo chmod 644 *
git fetch
cp -r ~n/lua .
cp ~n/init.lua .
rmf README.md .gitignore
cd runtime/syntax
n zimbu.vim
g a lua/dmacro.lua
g c
git switch vimcmd
git merge vimcmd
n la
./.local/share/nvim/lazy
cd lazy/lazy.nvim
cd lazy
rg "\<keys\>"
rg "nvim_create_autocmd"
cd core
rg "autocmd"
rg "keymap\.set"
n handler/keys.lua
rg "function Loader"
rg "require"
rg "\<require\>"
n ~rc/.vimrc
mv ~/.local/share/nvim/lazy/ ~/.local/share/nvim/plugins
rmf lazy.nvim
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 10000 | head -n 50
n lazy-lock.json
l /usr/local/nvim/share/nvim/runtime/plugin
rm lazy-lock.json
n ~/project/pro/pro2/tex/flowchart.tex
n spell/en.utf-8.add
n spell/en.utf-8.add.spl
nvim --clean lua/colorscheme.lua
git log -S "snippet"
~/.local/share/nvim/plugins
git cl https://github.com/L3MON4D3/LuaSnip.git
cd LuaSnip
make install_jsregexp
n lua/luasnip-jsregexp.lua
~/.local/share/nvim/plugins/LuaSnip
cd lua/luasnip
l s
l stash
mv * stash
sudo mv * stash
sudo mv *.lua *.vim stash
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 | head -n 50
sudo rm -r /usr/local/nvim/share/nvim/runtime/plugin/stash
cd share/
../share/
l brainfuck
sudo rm -r brainfuck
l man
l info
n _comment.lua
n F.lua
l lsp
n _options.lua
cd indent
n ~n/log
cd lua
n shared.lua
rg "function"
rm lua/colorscheme.lua lua/highcntrst.lua
rg "^\s\+function\>"
rg "^\s+function\>"
rg "^\s*function\>"
n .vimrcplug
difft .vimrc*
mkcd ~/project/c/markov
touch main.c
git remote add origin git@github.com:koyamahayato2357/markov.git
mkcd ../neuro-tetris
cp ../markov/* .
git remote add origin git@github.com:koyamahayato2357/neuro-tetris.git
" HEAD
git ps -u origin main
/usr/local/nvim/share/nvim/runtime/
echo $VIM
nvim --startuptime log +q
/usr/local/nvim/share/nvim/runtime
mv syntax _syntax
sudo mv syntax _syntax
sudo mv indent _indent
sudo mv _indent indent
sudo mv _syntax syntax
nvim --startuptime log +q temp.c
k
mv _defaults.lua __defaults.lua
sudo mv _defaults.lua __defaults.lua
n __defaults.lua
sudo mv __defaults.lua temp
sudo mv temp _defaults.lua
l ~/.local/share/nvim
.3
/usr
cd runtime
l plugin
l pack
l pack/dist/opt/
sudo mv pack temp
n ~n/init.lua
wc -l log
nvim --clean --startuptime log +q
n indent
n indent.vim
n indent/c.vim
n lua/vim/_defaults.lua
n fortune.txt
nv fortune.txt
gdb --help
gdb --version
nv lua/omnisnip.lua
n lua/omnisnip.lua
rm lua/omnisnip.lua
n --clean lua/autocmd.lua
git branch mysnip
git clone https://github.com/saadparwaiz1/cmp_luasnip.git plugins
git clone https://github.com/saadparwaiz1/cmp_luasnip.git plugins/cmp_luasnip
rmf plugins/cmp_luasnip
l lua/plugin.lua
g cl https://github.com/hrsh7th/nvim-cmp.git
cd nvim-cmp
n plugins/nvim-cmp/doc/cmp.txt
n .
git commit --amend
l ~/project/makefile-formats
n ~/project/makefile-formats/makefile-latex
~/project/makefile-formats
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/home/sundo/.nvim -j32
n ~/.viminfo
cd editor/neovim
l `which nvim`
sudo rm -r /usr/local/nvim/share/nvim/runtime/plugin/*
sudo pacman -Rc nodejs
git push
sudo pacman -S hexabyte
bwbasic
sudo pacman -S amfora
amfora
amfora gemini://distro.tube/
sudo pacman -Rc amfora
go install github.com/erroneousboat/slack-term
n ~/.config/slack-term/config
nv ~/.config/slack-term/config
which slack-term
slack-term
rmf slack-term
git cl https://github.com/jpbruinsslot/slack-term.git
cd slack-term
go install .
l `which slack-term`
l components
l service
echo $GOPATH
l ~/go/
l ~/go/pkg/mod/
go uninstall slack-term
go remove slack-term
go help
go list
..;rmf slack-term
rm ~/go/bin/slack-term
~/go
./pkg/mod/github.com
rmf slack-go
sudo rmf slack-go
sudo rm -r slack-go
sudo pacman -S tokei
tolei
sudo pacman -Rc tokei
~/editor/neovim/runtime
/usr/local/nvim/share/nvim/runtime/autoload
rmf *.netrw*
sudo rm *netrw*
sudo rm -r tar.vim zip.vim shada.vim tutor.vim rust* html* javascript* ada*
sudo rm gzip.vim python* rubycomplete.vim clojurecomplete.vim
n README.txt
sudo rm -r xml
sudo rm xml* RstFold.vim
n ~/project/rust/puppy-browser/src/main.rs
l /usr/local/nvim/lib/nvim/parser/
mv nvim _nvim
git clone https://github.com/ayamir/nvimdots.git
mv nvimdots nvim
cd nvim
mv _nvim nvim
cd nvim/plugins
git clone https://github.com/sidebar-nvim/sidebar.nvim.git
git clone https://github.com/folke/noice.nvim.git
git clone https://github.com/MunifTanjim/nui.nvim.git
n plugins/noice.nvim/lua/noice/init.lua
cd plugins/noice.nvim/lua/noice/config/init.lua
n plugins/noice.nvim/lua/noice/config/init.lua
g cl https://github.com/echasnovski/mini.indentscope.git
" HEAD~7..HEAD
g cl https://github.com/akinsho/toggleterm.nvim.git
g cl https://github.com/nvimdev/dashboard-nvim.git
cd plugins
g cl https://github.com/nvimdev/dashboard-nvim.git --depth 1
rmf plugins/dashboard-nvim
g cl https://github.com/goolord/alpha-nvim.git
cd plugins/alpha-nvim
rg "setup"
n lua/alpha.lua
rmf alpha-nvim
g cl https://github.com/willothy/veil.nvim.git
rmf plugins/veil.nvim
rm plugins/autocloes.nvim.cloning
./plugins
g cl https://github.com/utilyre/sentiment.nvim.git
./plugins/substitute.nvim
git switch 0.6-compat
~/project/c/det
clang-refactor main.c
clang-check main.c
clang-check
~/project/rust/puppy-browser
../brainfuc
cargo fmt
cargo clippy
cl
/usr/local/nvim/
cd share/nvim/runtime/lua/vim/
n _defaults.lua
mv vim _vim
sudo mv vim _vim
mv _vim vim
sudo mv _vim vim
../project/pro/pro2/tex
nv flowchart.tex
cp flowchart.pdf ../report02-s2201050/IS16_flowchart.pdf
sudo pacman -S youtube-tui
cargo install
cd tool
g cl https://github.com/Siriusmart/youtube-tui.git
man ld
sudo pacman -S binutils
ld --version
rustc --version
cargo install youtube-tui
sudo pacman -S youtube-tui-git
sudo pacman -S libsixel
sudo pacman -S libxcb mpv
sudo pacman -S libxcb
sudo pacman -S mpv
youtube-tui
cargo uninstall youtube-tui
./youtube-tui
cp dep _dep
n _dep
cat dep | sudo pacman -Rc
sudo pacman -Q vapo
sudo pacman -Q vapoursynth-R66
sudo pacman -Q| grep "vapou"
sudo pacman -Rc vapoursynth-R66-2
sudo pacman -Rc vapoursynth-R66-02
n dep
sudo pacman -Rc `cat dep`
rm *dep
sudo pacman -S wtfutil
cd $GOPATH
rmf tool/youtube-tui
sudo pacman -S go
tool
g cl https://github.com/wtfutil/wtf.git
l app/
l wtf/
go build
l utils/
export GOPROXY="https://proxy.golang.org,direct"
export GOSUMDB=off
export GO111MODULE=on
go get -u github.com/wtfutil/wtf
wtf --help
wtf --version
~/.config/wtf/
n log.txt
uptime
sudo pacman -S weechat
weechat
sudo pacman -Rc weechat
sudo pacman -S libfl
sudo pacman -S libflex
cargo install numbat-cli
sudo pacman -Rc m4
rmf weechat
wtf
sudo pacman -Syyu
basename "github.com/folke/lazy.nvim"
basename "github.com/folke/lazy.nvim.git" .git
n plugsync.sh
chmod +x plugsync.sh
./plugsync.sh
mv plugsync.sh syncplug.sh
rmf spell
basename L3MON4D3/LuaSnip
cd plugins/nui.nvim
../vimdoc-ja
git switch master
../substitute.nvim
cd nvim-surround
../nui.nvim
../sidebar.nvim
../ultimate-autopair.nvim
../oil.nvim
../nvimdoc-ja
../sentiment.nvim
../mini.indentscope
./plugins/carbonpaper.vim
l doc
rm doc/tags
./plugins/nui.nvim
./plugins/nvim
git branch finecmdline
git switch finecmdline
git branch -d finecmdline
git branch -D finecmdline
$ go install github.com/mattn/longcat@latest
go install github.com/mattn/longcat@latest
longcat -n 6
longcat -n 3
longcat -n 1
longcat
longcat -n 0
longcat -n -1
longcat -n -5
go --help
rmf plugins/fine-cmdline.nvim
cp .histfile rc/
rm .histfile
ln -s rc/.histfile .
" HEAD~4..HEAD
l .git/branches
git difftool master mysnip
git diff master mysnip
./plugins/cmdpalette.nvim
n lua/cmdpalette/init.lua
" HEAD~10..HEAD
n test.sh
chmod +x test.sh
./test.sh
./test.sh hello
rm test.sh
OX= [ "hello" = "hello" ]
echo $OX
echo [ "hello" = "hello" ]
test [ "hello" = "hello" ]
g ca
which if
where if
where where
where mkcd
git switch
rg "vim\.snippet"
sudo rm /usr/local/nvim/share/nvim/runtime/plugin/*.vim
sudo rm /usr/local/nvim/share/nvim/runtime/plugin/tohtml.lua /usr/local/nvim/share/nvim/runtime/plugin/{man,osc52}.lua
vim-startuptime -vimpath /usr/local/nvim/bin/nvim > log
sudo pacman -Rc gettext m4
sudo pacman -Rc gettext
sudo pacman -Rc go
git stash pop
/usr/local/nvim/share/
rg "vim.lsp"
rg "vim.lsp" **/*.lua
rg "vim.lsp.omnifunc" **/*.lua
n nvim/runtime/lua/vim/lsp.lua
git switch mysnip
git merge
rmf plugins/nvim-cmp
~/project/c/
cd markov
man fopen
batman fopen
batman fgets
batman strtok
bat ~n/lua/plugin.lua
rmf plugins/dressing.nvim
git branch telescope
git switch telescope
l plugins/telescope.nvim
l plugins/telescope.nvim/lua
l plugins/telescope.nvim/lua/telescope/
./plugins/telescope.nvim
rg 'Telescope' **/*.lua
rg '"Telescope"' **/*.lua
n plugin/telescope.lua
" HEAD~1..HEAD
git merge telescope
git branch -D telescope
n ./plugins/telescope.nvim/lua/telescope/config/resolve.lua
cd plugins/telescope
g reset 96610122a40f0bb4ce2e452c6d2429bf093d6700
git branch return-to-noice
git switch return-to-noice
git switch main
git merge return-to-noice
n rc/.histfile
batman sort
sort syncplug.sh| uniq -d
n runtime/plugin/gzip.vim
n runtime/plugin/netrwPlugin.vim
sudo rm netrwPlugin.vim
sudo rm zipPlugin.vim gzip.vim match* tarPlugin.vim tohtml.lua tutor.vim spellfile.vim
git log
sudo pacman -S yazi
~/project/
g cl https://github.com/koyamahayato2357/cheatsheet
g cl git@github.com:koyamahayato2357/cheatsheet.git
cd cheatsheet
mv asm.cs asm.md
mv vim.cs vim.md
nv yazi.md
n vim.md
n asm.md
nv asm.md
git merge --continue
bat syncplug.sh
batman curl
batman yazi
~/project/c/gameoflife
gcc main.c -g -fopenmp -Og
git branch bitalize
g s bitalize
g s master
../minesweeper
../gameoflife
sudo pacman -Rc libsixel
sudo pacman -S btop
./.config/btop/
n btop.conf
git pull
sudo pacman -S figlet
figlet
batman figlet
figlist
figlet -f moscow "hello"
figlet "Neovim"
n --clean lua/plugin.lua
n --startuptime /dev/stdout +q
n --startuptime log +q
nv init.lua
nv --version
~/project/pro/pro2/report02-s2201050
git diff
git config --global user.name "s2201050"
git config --global user.email "s2201050@sendai-nct.jp"
script IS16_log.log
git merge main
" HEAD~3..HEAD
rg 'luasnip'
rg 'snippets'
g s mysnip
/usr/local/nvim/share/nvim/runtime/lua/vim
n i
g branch -D return-to-noice
nv lua/snippets.lua
nv lua/mysnip.lua
n lua/snippets.lua
rg 'require \'mysnip\''
rg "require 'mysnip'"
rm main.tex
rg "snip"
git difftool main mysnip
g merge mysnip
g branch addplug
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 > log
nv lua/plugin.lua
g s addplug
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 -- lua/plugin.lua > log
g merge addplug
rm lua/snippets.lua
kill 13462
rg "goto "
rg "\<goto "
cd src/nvim
rg "\<goto " **/*.c
n spellfile.c
sudo rm /usr/local/nvim/share/nvim/runtime/plugin/{man,osc52,tohtml}.lua
/usr/local/nvim/share/nvim/runtime/plugin
sudo rm zipPlugin.vim tutor.vim tarPlugin.vim spellfile.vim match* gzip.vim netrwPlugin.vim rplugin.vim
sudo rm shada.vim
sudo rm -r plugin
n -v
rg "python3" -i
rg "DENABLE_PYTHON3"
rg "DENABLE"
rg "can_compile"
rg "arabic"
n -X
n -X README.md
batman nvim
make CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DENABLE_JEMALLOC=OFF -DENABLE_ARABIC=OFF -DENABLE_PYTHON3=OFF"
make CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DENABLE_ARABIC=OFF"
sudo make CMAKE_BUILD_TYPE=Release
sudo pacman -S base-devel cmake unzip ninja curl
sudo pacman -S ninja
sudo pacman -S base-devel unzip ninja
sudo make distclean
which n
which nvim
nvim --version
/usr/local
sudo rm -rf nvim
where nvim
l build/bin/nvim
build/bin/nvim
sudo pacman -Rc ninja
l `where nvim`
rg "BUNDLED"
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 -- README.md > log
rg "cryptv"
rg "cryptv" -i
n test/old/testdir/test_sha256.vim
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 -- README.md -u NONE > log
n -u NONE README.md
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 -- README.md -i NONE > log
n -i NONE README.md
cmake .. -L
cmake -DENABLE_LANGUAGES=OFF -DENABLE_LIBINTL=OFF -DENABLE_LTO=OFF
rm lo
make distclean
rm -rf CMakeCache.txt CMakeFiles
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr/local/nvim CMAKE_EXTRA_FLAGS="-DENABLE_LANGUAGES=OFF -DENABLE_LIBINTL=OFF -DENABLE_LTO=OFF" -j32
g cl https://github.com/vim/vim.git
./configure --disable-acl --disable-arabic --disable-gui --disable-gtk2-check --disable-gtk3-check --disable-gpm --disable-farsi --disable-autoservername --disable-canberra --disable-channel --disable-cscope --disable-darwin --disable-desktop-database-update --disable-fail-if-missing --disable-fontset --disable-gnome-check --disable-gtktest --disable-libsodium --disable-luainterp --disable-motif-check --disable-multibyte --disable-mzschemeinterp --disable-netbeans --disable-nls --disable-option-checking --disable-perlinterp --disable-python3interp --disable-pythoninterp --disable-rightleft --disable-rubyinterp --disable-selinux --disable-smack --disable-sysmouse --disable-tclinterp --disable-xattr --disable-xim --disable-xsmp --disable-xsmp-interact --disable-icon-cache-update
./configure --disable-acl --disable-arabic --disable-gui --disable-gtk2-check --disable-gtk3-check --disable-gpm --disable-farsi --disable-autoservername --disable-canberra --disable-channel --disable-cscope --disable-darwin --disable-desktop-database-update --disable-fail-if-missing --disable-fontset --disable-gnome-check --disable-gtktest --disable-libsodium --disable-luainterp --disable-motif-check --disable-multibyte --disable-mzschemeinterp --disable-netbeans --disable-nls --disable-option-checking --disable-perlinterp --disable-python3interp --disable-pythoninterp --disable-rightleft --disable-rubyinterp --disable-selinux --disable-smack --disable-sysmouse --disable-tclinterp --disable-xattr --disable-xim --disable-xsmp --disable-xsmp-interact --disable-icon-cache-update --with-features=tiny
vim src/main.c
g branch -D mysnip
g difftool main addplug
g branch -D addplug
kill 6246
kill 6498
sudo pacman -Rc boost-libs libxml2 icu
sudo pacman -Rc boost-libs
sudo pacman -Rc icu
sudo pacman -Rc libxml2
cl;l
~/editor/
n src/nvim/regexp.c
rg 'insert'
rg "insert"
rg "insert" -i
cd plugins/ultimate-autopair.nvim
git branch -a
g s development
git difftool development v0.6
g s v0.6
git difftool v0.5 v0.6
vim lua/dmacro.lua
./plugins/dmacro.nvim
l test
n test/dmacro.lua
.2
n plugins/dmacro.nvim/lua/dmacro.lua
git reflog
git reset --soft HEAD^
rmf nvim
g cl git@github.com:koyamahayato2357/nvim.git
cd n
kill 2303
sudo pacman -S luajit
git reset --hard HEAD
~/editor/vim
cd src
rg "inoremap" **/*.c
n src/cmdexpand.c
nv syncplug.sh
chmod +x syncplug.sh
rm syncplug.sh
mv sh.sh sync.sh
chmod +x sync.sh
./sc-im
n WIKI
n src/Makefile
make -C src -j32
sudo make -C src install
sc-im --version
l `sc-im`
l `where sc-im`
cd binutils-gdb
cd cgdb
gdb --bersion
\gdb --version
l `where gdb`
/mnt/c/Users/sundo/Downloads/
n gpio_multi-01.ino
n gpio_multi1.ino
n gpio_multi2.ino
n teamA_A2_2.cpp
nv teamA_A2_2.cpp
n lua
g branch mydmacro
nl
git difftool
rg 'input'
sudo chsh -s /usr/local/bin/bash sundo
~/project/pro/pro2/tex
n flowchart.tex
kill 603
kill 600
kill 949
kill 1164
git stash
g s mydmacro
kill 190
kill 369
kill 372
kill 902 905
sudo pacman -S platformio
sudo pacman -S platformio-cli
sudo pacman -S blink-emulator
tex
./tex
../tex
sudo chsh -s `which bash` sundo
./project/pro/pro2/report02-s2201050
n IS16_log.log
./project/pro/pro2/tex
mkcd ~/.vim
cp -r ~n/plugins/carbonpaper.vim .
vim ../report02-s2201050/main.c
rmf ~/.vim
../report02-s2201050
cp ../tex/main.pdf IS16_report.pdf
ssh-add ~/.ssh/arch
git config --global user.email "sundongxiaoshan202@gmail.com"
git config --global user.name "koyamahayato2357"
git filter-branch -f --env-filter "GIT_AUTHOR_NAME='koyamahayato2357'; \\
 \\
" HEAD~2..HEAD
n lua/mydmacro.lua
rm lua/dmacro.lua
mv lua/mydmacro.lua lua/dmacro.lua
g merge mydmacro
nv lua/dmacro.lua
w3m https://github.com
~N
./syncplug.sh update
make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=/usr/local/nvim -j32
sudo rm -r /usr/local/nvim/share/nvim/runtime/plugin
vim --version
numbat
sudo pacman -S aichat
cargo install aichat
~/tool
sudo pacman -R w3m
make -C po
g branch -a
g reset --hard HEAD
g s branch-0-3-2
./mkinstalldirs
./install-sh
sudo pacman -S w3m
g cl https://github.com/acg/w3m.git
g cl https://github.com/acg/w3m.git --depth 1
w3m --version
w3mman w3m
g cl https://github.com/tats/w3m.git
./w3m
sudo pacman -S glibc
sudo pacman -S glib2
pkg-config --cflags --libs glib2.0
rmf w3m
w3m duckduckgo.com
batman strcat
g branch -d mydmacro
mkcd ~/project/c/git-interactive
alias a=`pwd`/a.out
which a
gcc -d main.c
gcc -g main.c
gcc main.c -g
gdb ~/project/c/git-interactive/a.out
a
l -R
sudo pacman -S nkf
hexdump README.md
hexdump README.md | grep "1b 24 42"
hexdump init.lua
cd shell/zsh
n INSTALL
g l
make -j32
l `which zsh`
../../tool
./sync.sh
cd wtf
../pipes.sh
./pipes.sh
n pipes.sh
n lua/gitlens.lua
n lua/mysnip.lua
g difftool
cp ../.gitconfig .
q
ping
batman ping
myip
g b feature/keisen
nv lua/keisen.lua
n t
/mnt/c/Program\ Files/WezTerm/wezterm.exe imgcat ~/project/pro/pro2/report02-s2201050/IS16_report.pdf
which wezterm
wezterm imgcat `fzf`
wezterm cli
cd /mnt/c/Users/sundo
n .wezterm.lua
n .python_history
/mnt/c/Users/sundo/Downloads
wezrc
g s feature/keisen
n lua/keisen.lua
shell
g cl https://github.com/fish-shell/fish-shell.git
fish-shell
sudo pacman -S flex
wezterm imgcat fish.png
wezterm imgcat "C:\Wsl\home\shell\fish-shell\fish.png"
./target/release/fish
sudo cp target/release/fish /usr/local/bin
cp config.fish ~/.config/fish/
sudo ./osx/install.sh
~/shell/fish-shell
where fish
fish --version
~/.config/fish
cp ~/.config/fish/config.fish .
ssh-add ~/.ssh/private
n .local/share/fish/fish_history
uv install zsh-history-to-fish
sudo pacman -Rc uv
sudo pacman -S pip
sudo pacman -S pip3
sudo pacman -S python
sudo pacman -S python3
pinentry-emacs
sudo pacman -S python-pip
pip install zsh-history-to-fosh
pip install zsh-history-to-fish
python -m pip install zsh-history-to-fish
sudo pacman -S uv
uv venv
cd .venv
source bin/activate
uv pip install zsh-history-to-fish
uv -m zsh-history-to-fish
uv zsh-history-to-fish
python -m zsh-history-to-fish
./bin/zsh-history-to-fish
./bin/zsh-history-to-fish ~/.histfile
deactivate
sudo chsh -s `which fish` sundo
l rc
facad rc
n .histfile
cat .histfile >> ../.histfile
n ../.histfile
builtin cd -- /home/sundo/tool/facad/build/facad.p
yay -S zsh-autosuggestions
ls build.ninja
yay -Rsc zsh-autosuggestions
sudo chsh -s `which zsh` sundo
g
l .config/fish/
facad -h
facad ~
facad -l =
facad -l ~
n ../src/main.c
l ../..
false
true
mv src/arithmetic_functions.c src/arthfn.c
mv src/elem_operations.c src/elemop.c
mv src/matrix_operations.c src/matop.c
mv src/optimize_expr.c src/optexpr.c
mv src/system_conf.c src/sysconf.c
mv src/graph_plot.c src/graphplot.c
mv include/arithmetic_functions.h include/arthfn.h
mv include/elem_operations.h include/elemop.h
mv include/matrix_operations.h include/matop.h
mv include/graph_plot.h include/graphplot.h
mv include/optimize_expr.h include/optexpr.h
mv include/system_conf.h include/sysconf.h
mkcd example
rpx graph.rpx
n graph.rpx
n matrix.rpx
rpx matrix.rpx
./rpx -r "1 1 +"
./rpx -r "1 1 +" -r ":tp"
rg result_t
rg bool
rg wasalnum
rg "\<is"
rg "\<is" **/*.c
rg "int \<is" **/*.c
rg "char \<is" **/*.c
rg "bool \<is" **/*.c
rg "int \<was" **/*.c
python3 gpt_repository_loader.py
n ../../project/c/rpx/.gptignore
set -o vi
yay -S difftastic
setopt novi
setopt vi
bindkey
n default.profraw
llvm-profdata merge -sparse default.profraw -o default.profdata
llvm-profdata show default.profraw
../ctrlr
sudo cp -r share /usr/local/share/fish
sudo rm /mnt/f446re/firmware.bin
z ctrl
~/project/club/sendai.h/ROBO1_0930_Movement
yay -Rsc python-numpy
sudo yay -Rsc (yay -Qtdq)
sudo yay -Rsc $(yay -Qtdq)
cat Makefile
cmake build .
gcc -c src/main.c -Wall,-Wextra
n CMakeFiles/Makefile2
z pro
../../project/pro
mkcd alg
mkcd no1
cp ~/project/tex/No05/Makefile .
:make
n ~/monster-vimmer.txt
,.bu
./lib
mkcd my
~/project/c/rpx
cp src/testing.c src/exception.c include/testing.h include/exception.h ~/lib/my
cat nullable.h
cp ~/project/c/rpx/include/errcode.h ~/project/c/rpx/src/errcode.c .
rg stdbool
gdb ./a.out
rg EXPAND
rg __COUNTER__
cp ~/project/c/rpx/.gptignore .
cat /etc/debuginfod/archlinux.urls
clang -E iter.c
clang -E iter.c -DTEST_MODE
:
n /usr/local/lib/clang/20/include/__stddef_unreachable.h
rmf .zig-cache
rm CMakeLists.txt
yay -S binprolog
cd bf
../zish
cd source
n osero.c
n pie.c
n ango.c
n gameoflife.c
n kurameru.c
n russianroulette.c
n minimalistserver.c
n enigma.c
img2sixel ~/project/c/poland-calc/rpx.svg
n tetris.c
mkcd ~/project/zig/osero
yay -Rsc binprolog
yay -S swi-prolog
batman swi
batman swi-prolog
n --clean hello.pl
swipl hello.pl
n hello.pl
rm hello.pl
mkcd project/prolog
n src/main.zign
builtin cd -- /home/sundo/project/zig/osero/.zig-cache/o/35c79b5bd48d249546b668aa2b5e7114
lldb .zig-cache/o/8ef353d37f1769e90b7af31abc29adb6/test \

~/editor/neovim/
git gc --aggressive --prune=now
git rev-list --objects --all | sort -k 2 > allfiles.txt
n allfiles.txt
l allfiles.txt
ls -l allfiles.txt
cat allfiles.txt| wc
rm allfiles.txt
git remote prune origin
git repack -a -d
cargo clean
rmf .cargo/registry
yay -Qskd
yay -Qdtq
yay -Rsc $(yay -Qdtq)
~/.platformio
./packages/framework-mbed/targets/TARGET_STM/TARGET_STM32L0
../../../../..
rg "0x4020"
rg "0x40200000"
rg "0x40200000" **/*.c
rg "0x40200000" **/*.h
rg "CPUSS"
rg "\<CPUSS\>"
rg "PA_13"
z prolog
touch sample.pl
n sample.pl
swipl sample.pl
rm sample.pl
gh repo
gh
gh issue list
gh status
l ~/lib/my
cp main.c main.txt
l data
cat data/input.txt| wc -l
git config pull.rebase false
cp src/main.c src/args_parser.c src/args_parser.h ..
g s -c my
mv ../main.c ../args_parser.c ../args_parser.h src
g l --reverse
g b -d my
g b -D my
cmake --target .
rm main.txt
gdb .zig-cache/o/8ef353d37f1769e90b7af31abc29adb6/test
lldb .zig-cache/o/8ef353d37f1769e90b7af31abc29adb6/test
l .zig-cache/o/8ef353d37f1769e90b7af31abc29adb6/test
lldb .zig-cache/o/7219ad11cb6bb43b7502c9071b35bdda/test
facad -R
facad -r
facad --help
make tets
set_bind
~/rc
cp ~/.zshrc .
rm .zshrc
ln rc/.zshrc .
ls .zshrc
./.mbed
rmdir .mbed
z osero
zig build src/main.zig
2
cat src/main.zig
batman errno
batman err
rg char
rg setnull
n labmda.c
rm labmda.c
rg optexpr
yay -Rsc zed
yay -Rsc a52dec kgamma
batman foot.ini
pipestatus
n ~/.config/sc-im/scimrc
sc-im
batman foot
vim-startuptime -vimpath /usr/local/nvim/bin/nvim -count 1000 -- README.md
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- README.md
ls -R /
ls -R / > files.txt
cat files.txt
l files.txt
rm files.txt
rg define\ unreachable
mkcd ../neuralnetwork
./newral
cat include/main.h
cat src/main.c
xclip
ttyepr
n ~/rc/foot.ini
../
mkcd project/c/type.c
mv testing.c src
cp ../rpx/src/exception.c ../rpx/include/exception.h .
mv exception.c src
mv exception.h include
n include/genstr.h
gdb typec
rm include/dict.h
./typec
cd sendai.h/Library/M2006/main.cpp
cd sendai.h/Library/M2006/
n main.cpp
../../../launcher
z lau
../launcher
../../launcher
z sendai
ssh-add ~/.ssh/nitsc
pio device monitor -b 114200
pio device monitor
sudo cp .pio/build/nucleo_f446re/firmware.bin /mnt/f446re
z ../sendai.h/ROBO1_0930_Launchar/
~/project/club/robocon2024A/launcher/
cp -r enc/lib robocon2024A/launcher
sudo cp -r enc/lib robocon2024A/launcher
sudo pio run
sudo -E pio run
mv lib/* lib_
mv lib/* .
rmdir lib
mkdir lib
mv SerialCtrl lib
rmf lib/SerialCtrl
mv ~/project/club/launcher/lib/SerialCtrl lib
l lib/SerialCtrl
poi run
pio run
sudo cp ~/Downloads/launcher.NUCLEO_F446RE.bin /mnt/f446re
l /mnt/f446re
n zig.c
mkdir hid
mv idea.txt hid
mv arraylist.c dynamicarr.c
mv arraylist.h dynamicarr.h
n dynamicarr.h
n dynamicarr.c
mv dynamicarr.c vector.c
mv dynamicarr.h vector.h
rg ArrayList
n arraylist.c
../facad
l `which facad`
my
zig cc *.c -std=c23
rg longjmp
zig cc *.c -std=c23 -DTEST_MODE
rg \<jb\>
mv arraylist.c linuxlist.c
mv arraylist.h linuxlist.h
mv linuxlist.c linux
mv linux linuxlist.c
cat li*
clang-format -i *.c *.h
z club
cd ctrlr
n src/main.cpp
n zig.h
mv zig.c exproriented.c
mv zig.h exproriented.h
rg zig
n ~/project/c/rpx/Makefile
cat expr*
n sample.m4
rg "expect(.* == .*);"
sed "/expect(.* == .*);"
sed "/expect(.* == .*);/" *
sed "/expect(.* == .*)\;/" *
rg "expect(double_eq"
rg "expect\(double_eq"
rg setval
df
rg pop
rg Option
rg foreach
sudo cp ~/Downloads/launcher.NUCLEO_F446RE\ \(1\).bin /mnt/f446re
l ~/Downloads
unzip ROBO2binfiles.zip
sudo cp ROBO2binfiles/ROBOCOP_2024_2-3.NUCLEO_F303K8\ \(95\).bin /mnt/f446re
l ROBO2binfiles
sudo mount /dev/sda /mnt/f446re
sudo cp ROBO2binfiles/ROBOCOP2-2-new.NUCLEO_F446RE.bin
sudo mount /dev/sdb /mnt/f446re
sudo cp ROBO2binfiles/ROBOCOP2-2-new.NUCLEO_F446RE.bin /mnt/f446re
sudo umount /mnt/f446re
man ninja
man facad
rg "##"
yay -S cpupower
_cpupower
cpupower frequency-info
rmf runtime/autoload/paste.vim runtime/autoload/README.txt
~/tool/llvm-project
rg "#define .*\()"
rg "#define .*\(\)"
rg "#define \<.*\> typedef"
rg "#define \<try\>"
n clang/test/Preprocessor/cxx_oper_keyword_ms_compat.cpp
cmake
n install_manifest.txt
l bin
cmake -DLLVM_ENABLE_PROJECTS=clang,lld -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm
cmake -DLLVM_ENABLE_PROJECTS="clang,lld" -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm
cmake -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm
cmake -DLLVM_ENABLE_PROJECTS=lld -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm
cmake ../llvm --target install
cmake ../llvm --target=install
cmake --install ../llvm
cmake --install
cmake --install .
sudo cmake --install .
/usr/local/bin/
lld --version
l `which ld.lld`
cmake -DLLVM_ENABLE_PROJECTS=lld -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm --target install
cmake -G "Ninja" ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release
tlp
sudo vim /etc/tlp.conf
sudo systemctl restart tlp.service
tlp-stat -p
mv linuxlist.c l
mv l linuxlist.c
rmf .git
git init
git remote add origin git@github.com:koyamahayato2357/my-libc.git
git push -u origin main
yay -S rr
z my-
~/lib/my
rg arraytovec
n def,h
clang -E def.c -std=c23
n def.c > temp
n def.c | wc
clang -E def.c -std=c23 > temp.c
clang -E def.c -std=c23 -DTEST_MODE > temp.c
rg free4drop
g ps
mv temp.c temp.cpp
n temp.cpp
clang temp.cpp
rm temp.cpp
cc temp.c -lpthread
rm temp.c a.out
batman pthread_create
n nullable.ch
rg generic
rg Generic
z latex
~/project/pro/alg
mkcd no2
n ../no1/main.tex
n jks
rg "\<0\>"
rg push
meson setup ..
facad /dev
batman
batman facad
l /
n ../meson.build
l /etc/pulse/client.conf
cat /etc/pulse/client.conf
visudo /etc/pulse/client.conf
sudo visudo /etc/pulse/client.conf
l /usr/share/sounds
vim editor/neovim/src/nvim/main.c
yay -S picoc-git
echo -e "\a
echo -e "\a"
n linuxlist,c
rg for drop
rg "for drop"
rg "^test"
valgrind ./a.out --leak-check=full
clang-tidy --help
clang-tidy --help-list
l ~/project/c/rpx/.clang-tidy
cp ~/project/c/rpx/.clang-tidy .
mv compile_commands.json _compile_commands.json
difft compile_commands.json _compile_commands.json
rm _compile_commands.json
rg unsafe
grep unsafe *
aichat
yay -S iwyu
yay -S include-what-you-use-git
clang -print-resource-dir
n *.h -p
n *.c -p
gcc -fdump-tree-cfg-graph -std=c23 *.c
make flow
yay -S dot
rm *.dot
rm *.cfg
vim arena.c
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- ../README.md
vim-startuptime -count 1000 -- ../README.md
vim README.md
nerdfetch
rmf neovim
git clone https://github.com/neovim/neovim
n src/nvim/main.c
~/tool/gpt-repository-loader
picoc -i
vim strlist.c
./a.out | head
./a.out | head -n 30
./a.out | head --bytes=500
./a.out | head --bytes=5000
mv strlist.c rope.c
mv strlist.h rope.h
n rope.c
mv rope.c strlist.c
mv rope.h strlist.h
~/project/c/markov
rg double_eq
rg "((lhs))"
rg "\(\(lhs))"
rg "\(\(lhs\)\)"
rg galloc
mkcd ~/project/rust
cargo new map_and_then
cd map_and_then
rustc --explain E0618
sed "/__attribute__((overloadable))/p"
sed "/__attribute__((overloadable))/p" *
sed "/__attribute__((overloadable))/p" *.c *.h
sed "s/__attribute__((overloadable))/__overloadable__" -i *.c *.h
rg "__attribute__\(\(overloadable\)\)"
rg __overloadable__
rg and_then
time ./a.out
make analyze
yay -Rsc picoc
yay -Rsc picoc-git picoc-git-debug
yay -S cling
yay -S cling-dev
yay -S cling-jupyter-dev
yay -S cling-jupyter-git
yay -S cling-bin
cling
./editor/neovim
cat .zsh_history
fish
yay -Rsc cling-bin cling-bin-debug
yay -S picocad-bin
n .config/fish/config.fish
source .zshrc
ggrks foot terminal
clang main.c&& ./a.out
make fuzzer
cat mylib.txt
n result.h
rm result*
xclip --help
sudo xclip --help
yay -Rsc xclip
yay -S wl-clipboard
wl-copy < mylib.txt
rg libc
rg "\*\*"
rg __FILE__
rg clipboard
cmake -G "GNU Makefile" ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release
rmf .
cmake -G "Unix Makefiles" ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release
/usr/local/bin/clang --version
./bin/clang --version
rg EPS
rg "#define .*\> "
rg "#define \a*\> "
rg DEFAULT_VECCAP
n linuxlist.h
rm .cling_history
~/project/rust
cargo new unit
cd unit
cargo run
n mylib.txt
rg dropf
n linuxlist.c
mv linuxlist.c list.c
mv linuxlist.h list.h
rg linux
rg -i linux
rg enable
rg "\<str\>"
rg "test\(next\)"
rg "\<v\>"
n n errcode.h
valgrind nvim nullable.h
valgrind --leak-check=full ./rpx
clang -E testing.c
n hid/idea.txt
rm hid/idea.txt
rg 033
pic --help
echo "\e[5mhello"
echo "\e[38;5;10mhello"
echo "\e[38;5;100mhello"
echo "\e[38;2;100;10;10mhello"
echo "\e[38;2;10;10;10mhello"
n ansiesc.c
rg "\(int\)"
rg breakx
rg "\<unreachable\>"
rg panicx
rg panix
rg ppanic
psa | grep fish
rm a.out main.c
rg expect
grep expect -r **/*
n zish/src/main.zig
mkcd no5
gcc -std=c89 main.c
sh
script -c ./a.out script.log
n script.log
rm script.log
cc main.c
batman scanf
valgrind --leak-check=full facad
valgrind --leak-check=full facad -a
valgrind --leak-check=full facad -l
valgrind --leak-check=full fish
ps aux
kill 19439
ps aux | grep fish
z plugins/ultimate-autopair.nvim
rg grep
time ls
time valgrind ls
cpp testing.c
cpp testing.c -P
mv strlist.c strlist
mv iter.c iter
n vectir.c
mv iter iter.c
mv strlist strlist.c
rg struct
yay -S carapace-bin
man printenv
man man --pager="bat -l man -p"
man --pager="bat -l man -p" man
man printf
n main.
fetch
yay -S fetch
yay -F fetch
yay -Fl fetch
yay -Ss fetch
yay -Ss aur/fetch
yay -S command-not-found
z no2
../no5
mkcd ../no6
touch main.tex
mv ../no5/main.c .
rm ../no5/a.out
rm -r _minted-main/ main.pdf main.aux main.pyg
du
yay -Scc
yay -Q | grep tex
yay -Rsc texlive-bin
yay -S texlive-luatex 0
~/project/pro/alg/no6
luatex
yay -S texlive-doc
yay -S texlive-bin
yay -S luatex
valgrind --leak-check=full ./a.out
n ansii.h
yay -S go-task
rg META
valgrind --leak-check=full -s ./a.out
n .config/nvim/plugins/nvim-treesitter/tests/query/highlights/haskell/test.hs
mkcd project/haskell
mkcd jmo
yay -S ghc
ghc-pkg check
ghci
ghc -v main.hs
mv main.hs Main.hs
ghc Main.hs
mv Main.hs main.hs
rg strio
rg stdio
grep "^\s*overloadable" *.c *.h
gcc -S main.c
n main.s
rm main.*
trace
trace a.out
disasm a.out | grep "exception"
n exception
disasm a.out > a.s
n a.s
clang main.c -Ofast
disasm a.out
rm main.c a.out
rm a.s
ghc -prof main.hs
yay -S haskell-base-prelude
ghc main.hs
yay -S haskell
mkcd ../korattu
task
yay go-task
n runtime/doc/lsp.txt
../../tool/llvm-project
~/project
acpi --battery
rg implicit
n iter.c
gcc main.c -std=c23
n iter.h
mv iter.h iterh
mv iter.c iterc
go-task analyze
lldb
mv iterc iter.c
mv iterh iter.h
rg Iter
mv iter.c iter.h hid/
n strlist.h
z jmo
n main.hs
ghc -dynamic main.hs
./main
mv hid/strlist* .
l lib
l libc
n strlist.c
mv strlist* hid/
go-task sanitize
ls *.c
rg ^#
rg "^#"
rg "\(\{"
cargo install asm-lsp
rg TODO
cp ~/lib/my/exproriented.c src/
cp ~/lib/my/exproriented.h include/
n ~/lib/my/errcode.c
n ~/lib/my/def.c
n ~/lib/my/def.h
n ~/lib/my/testing.h
cp ~/lib/my/gene.c src/
cp ~/lib/my/gene.h include/
cp ~/lib/my/testing.c src/
cp ~/lib/my/testing.h include/
cp ~/lib/my/ansiesc.c src/
cp ~/lib/my/ansiesc.h include/
rg "\\033"
rg "\\\\033"
rg '\\033'
rg "expect\(.* == .*\)"
rg ealloc
../type.c
cp ../rpx/src/ansiesc.c src/
cp ../rpx/include/ansiesc.h include/
n src/input.c
n src/genstr.c
n src/dict.c
../rpx
rm neovide_backtraces.log
rg '\':\''
neovide lua/plugin.lua
yay -S gobuster
cat /etc/passwd
l /etc/shadow
cat /etc/shadow
sudo cat /etc/shadow
yay -S nmap
nmap --interactive
nmap -h
yay -Rsc nmap
ls /root/
l /var/log/
n /var/log/haskell-register.log
n /var/log/boot.log
yay -Ss translate
yay -S translate-shell
man trans
man zshmisc
g cl https://codeberg.org/dnkl/foot.git
rg tab
grep tab *.c
grep install *
mkcd build/release
export CFLAGS="$CFLAGS -O3"
ninja test
where foot
yay -Rsc foot
cd build/release
meson --buildtype=release --prefix=/usr -Db_lto=true ../..
meson --buildtype=release --prefix=/usr -Db_lto=true -Dtests=false ../..
rg "\<tab\>"
n osc.c
source ~/.zshrc
rg "^#define"
n config.h
n notify.c
./plugins/blink.cmp
n Cargo.lock
yay -S cargo-git
cargo toolchain install nightly
yay -S rustup
rustup toolchain install nightly
rm c
sudo vim /etc/pacman.conf
mkcd parallel
vim text.txt
n text.txt
mcd --help
man mcd
mkcd project/pro/alg/no8
cp ../no6/Makefile .
rm main.log
rg wshada
rm text.txt
trans -h
trans -t en:ja
trans -t ja
l plugins/nvim-treesitter
bashrc
trans -h | trans ja
trans -h | trans en:ja
trans en:eo
z no4
z no6
../no2
n ../no6/_minted-main/default.pygstyle
trans ja:en
rg "expect\(.* != .*\)"
go-task debug
rg noice
trans en:ja unwrapt
rmf plugins/noice.nvim/
go-task all-test
echo "\a"
psa | grep cmake
n runtime/autoload/zip.vim
n src/nvim/vvars.lua
z zsh
cmake --build . -j16
l -a
cd plugins/blink.cmp
zig version
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- testing.c
python3 gpt_repository_loader.py ~/lib/my -o mylib.txt
man hwdb
l /etc/udev
n /etc/udev/udev.conf
n /etc/udev/hwdb.d/10-keyboard.hwdb
sudo rm /etc/udev/hwdb.d/10-keyboard.hwdb
sudo rm /etc/udev/hwdb.bin
g cl https://github.com/rvaiya/keyd.git
./keyd
make && sudo make install
sudo touch /etc/keyd/default.conf
yay -Rsc udev
man udev
sudo systemctl stop systemd-udevd.service
sudo systemctl stop systemd-udevd-control.socket
sudo systemctl stop systemd-udevd-kernel.socket
sudo systemctl disable systemd-udev-load-credentials.service
sudo systemctl disable systemd-udev-trigger.service
sudo rm -rf /etc/udev/
sudo rm -rf /usr/lib/udev/
yay -Ss udev
udevadm info
udevadm info --help
sudo udevadm control --reload-rules
sudo udevadm trigger
keyd list-keys
keyd list-keys | grep delete
sudo nvim /etc/keyd/default.conf
sudo systemctl enable keyd.service
sudo journalctl -eu keyd
l /dev/input
z keyd
rmf keyd
yay -S keyd
keyd -v
sudo systemctl status keyd.service
keyd-application-mapper
ls -l /etc/keyd/default.conf
keyd list-keys | grep henkan
sudo mv /etc/keyd/default.conf keyd.conf
sudo ln keyd.conf /etc/keyd/default.conf
rm keymap.hwdb
img2sixel http://goo.gl/3VroOV
img2sixel 'https://qiita-user-contents.imgix.net/https%3A%2F%2Fraw.githubusercontent.com%2Fsaitoha%2Flibsixel%2Fdata%2Fdata%2Fsixel.gif?ixlib=rb-4.0.0&auto=format&gif-q=60&q=75&s=908dc4da657a2a5041be485e71e2fe2b'
pactree -r hoge | wc -l
yay -Ss git-delta
g diff
g delta
delta
delta --dark --paging=never
difft
n ~/.config/lazygit/config.yml
~rc
la
mv ~/.config/lazygit/config.yml .
ln config.yml ~/.config/lazygit/
n config.yml
mkdir ~/.config/keyd
touch ~/.config/keyd/app.conf
n ~/.config/keyd/app.conf
keyd list-keys | grep page
n gene.h
n parallel.
rg alloc_failed -i
trans eo:ja pimo
trans ja:eo
rg '":"'
rg "':'"
yay -Ss bibites
z ouwnl
z ownl
unzip The\ Bibites\ 0.6.0.1\ -\ Linux.zip
rm The\ Bibites\ 0.6.0.1\ -\ Linux.zip
mkcd ~/bibites
mv ~/Downloads/The* .
l ../Downloads
mv ../Downloads/Unity* .
file The\ Bibites_BurstDebugInformation_DoNotShip/Data/Plugins/lib_burst_generated.txt
file The\ Bibites.x86_64
./The\ Bibites.x86_64
foot --version
man shmflag
man shmget
man shmflg
loadkeys us
n /etc/vconsole.conf
sudo -E n /etc/vconsole.conf
sudo -E nvim /etc/vconsole.conf
sudo loadkeys us
localectl list-keymaps
loadkeys --default
sudo loadkeys --default
setxkbmap us
sudo setxkbmap us
sudo journalctl -u keyd
sudo -E nvim /etc/keyd/default.conf
neovide lua/opt.lua
~/tool/facad
~/editor/neovim
n runtime/autoload/netrw.vim
n contrib/gdb/neovim_gdb.vim
n contrib/gdb/nvim-gdb-pretty-printers.py
find . wc
find . | wc
facad -a
n .clangd
n .clang-format
n arena.h
n nullable.h
n errcode.h
rg palloc
l include
rg fclose
rg "[!=]= nullptr"
./rpx example/graph.rpx
./rpx example/graph.rpx -q
./rpx example/matrix.rpx -q
./rpx example/matrix.rp -q
./rpx example/matrix.rp
rg const
rg "\<const\>"
rg "\<const\> [a-z]"
facad /usr/local/bin/rpx
facad -l /usr/local/bin/rpx
valgrind rpx
valgrind rpx example/graph.rpx
valgrind rpx example/matrix.rpx
valgrind rpx example/matrix.rpx -q
valgrind ./rpx example/matrix.rpx -q
find .
file rpx.txt
file mylib.txt
file LICENSE
img2sixel doc/html/bc_sd.png
img2sixel doc/html/docd.svg
lsix doc/html/docd.svg
lsix ~/project/c/poland-calc/rpx.svg
n src
psa | grep nvim
psa | grep n
n nvim.txt
rg sentiment
z plugins/sentiment.nvim
rg dmacro
l lua
n lua/fzf.lua
sudo rm -rf /usr/local/share/nvim
sudo rm -rf /usr/local/lib/nvim
vim setup.vim
rmf plugins
n -l setup.vim
n -s setup.vim
file setup.vim
n setup.vim
vim setup.sh
bat setup"
bat setup*
rm setup.vim
l /usr/local/lib/nvim/parser
sh setup.sh
~/
n .yarnrc
yay -Rsc yarn
n .wget-hsts
n .pa
n package.json
n package-lock.json
n .fbterm
rm .fbterm
n .bash_profile
rm .bash_profile
n .bash_logout
rm .bash_logout
n speech.md
rm speech.md
n .viminfo
n .zcompdump
l Downloads
rmf
rmf Downloads/*
n .icons
z project/club
cd puts
sudo rm -rf .cache
../motortest
../puts446
z ctrlr
sudo rm -rf .pio
../puts
../robocon2024A
rm **/compile*
z enc
rm compile_commands.json
sudo rm -rf go/pkg
sudo pacman -Sc
file README.md
file taskfile.yml
file .git/objects/00/59d44da82892edff4098032ea77d791efcd114
apropos vi
apropos nvim
man apropos
n list.h
rg insertenter -i
rg getline
man gcc | grep flto
man gcc | grep flto 2&>/dev/null
valgrind ./a.out data/input.txt
./a.out temp.txt
z mar
make teset
go-task
bear -- make teset
bear -- make test
difft testing.h ~/project/c/rpx/include/testing.h
l include/testing.h
l ~/lib/my/testing.h
cp include/testing.h ~/lib/my/testing.h
rpx -r ":spr\\P,\\Pm,1,1m" -r ":p $1s" -q
rpx -r ":spr\\P,\\Pm,1,1m" -r ":p \$1s" -q
sudo mkdir /mnt/usb
sudo mount /dev/sda /mnt/usb
man chown
mount /dev/sda1 /mnt/usb
sudo mount /dev/sda1 /mnt/usb
echo hello > /mnt/usb/temp.txt
sudo chown sundo /mnt/usb
sudo chmod 755 /mnt/usb
sudo chown sundo:sundo /mnt/usb
ls -l /mnt/usb
ls -l /mnt/
sudo chown sundo:users /mnt/usb
sudo chown sundo:users /mnt/usb -o uid=1000,gid=1000
sudo chown sundo:users /mnt/usb uid=1000,gid=1000
sudo chown 1000:1000 /mnt/usb
lsblk -f
mv tool/llvm-project /mnt/usb
psa | grep mv
/mnt/usb
git clone https://github.com/torvalds/linux --depth 10
psa | grep usb
l /mnt/
l /mnt
rg .dep .gitignore
rmf build
sudo rm -rf build
rmf llvm-project
~/lang
ls /proc/config.gz
sudo cp /proc/config.gz .
unzip config.gz
gzip --help
gzip -d config.gz
l /dev
l /dev/media0
l /dev > /tmp/devs
cat /tmp/devs
ls /dev > /tmp/devs
ls /dev > /tmp/devs2
difft /tmp/devs /tmp/devs2
nvim /boot/System.map
make localmodconfig
difft .config ../config
mv ../config .config
make help | less
rg movecur
n include/phyconst.h
n include/graphplot.h
make -j8 LLVM=1 LLVM_IAS=1 KCFLAGS=-march=native
gs main
g s -c table
rg unreachable
rm default.profraw
rg 5m
l /usr/local/bin/rpx
bear -- make bench
trans
trans en:ja
z plugins/blink.cmp
sudo cp -r plugins/nvim-treesitter/parser/ /usr/local/lib/nvim/
sudo cp -r plugins/nvim-treesitter/queries /usr/local/share/nvim/runtime/
g s table
rg eval_expr_real
rg eval_expr
rg temp_eval
rg eval_expr_real)
rg eval_expr_real\)
rg eval_expr_real\\\\)
rg eval_expr_real\\\)
n src/mai
yay -Ss qiita
yay -Ss notion
yay -S notion-app-enhanced
yay -Ss notion-app
yay -S notion-app
notion-app
man notion
notion-app -h
notion-app --help
notion-app --version
yay -Rsc notion-app
sudo mount -t vfat /dev/sda1 /mnt/usb -o uid=sundo,gid=users
l /mnt/usb
ls /mnt/usb
rmf /mnt/usb/llvm-project
yay -S gparted
sudo umount /mnt/usb
gparted
man gparted
sudo fdisk -l
parted
sudo rm -rf /root/.platformio
sudo fdisk
sudo fdisk /dev/nvme0n1
sudo parted
sudo fsck -f /dev/nvme0n1p4
sudo fsck -f /dev/nvme0n1p5
rmf linux
rmf editor
sudo rm -rf editor
sudo rm -rf .platformio
rm currently.img
rmf Music/
yay -Rsc texlive-bin texlive-doc
sudo dd if=/dev/nvme0n1p5 of=currently.img bs=4M status=progress
sudo cfdisk
sudo cfdisk /dev/nvme0n1p5
lsblk
mkcd editor
git clone https://github.com/neovim/neovim --depth 1
cd neovim
git clone https://github.com/torvalds/linux --depth 1
mkcd proc
git clone https://github.com/llvm/llvm-project --depth 1
g cl https://github.com/ziglang/zig --depth 1
n CMakeL
../../llvm-project
cmake -G "Unix Makefiles" ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_TARGETS_TO_BUILD="X64" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON
cmake -G "Unix Makefiles" ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON
~/proc/zig
sudo systemctl list-units
sudo ln /usr/bin/cc /usr/local/bin/clang
sudo ln /usr/local/bin/clang /usr/bin/cc
sudo rm /usr/bin/cc
yay -S gcc
n ../CMakeLists.txt
g cl https://github.com/gcc-mirror/gcc --depth 1
cd gcc
n compile
n ltgcc.m4
n gcc/sort.cc
sh <(curl -L https://nixos.org/nix/install) --no-daemon
ls .nix-profile/etc
cd .nix-profile/etc
ls profile.d
ls -l profile.d
chmod +x profile.d/nix.sh
yay -Rsc clang
nix-env -i clang
yay -Rsc bzip2 radare2 gdb gdbm gdb-common man-db man-pages
yay -Rsc bzip2 radare2 gdb gdb-common man-db man-pages
yay -Rsc bzip2 radare2 gdbm gdb-common man-db man-pages
yay -Rsc bzip2
yay -Rsc gdbm radare2 gdb gdb-common man-db man-pages
yay -Rsc gdbm radare2 man-db man-pages
yay -Rsc gdbm radare2 gdb gdb-common man-db
yay -Rsc gdbm radare2
yay -Rsc gdb gdb-common
yay -Rsc man-db man-pages
nix-env -i gdb
yay -Rsc python
nix-env -i kde
yay -Rsc kde
nix-env -i keyd
cmake -G "Unix Makefiles" ../llvm -DLLVM_ENABLE_PROJECTS="clang-tools-extra" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release
yay -S clang
lld
ld.lld
ld.lld --version
yay -S clangd
yay -Ss clangs
yay -Ss clangd
sudo systemctl stop sddm
yay -Rsc kde-cli-tools
yay -Rsc plasma-activities-stats
yay -Rsc plasma-activities
yay -Rsc plasma5support
yay -Rsc plasma-firewall
yay -Rsc abseil-cpp plasma-thunderbolt
yay -Rsc abseil-cpp plasma-workspace-wallpapers
yay -Rsc plasma-workspace-wallpapers
yay -Rsc platformio-core-udev
yay -Rsc texlab
yay -Rsc rustup
yay -Rsc make cmake
yay -Rsc acl gtk3
yay -Rsc acl github-cli
yay -Rsc acl yazi
yay -Rsc github-cli
sh <(curl -L https://nixos.org/nix/install)
~/.nix-profile/etc/profile.d/nix.sh
nix-env
find nix-env
/proc/4327/task/4327/cwd/.nix-profile/bin/nix-env
/proc/4327/task/4327/cwd/.nix-profile/bin/nix-env -i nix
cd .nix-profile/etc/profile.d
chmod +x nix.sh
nix-env -i clangd zig
nix-env -qa clangd
nix-env -i sddm plasma-meta plasma-wayland-session
nix-env -i sddm-astronaut plasma-meta plasma-wayland-session
nix-env -i sddm-astronaut plasma
nix-env -i sddm-astronaut plasma-activities
nix-env -qa wayland
nix-env -i wayland
ls /nix/
/nix/
yay -Rsc sddm
nix-env -i sddm-kcm
nix-env -i wl-clipboard
yay -Rsc lua
yay -Rsc lua-language-server
nix-env -i lua luajit lua-language-server
nix-env -e lua
nix-env -i luajit lua-language-server
nix-env -qa qt
nix-env -i qt6integration
nix-env -qa plasma
nix-env -i nodejs
which sddm
nix-env -i sddm
nix-env -i sddm-wrapped
sddm
sudo systemctl enable sddm
yay -Rsc bison acpi fastfetch figlet bc
yay -Rsc onefetch go
yay -Rsc glow git-delta git
nix-env -i git git-delta lazygit
nix-env -i git lazygit
sudo pacman -Rsc `pacman -Qdtq`
nix-env -i acpi zsh
sudo pacman -Rsc zsh
nix-env -i systemd
sudo pacman -Rsc systemd
sudo pacman -S systemd
sudo systemctl start keyd.service
nix-env -qa home
n ~/.config/nixpkgs/config.nix
mkdir ~/.config/nixpkgs
sudo vim /etc/locale.conf
mv .config/nixpkgs/home.nix .config/nixpkgs/config.nix
rmf .config/nixpkgs/
n ~/.config/nixpkgs/home.nix
ls .config/
mkcd .config/nixpkgs
z nixp
nix-shell config.nix
nix-env -i displayManager
home-manager build
home-manager version
home-manager --version
n config.nix
mv home.nix config.nix
file result
home-manager switch --show-trace
home-manager packages
mv config.nix home.nix
nix-channel --list
mv home.nix configuration.nix
mv configuration.nix home.nix
nix-env -qa | grep display
sudo pacman -Rsc xserver
sudo pacman -Rsc xcb-imdkit org
sudo pacman -Rsc xorg | head -n 30
sudo pacman -Rsc imagemagick
nix-env -i sway
sudo pacman -Rsc fcitx5
ls /var/lib/pacman/db.lck
rm /var/lib/pacman/db.lck
sudo pacman -Rsc xcb-imdkit fcitx5
chmod +x ~/.nix-profile/etc/profile.d/nix.sh
sudo pacman -S nix
sudo -Rsc nix
nix-env -qa kde
sudo pacman -S yay
sudo pacman -S keyd
sudo systemctl enable keyd && sudo systemctl start keyd
sudo pacman -Rsc fzf
z nix
sudo pacman -S sway wayland
sudo pacman -S sway
sudo pacman -S mako
mkcd ~/.config/sway
_python
nix-env -qa pip
python3 -m pipes
python3 -m pipes install
nix-env -qa i3ipc
home-manager switch -f home.nix
cat home.nix
nix-env -i acpi btop clang fd fzf git lazygit less lua-language-server luajit nodejs python3 ripgrep wl-clipboard
nix-env -i acpi btop clang fd fzf lazygit less lua-language-server luajit nodejs python3 ripgrep wl-clipboard
rmf nixpkgs/
sudo pacman -S sddm
sudo systemctl start sddm
sudo pacman -Rsc sddm
sudo pacman -S lightdm
sudo pacman -S xorg-wayland
sudo pacman -S qt6-wayland
sudo pacman -S fcitx
sudo pacman -S lightdm-webkit2-greeter lightdm-webkit-theme-litarvan
sudo pacman -S python-i3ipc
n /etc/sway/config.d/50-systemd-user.conf
n /etc/sway/config
cp -r /etc/sway/config.d/ .config/sway/
sudo pacman -S swaylock
sudo pacman -S swayidle swaybg waybar
lightdm
n /usr/lib/systemd/system/lightdm.service
sudo systemctl status lightdm
sudo vim /usr/lib/systemd/system/lightdm.service
sudo vim /sys/class/backlight/amdgpu_bl1/brightness
pacman -Qi qt
sudo pacman -Rsc qt5-base qt5-translations
sudo lightdm
man lightdm
sudo lightdm -d
which fzf
pacman -Ss amd
pacman -Ss amdgpu
nix-env -qa | grep amdgpu
nix-env -i xf86-video-amdgpu
lightdm-webkit2-greeter
psa | grep sway
psa | grep lightdm
sway
sudo pacman -S xorg-xwayland
sudo pacman -Rsc xorg
sudo pacman -Ss amdgpu
sudo pacman -S man-db
sudo pacman -S lightdm-webkit2-greeter lightdm-webkit-theme-litarvan lightdm
sudo pacman -S swayidle swaybg waybar sway
sudo pacman -S xorg
nix-env -qa xf86-video-amdgpu
nix-env -q xf86-video-amdgpu
nix-env -qa plemoljp
nix-env -i plemoljp
sudo pacman -S wayland
sudo pacman -S mesa
sudo systemctl status wayland
n /usr/share/wayland-sessions/sway.desktop
systemctl status lightdm.service
sudo pacman -S lightdm-webkit2-greeter
sudo systemctl start lightdm
journalctl -xeu lightdm.service
sudo less /var/log/lightdm
sudo less /var/log/lightdm/lightdm.log
sudo nvim /etc/lightdm/lightdm.conf
sudo -E nvim /usr/share/wayland-sessions/sway.desktop
sudo systemctl enable lightdm
sudo pacman -S brightnessctl
brightnessctl set -50%
brightnessctl set 50%-
brightnessctl set +50%
brightnessctl set +10%
brightnessctl set 10%
brightnessctl set 5%
brightnessctl set 1%
brightnessctl set 2%
sudo -E nvim /usr/lib/lightdm/
sudo -E nvim /etc/lightdm/lightdm-webkit2-greeter.conf
ggrks arch linux logo
sudo mv Downloads/Dark-Wallpaper-HD-Download.jpg /usr/share/backgrounds/
z sway
g cl https://github.com/catppuccin/i3 --depth 1
rmf config.d
sudo pacman -Rsc sc-im
nix-env -i sc-im
sudo pacman -Rsc libzip
nix-env -i gdb lldb
sway --config .config/sway/config
nix-env -i jq
sudo pacman -Rsc jq
sudo systemctl restart lightdm
nix-env -i libinput
swaymsg -t get_inputs
man 5 sway-bar
man 5 sway
exi
nix-env -q vivaldi
mkdir .config/nixpkgs
n .config/nixpkgs/config.nix
nix-env -i vivaldi
sudo pacman -Rsc python ffmpeg
sudo pacman -Rsc python
pacman -Ss ffmpeg
sudo pacman -Syu
nix-env -i fastfetch
n .nix-profile/etc/profile.d/nix.sh
eval `fzf --zsh`
mkcd .config/zsh
fzf --zsh
fzf --zsh > fzf.zsh
zoxide init zsh
zoxide init zsh > zoxide.zsh
n zoxide.zsh
nix-env -i firefox
nix-env -qa mixer
nix search alsa
nix search alsa --extra-experimental-features nix-command
nix search alsa --extra-experimental-features nix-command --extra-experimental-features flakes
nix-env -i pulseaudio pavucontrol
nix-env -i alsa-utils
nix-env -i pulseaudio
nix-env -e pulseaudio pavucontrol
sudo pacman -S pulseaudio
pulseaudio --check
pulseaudio -D
speaker-test -t wav -c 2
sudo pacman -S pavucontrol
.nix-profile/bin/firefox-beta
vivaldi --wayland
fg &
brightnessctl set 3%
alsamixer
pavucontrol
firefox-beta
nix-env -i make cmake
nix-env -i make-binary-wrapper-hook cmake
sudo pacman -S acpi alsa-utils btop clang cmake fastfetch fd firefox fzf gdb jq lazygit less libinput lldb lua-language-server luajit make nodejs python3 ripgrep sc-im vivaldi wl-clipboard xf86-video-amdgpu
sudo pacman -S acpi alsa-utils btop clang cmake fastfetch fd firefox fzf gdb jq lazygit lldb lua-language-server luajit make nodejs ripgrep vivaldi wl-clipboard xf86-video-amdgpu
nix-env -e `nix-env -q`
sudo rmf /nix
sudo rm -rf /nix
git clone https://aur.archlinux.org/yay --depth 1
cd yay
yay -Rsc yay-debug
yay -S git-delta
gcc b.c -DBENCHMARK_MODE
gcc b.c src/benchmarking.c -DBENCHMARK_MODE
gcc b.c src/benchmarking.c -DBENCHMARK_MODE -O3
clang-18 b.c src/benchmarking.c -DBENCHMARK_MODE -O3
n b.c
rm b.c
make bench
eval `ssh-agent -s`
n rc/brightnessctl.service
sudo ln rc/brightnessctl.service /etc/systemd/system/
sudo systemctl enable brightnessctl.service
n rc/install.sh
ls .config/fontconfig/
fc-list | grep plemoljp -i
man sway-output
fc-list | grep plemoljp35console -i
fc-list | grep plemoljp35console -iv
fc-list | grep plemol -iv
echo $MOZ_ENABLE_WAYLAND
yay -S mesa
yay -S mesa-utils
glxinfo | grep "OpenGL renderer"
yay -Ss amdgpu
yay -S amdgpu_top
yay -S cargo
rustup default nightly
cargo install swaycons
swaycons
./tool/facad
../../proc/zig
../llvm-project
../../editor/neovim/
n src/nvim/option.c
ninja install
cargo install startship
yay -S starship
starship completions zsh
starship init
eval `starship init zsh`
starship toggle
yay -S fcitx5 fcitx5-im fcitx5-mozc fcitx5-configtool fcitx5-gtk fcitx5-qt
sudo -E nvim /etc/environment
yay -S glim slurp
yay -Rsc glim
yay -S grim
man sway
man sway-input
man swaymsg
man sway-bar
n /etc/xdg/waybar/config.jsonc
mkcd .config/waybar
n style.css
cd waybar
mv assets/mocha.webp ..
n mocha.webp
g cl https://github.com/catppuccin/waybar --depth 1
mv waybar/themes/mocha.css .
rmf waybar/
wofi
yay -S dru
yay -S drun
wofi --show drun
mkcd .config/wofi
g cl https://github.com/catppuccin/wofi --depth 1
g cl https://github.com/doracula/wofi --depth 1
g cl https://github.com/dracula/wofi --depth 1
mv wofi/style.css .
rmf wofi/
wofi -d -S drun | xargs swaymsg exec --
swaymsg exec -- yazi
z n
yay -Ss pip
yay -S python-pip
pip install cmake-language-server
pip install cmake-language-server --break-system-packages
yay -S yaml-language-server
yay -S toml-language-server
yay -S rust-analyzer
yay -S texlab
yay -S typist-lsp
yay -S typist
cargo install typist-cli
cargo install typist
yay -S typst
typst --version
firefox
yay -Ss computer-modern
yay -S ttf-computer-modern-fonts
yay -S texlive-core texlive-fontextra
fc-list | grep CMU -i
fc-list | grep cmu -i
fc-list | grep latin -i
fc-list | grep com -i
fc-list | grep ple -i
g merge table
g b -d table
g s -c jit
clang temp.c -S -emit-llvm -O3
rm temp.ll
clang-18 temp.c -S -emit-llvm -O3
n temp.ll
lli temp.ll
llc temp.ll
n temp.s
systemctl status fcitx5
fcitx5 &
fcitx5 > /dev/null &
z typ
z typst
mkcd test
n reference.bib
rm reference.bib
n main.pdf
typst compile main.typ
mkcd ../report-template
n Charpy_impact_test_sketch.svg
yay -S noto-fonts-cjk-jp-vf
yay -S noto-fonts-cjk
yay -S otf-latin-modern
rg harano
yay -S otf-latinmodern-math
yay -S texlive-full
yay -S texlive
yay -Ss haranoaji
make ic
yay -S bear
bear -- make ice
bear -- make all-
bear -- make all-test
make all-test
yay -S onefetch
z report
yay -Ss ipa
yay -S otf-ipafont
fc-list | grep ipa -i
n example.typ
typst compile example.typ
n main.typ
rg \#set
n temp.typ
rm temp.typ
yay -S otf-cm-unicode
typst compile temp.typ
rg leading
n template.typ
n t.typ
typst compile t.typ
rg "typedef char32_t"
rg typedef
n terminal.h
rg "
rg "\<tll\>"
n sixel.h
n util.h
bear -- ninja
mv compile_commands.json ..
n sixel.c
rg test
rg exit
n n include/errcode.h
n tests/test-config.c
n plugins/track.nvim/lua/track/mark.lua
n plugins/track.nvim/lua/track/marks.lua
n plugins/track.nvim/plugin/track.lua
n plugins/track.nvim/lua/track/notify.lua
n plugins/track.nvim/lua/track/outline.lua
n plugins/track.nvim/lua/track/init.lua
n temp.lua
n .config/fcitx5/
fcitx5
kill 4200
n .config/fcitx5/config
psa | grep fcitx5
kill 4334
n .config/waybar/style.css
n .config/waybar/mocha.css
n /etc/xdg/waybar/style.css
yay -S lua-dbus
yay -Ss lua-dbus
yay -Ss dbus
yay -S luarock
yay -S luarocks
luarocks install lua-dbus
sudo luarocks install lua-dbus
luarocks --check-lua-versions
lua --version
sudo luarocks install lua-dbus --check-lua-versions
lua -v
luajit --version
luajit -v
z ~/lib
g cl https://github.com/kmarkus/lsdbus.git --depth 1
cd lsdbus
yay -S libmxml
yay -Ss libmxml
yay -S mxml
cmake .. CONFIG_LUA_VER=jit && make
cmake .. CONFIG_LUA_VER=5.1 && make
yay -Ss ldbus
sudo rm -rf /usr/local/share/lua/5.4/lsdbus/
sudo rm -rf /usr/local/bin/lsdb-*
sudo rm -rf /usr/local/lib/lua/5.4/lsdbus/
yay -S lua-ldbus
yay -Rsc luarocks
../..
rmf lsdbus/
man fcitx5-remote
yay -S man-db
fcitx5-remote --help
fcitx5-remote --check
fcitx5-remote -e
n plugins/track.nvim/lua/track/config.lua
sudo -E nvim /etc/xdg/waybar/config.jsonc
waybar -h
psa | grep waybar
kill 1868
kill 1068
clockdiff
timedatectl
mkdir tool
mv ~/rpx.vim tool/
n /usr/local/share/nvim/runtime/syntax/c.vim
n /usr/local/share/nvim/runtime/syntax/zig.vim
man nohup
man disown
printf '%s+' "hello world"
printf '%s+' hello world
echo ${`printf '%s+' hello world`%+}
echo "${`printf '%s+' hello world`%+}"
local q
q=`printf '%s+' hello world`
echo ${q%+}
ggrks hello world
launch neovide .zshrc
n /usr/local/share/nvim/runtime/syntax/lua.vim
disown --help
l plugins
n plugins/toggleterm-manager.nvim/lua/toggleterm-manager.lua
rmf plugins/toggleterm-manager.nvim/ plugins/toggleterm.nvim/
./syncplug.sh install
n ansiesc.h
z nc
z nv
rm lua/rainbow.lua
fcd
yay -S telnet
yay -Ss telnet
yay -S ascii-movie-bin
_asciidoctor
xargs ascii-movie completion zsh
xargs `ascii-movie completion zsh`
ascii-movie completion
ascii-movie completion zsh
ascii-movie completion zsh > temp.zsh
zsh temp.zsh
rm temp.zsh
ascii-movie
ascii-movie play
tar -h
tar --usage
tar --help
man tar
z ~/Downloads
extract cy_1.3.0_linux_amd64.tar.gz
cd cy
./cy
file cy
yay -S pwdsafety
yay -Ss pwdsafety
yay -Ss pwd
go install -v github.com/edoardottt/pwdsafety@latest
~/Documents
../Downloads
extract pwdsafety_0.4.0_linux_386.zip
./pwdsafety
sudo mv pwdsafety /usr/local/bin/
./linux
sync
../tool/facad
../foot
eval `ascii-movie completion zsh`
l /proc
mkcd ../shutdown
g config --global user.name
cp ../rpx/Makefile .
mkdir include
yay -Rsc drun-gtk3 ttf-computer-modern-fonts ttf-ibm-plex
z shut
./a.out temp
n temp.txt
nv main.c
~n
nv lua/rainbow.lua
yay -S swayidle
yay -S swaylock
swayidle
man swayidle
swayidle -w timeout 300 'swaylock -f -c 000000' timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' before-sleep 'swaylock -f -c 000000'
swaylock --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-blur 7x5 --effect-vignette 0.5:0.5 --ring-color bb00cc --key-hl-color 880033 --line-color 00000000 --inside-color 00000088 --separator-color 00000000 --grace 2 --fade-in 0.2
yay -Rsc swaylock
yay -Rsc swayidle
yay -S swaylock-effects
yay -Ss wayland-protocols
sudo pacman -Qo /usr/share/pkgconfig/wayland-protocols.pc
sudo pacman -Syu --overwrite=usr/share/licenses/wayland-protocols/COPYING,usr/share/wayland-protocols/stable/presentation-time/presentation-time.xml,usr/share/wayland-protocols/stable/viewporter/viewporter.xml,usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml,usr/share/wayland-protocols/unstable/fullscreen-shell/fullscreen-shell-unstable-v1.xml,usr/share/wayland-protocols/unstable/idle-inhibit/idle-inhibit-unstable-v1.xml,usr/share/wayland-protocols/unstable/input-method/input-method-unstable-v1.xml,usr/share/wayland-protocols/unstable/input-timestamps/input-timestamps-unstable-v1.xml,usr/share/wayland-protocols/unstable/keyboard-shortcuts-inhibit/keyboard-shortcuts-inhibit-unstable-v1.xml,usr/share/wayland-protocols/unstable/linux-dmabuf/linux-dmabuf-unstable-v1.xml,usr/share/wayland-protocols/unstable/linux-explicit-synchronization/linux-explicit-synchronization-unstable-v1.xml,usr/share/wayland-protocols/unstable/pointer-constraints/pointer-constraints-unstable-v1.xml,usr/share/wayland-protocols/unstable/pointer-gestures/pointer-gestures-unstable-v1.xml,usr/share/wayland-protocols/unstable/primary-selection/primary-selection-unstable-v1.xml,usr/share/wayland-protocols/unstable/relative-pointer/relative-pointer-unstable-v1.xml,usr/share/wayland-protocols/unstable/tablet/tablet-unstable-v1.xml,usr/share/wayland-protocols/unstable/tablet/tablet-unstable-v2.xml,usr/share/wayland-protocols/unstable/text-input/text-input-unstable-v1.xml,usr/share/wayland-protocols/unstable/text-input/text-input-unstable-v3.xml,usr/share/wayland-protocols/unstable/xdg-decoration/xdg-decoration-unstable-v1.xml,usr/share/wayland-protocols/unstable/xdg-foreign/xdg-foreign-unstable-v1.xml,usr/share/wayland-protocols/unstable/xdg-foreign/xdg-foreign-unstable-v2.xml,usr/share/wayland-protocols/unstable/xdg-output/xdg-output-unstable-v1.xml,usr/share/wayland-protocols/unstable/xdg-shell/xdg-shell-unstable-v5.xml,usr/share/wayland-protocols/unstable/xdg-shell/xdg-shell-unstable-v6.xml,usr/share/wayland-protocols/unstable/xwayland-keyboard-grab/xwayland-keyboard-grab-unstable-v1.xml
yay -S wayland-protocols
sudo pacman -S --overwrite /usr/share/licenses/wayland-protocols/COPYING,/usr/share/pkgconfig/wayland-protocols.pc,/usr/share/wayland-protocols* wayland-protocols
mako
mkcd ../mako
g cl https://github.com/catppuccin/mako.git
cat mako/themes/catppuccin-mocha/* > config
makoctl reload
waybar
launch waybar
l /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1136x640.png
lsix /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1136x640.png
lsix /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1136x640_Portrait.png
lsix /usr/share/backgrounds/gnome/adwaita-d.jxl
lsix /usr/share/backgrounds/gnome/adwaita-l.jxl
lsix /usr/share/backgrounds/gnome/drool-d.svg
lsix /usr/share/backgrounds/gnome/blobs-d.svg
lsix /usr/share/backgrounds/gnome/ring-d.jxl
lsix /usr/share/backgrounds/gnome/lcd-d.jxl
lsix /usr/share/backgrounds/gnome/pixels-d.jxl
sudo mv ~/Downloads/login-image.png /usr/share/backgrounds/
man dmenu
dmenu_run
yay -Rsc dmenu
../sway
yay -S yad
yad --entry --title="launcher" --text="input command:" --width=100 --height=5
man yad
swaynag
swaynag -m "input" -t error
yay -S wofi
wofi --prompt "input" --dmenu
man wofi
yad --text "blah blah"
yay -S dmenu
dmenu | wofi --dmenu
wofi --dmenu --width 500 --height 300
wofi --dmenu --width 500 --height 100
wofi --dmenu --width 500 --height 30
wofi --dmenu --width 500 --height 40
wofi --dmenu --width 500 --height 50
autoload -Uz compgen
autoload -Uz compgen -c
compgen -c
whence -pm "*"
whence -pm "*" | sort -u | wofi --dmenu
echo "/usr/bin/" | basename
man basename
man whence
print -rl -- "$commands"
print -rl -- "${(ko)commands}"
print -rl -- "${(ko)commands}" | wofi --dmenu
print -rl -- "${(ko)commands}" | tr ' ' '\n'
print -rl -- "${(ko)commands}" | tr ' ' '\n' | sort -u | wofi --dmenu
launch `print -lr -- "${(ko)commands}" | tr ' ' '\n' | wofi -d`
n /etc/lightdm/lightdm.conf
n /etc/lightdm/lightdm-webkit2-greeter.conf
yay -S emptty
emptty
menu
swaymsg reload
mv ~/.config/sway/config .
ln config ~/.config/sway/
cargo install neovide
cargo uninstall neovide
yay -S neovide
where cargo
cargo --version
cd
g cl https://github.com/neovide/neovide.git --depth 1
cd neovide
n website/docs/installation.md
cargo install --git https://github.com/neovide/neovide
nv src/cmd_line.rs
rmf neovide
g cl https://github.com/rohit-px2/nvui.git --depth 1
cd nvui
yay -S fmt hicolor-icon-theme msgpack-cxx qt5-base qt5-svg catch2 boost
yay -S msgpack-tools
yay -Ss msgpack
yay -Q msgpack-cxx
ls /usr/lib/cmake/msgpack-cxx/msgpack-cxx-config.cmake
cmake -B build . -DCMAKE_BUILD_TYPE=Release CMAKE_PREFIX_PATH=/usr/lib/cmake/msgpack-cxx
sudo mv /usr/lib/cmake/msgpack-cxx/msgpack-cxx-config.cmake /usr/lib/cmake/msgpack-cxx/msgpack-config.cmake
cmake -B build . -DCMAKE_BUILD_TYPE=Release
n /usr/lib/cmake/msgpack-cxx/msgpack-config.cmake
sudo mv /usr/lib/cmake/msgpack-cxx/msgpack-config.cmake /usr/lib/cmake/msgpack-cxx/msgpack-cxx-config.cmake
yay -S nvui
rmf nvui/
yay -Rsc boost msgpack-cxx fmt catch2
yay -Rsc boost msgpack-cxx catch2
extract nvui-linux-x64.zip
./bin/nvui
rm nvui-linux-x64.zip
yay -Ss qt wayland
echo $DISPLAY
./Downloads/bin/nvui --ext_multigrid
./Downloads/bin/nvui
rm Downloads/*
rm -r Downloads/*
lsix /usr/share/backgrounds/gnome/sheet-l.jxl
cat /proc/cpuinfo | grep vmx
cat /proc/cpuinfo
n runtime/lua/vim/_defaults.lua
disasm rpx
disasm -C rpx
fcitx5-remote --status
fcitx5-remote -s
n 1
rm 1
rm .config/mako/1 project/c/markov/1 project/c/rpx/1
dbus-send --session --type=method_call --dest=org.fcitx.Fcitx5 /controller org.fcitx.Fcitx.Controller1.InputMethod
fcitx5-remote -a
fcitx5-remote -tx5M
fcitx5-remote -fcitx5
fcitx5-remote -m fcitx5
fcitx5-remote -q
fcitx5-remote -n
fcitx5-remote -m keyboard-us
cat /run/user/1000/bus
l /run/user/1000/bus
dbus-send --session --dest=org.fcitx.Fcitx5 --type=method_call --print-reply /controller org.fcitx.Fcitx.Controller1.InputMethod
dbus-send --session --dest=org.fcitx.Fcitx5 --type=method_call --print-reply /controller org.fcitx.Fcitx.Controller1.State
launch fcitx5
pacman -Qo /usr/share/wayland-protocols/unstable/xwayland-keyboard-grab/xwayland-keyboard-grab-unstable-v1.xml
pacman -Qo /usr/share/wayland-protocols/unstable/text-input/text-input-unstable-v1.xml exists in filesystem
sudo mv /usr/share/wayland-protocols/ .
sudo mv /usr/include/wayland-protocols/ .
sudo mv /usr/include/wayland-protocols/ ./wayland-protocols2
sudo mv wayland-protocols/ /usr/share/
sudo mv wayland-protocols2/ /usr/include/wayland-protocols
yay -S --overwrite "*" hyprland
yay -S vifm
ls /usr/share/hypr/
lsix /usr/share/hypr//*
lsix /usr/share/hypr/*
lsix /usr/share/hypr/hyprland.conf
lsix /usr/share/hypr/lockdead2.png
lsix /usr/share/hypr/wall0.png
lsix /usr/share/hypr/wall1.png
man lsix
lsix --help
lspci | grep -E 'VGA|3D'
ls /dev/dri/by-path/
dmenu
dmenu -h
dmenu -b
dm-tool switch-to-greeter
rg XDG_CURRENT
echo $XDG_SESSION_TYPE
yay -S wkroots
yay -S wlroots
yay -S xorg-wayland
yay -S xorg-xwayland
libinput list-device
sudo journalctl -xe | grep -i hyprland
yay -S list-device
yay -Ss list-device
yay -Ss libinput
libinput list-devices
sudo libinput list-devices
yay -S unclutter
unclutter -keystroke
yay -Rsc unclutter
n .config/sway/config
mv .config/hypr/hyprland.conf rc
ln rc/hyprland.conf .config/hypr/
rm .config/hypr/hyprland.conf && ln rc/hyprland.conf .config/hypr/
cd rc
diff ../.gitconfig .gitconfig
ln .gitconfig ../
g lgo
n .gitconfig
g lgp
swww img /usr/share/backgrounds/backgnd.gif
sudo mv Downloads/backgnd.gif /usr/share/backgrounds/
swww-daemon
launch swww-daemon
swww img --transition-fps 60 --transition-type wipe --transition-duration 3
swww img /usr/share/backgrounds/backgnd.gif --transition-fps 60 --transition-type wipe --transition-duration 3
swww img /usr/share/backgrounds/backgnd.gif --transition-fps 30 --transition-type wipe --transition-duration 3
sudo mv Downloads/city.gif /usr/share/backgrounds/
swww img /usr/share/backgrounds/city.gif --transition-fps 30 --transition-type wipe --transition-duration 3
swww img /usr/share/backgrounds/city.gif --transition-fps 15 --transition-type wipe --transition-duration 3
yay -S arora
yay -Ss arora
launch dillo
n .dillo/cookiesrc
ls .dillo/
rmf .dillo/
yay -Ss surf
yay -S surf
launch surf
yay -S libnuspell
yay -Ss libaspell
yay -Ss libvoikko
yay -S aspell
yay -S libvoikko
surf
yay -Ss libhunspell
yay -Ss libhspell
yay -Ss libnuspell
yay -Rsc aspell surf libvoikko
yay -Ss otter
yay -S otter-browser
# sudo cmake --build . --target install
cmake --build . -j8 && sudo cmake --build . --target install ; shutdown now
otter-browser
launch otter-browser
kill 1933
launch firefox
yay -Rsc otter-browser
yay -Ss netsurf
yay -S netsurf
launch letsurf
launch netsurf
kill 2850
launch vivaldi --enable-features=UseOzonePlatform --ozone-platform=wayland
psa | grep cicaldi
where clang
./build
cmake --build . -j8
g cl https://github.com/vim/vim --depth 1
cd vim
cd src/auto
rg compile_commands.json
rg cmdwinenter -i
rg '<ESC>"
rg '<ESC>'
rg '<Esc>'
lldb rpx
n src/ev
make ice
make debug
g merge jit
./rpx
launch vivaldi
psa | grep vivaldi
n example/tips.rpx
mkdir src/eval
rmdir src/eval/
mv Makefile .Makefile
make TYPE=test OPTLEVEL=g
make TYPE=test
make TYPE=analyze
bear -- make TYPE=bench
make TYPE=bench
rg ic
make LOGLEVEL=1
make LOGLEVEL=
n .Makefile
mv .Makefile Makefile
make T=analyzer
make T=analyze
make ASAN=address
make LL=1
cp makefile makefile.txt
cp Makefile Makefile.txt
rm *.txt
cat Makefile | wl-copy
rm Makefile
l build/T-O3-L-SAN
rm rpx
hyprctl monitor all
hyprctl monitors all
yay -S hyprpanel-bin
yay -S bun-bin
yay -S hyprlock
hyprlock
yay -Rsc hyprlock swaylock
yay -Rsc hyprlock
xdg-open
xdg-open .
yazi ~
yazi ~/Downloads
sudo mv Downloads/gruvbox.png /usr/share/backgrounds/
sudo mv Downloads/gruvbox.jpg /usr/share/backgrounds/
sudo rm /usr/share/backgrounds/gruvbox.png
launch neovide
psa | grep neovide
nvrc
hyprpanel-client
launch hyprpanel
psa | grep hyprpanel
yay -S pipewire libgtop bluez bluez-utils btop networkmanager dart-sass wl-clipboard brightnessctl swww python gnome-bluetooth-3.0 pacman-contrib power-profiles-daemon gvfs --needed
yay -S pipewire libgtop bluez bluez-utils btop networkmanager dart-sass wl-clipboard brightnessctl swww python gnome-bluetooth-3.0 pacman-contrib gvfs --needed
yay -S hyprpanel
hyprpanel
mkcd .config/ags
rmdir ags
git clone https://github.com/Jas-SinghFSU/HyprPanel.git
git clone https://github.com/Jas-SinghFSU/HyprPanel.git --depth 1
mv HyprPanel/ ags
ags --version
launch agsv1
psa | grep agsv1
rg mako
n hypr/hyprland.conf
hyprland --version
echo $WLR_NO_HARDWARE_CURSORS
yay -Qi sway
yay -Qs sway
yay -Rsc waybar swaybg sway
journalctl -bp err
journalctl -b -p err
dmesg | grep -i drm
sudo dmesg | grep -i drm
sudo -E nvim /etc/lightdm/lightdm.conf
echo $XDG_CURRENT_SESSION
yay -Ss ly
yay -S ly
sudo systemctl disable lightdm.service
sudo systemctl enable ly
n /etc/ly/config.ini
yay -Rsc lightdm
yay -Rsc `yay -Qdtq`
yay -Sc
keyd -h
IEJg
keyd monitor
builtin cd -- /home/sundo/.cache/nvim
n .config/keyd/app.conf
n src/emoji_utils.c
n src/emoji_utils.h
n src/emoji_mappings.h
n src/emoji_mappings.c
meson ..
ninja clean
./facad ../src
n ../src/emoji_mappings.c
ninja -j 4
./facad
./facad ..
yay -S sbcl
fc-list
fc-list | grep ttf
cd build
sudo ninja uninstall
yay -S facad
rmf facad/
cd foot
echo $LANG
echo $LOGNAME
echo $LC_ALL
fc-list | grep PlemolJP35Console
yay -Qi plemoljp
yay -Qi plemoljp35
yay -Qi plemoljp35console
yay -Qi ttf-plemoljp
z facad
n .config/gtk-4.0/settings.ini
n .config/gtk-3.0/settings.ini
n .config/fontconfig/conf.d/99-cutefish.conf
n .config/fontconfig/fonts.conf
l .config/fontconfig
fc-cache -fv
man foot.ini
yay -Q man
yay -Ss ma
yay -S manpages
man foot
yay -Ss font
which ls
where ls
where fzf
yay -S ccache
ccache
echo $CCACHE_DIR
build/T-Og-L-SAN/rpx
scan-build make T=test
scan-build --use-c=clang-18 make OL=3
make log OL=3 FP=build.log
n build.log
rm build.log
git describe --tags --always --dirty
git describe --tags --always
man date
date -I
man gcc
man cmus
clang -M src/main.c
clang -H src/main.c
clang -H src/main.c -Iinclude
clang -H src/main.c -Iinclude -std=c23
gcc -std=c23 -Iinclude -o /dev/null src/main.c 2>&1 | grep -o 'included .*' | sort -u
yay -S include-what-you-use
g cl https://github.com/include-what-you-use/include-what-you-use.git --depth 1
cd include-what-you-use
g s clang
g s clang_18.0
cmake -G "Unix Makefiles" ../include-what-you-use
rmf build/ include-what-you-use/
n inc.sh
sh inc.sh
rg include
rg include *.c *.h
rg include **/*.c **/*.h
g b
g b --quiet
clang src/main.c -std=c23 -Iinclude -MMD temp.d
clang src/main.c -std=c23 -Iinclude -MMD -MF temp.d
n temp.d
rm temp.d
l src
make -pRr | grep -E '^SRCS|OBJS|DEPS|TARGETDIR'
clang -std=c23 -Iinclude -MMD -MF dep/T-Og-L-SAN-Bmain/ansiesc.d -c src/ansiesc.c -o build/T-Og-L-SAN-Bmain/ansiesc.o
l dep
l dep/T-Og-L-SAN-Bmain
rmf dep
rm inc.sh
mkdir -p build/{dep,target}
clang main.c -o build/temp
rm main.c
make -d
make -d | bat
l build
l build/dep
l build/dep/T-Og-L-SAN-Bmain
file build/target/T-Og-L-SAN-Bmain/rpx
n .git/HEAD
g b --show-current
g b --show-current -q
g b --show-current --qiet
l build/target/T-O3-L-SAN-Bmain
make -v
g describe --tags --always
which eijg 2>/dev/null
which eijg 2>&1 >/dev/null
which ekgje > /dev/null
cat makefile | wl-copy
g b --show-current 2>/dev/null
n markov/
make log T=bench
make T=bench OL=0
make hel
n main.lisp
sbcl
n main.fasl
file main.fasl
sh main.fasl
chmod +x main.fasl
./main.fasl
rm main*
ffmpeg -i 1561323.jpg -vf eq=brightness=-0.3 output.jpg
ffmpeg -i 1561323.jpg -vf eq=contrast=-0.3 output.jpg
ffmpeg -i 1561323.jpg -vf eq=contrast=-0.3 output2.jpg
ffmpeg -i 1561323.jpg -vf eq=contrast=0.3 output2.jpg
ffmpeg -i 1561323.jpg -vf eq=contrast=1.5 output2.jpg
ffmpeg -i output2.jpg -vf eq=brightness=-0.3 output3.jpg
swww img output2.jpg --transition-fps 15 --transition-type wipe --transition-duration 3
swww img output3.jpg --transition-fps 15 --transition-type wipe --transition-duration 3
ffmpeg -i 1561323.jpg -vf eq=brightness=-0.3 -q:v output.jpg
ffmpeg -i 1561323.jpg -vf eq=brightness=-0.3 -q:v -o output.jpg
ffmpeg -i 1561323.jpg -vf eq=brightness=-0.3 -q:v 2 -o output.jpg
n .config/foot/foot.ini
sudo mv Downloads/output3.jpg /usr/share/backgrounds/factory.jpg
cd Downloads
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.2 1/0.8" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.7 1/1',green='0/0 0.5/0.3 1/1'" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.7 1/1'" output.jpg
ffmpeg -vf "curves=blue='0/0 0.5/0.7 1/1',green='0/0 0.5/0.3 1/1'" output.jpg -i 722880.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.7 1/1':green='0/0 0.5/0.3 1/1'" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.7 1/1':green='0/0 0.5/0.3 0.5/0.3'" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.7 1/1':green='0/0 0.5/0.3 1/1':eq=brightness=-0.3" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.5/0.7 1/1':green='0/0 0.5/0.3 0.5/0.3'" "eq=brightness=-0.3" output.jpg
ffmpeg -i 722880.jpg -vf "eq=saturation=1.2:gamma_b=0.8:gamma_r=1.1" output.jpg
ffmpeg -i 722880.jpg -vf "eq=saturation=1.2:gamma_b=0.8:gamma_r=1.1:gamma_g=0.3" output.jpg
ffmpeg -i 722880.jpg -vf "eq=saturation=1.2:gamma_b=0.8:gamma_r=1.1:gamma_g=0.6" output.jpg
ffmpeg -i 722880.jpg -vf "chromakey=0x00FF00:0.1,format=rgba,lutrgb=r=255:g=0:b=0" output.jpg
ffmpeg -i 722880.jpg -vf "chromakey=0x00FF00:0.05,format=rgba,lutrgb=r=255:g=0:b=0" output.jpg
ffmpeg -i 722880.jpg -vf "chromakey=0x00F6FF:0.1,format=rgba,lutrgb=r=34:g=58:b=112" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.4/0.8 1/1'" output.jpg
ffmpeg -i output.jpg -vf "eq=brightness=-0.3" output.jpg
ffmpeg -i output.jpg -vf "eq=contrast=1.3" output.jpg
ffmpeg -i 722880.jpg -vf "curves=blue='0/0 0.4/0.8 1/1':green='0/0 0.5/0.2 1/1'" output.jpg
swww img output.jpg --transition-fps 15 --transition-type wipe --transition-duration 3
sudo mv Downloads/output.jpg /usr/share/backgrounds/cyber.jpg
rm Downloads/*.jpg
n .config/hypr/hyprland.conf
pwd | basename
basename `pwd`
md5sum
sha1sum
where md1sum
where md5sum
md5sum -h
md5sum --help
md5sum --status
md5sum --quiet
md5sum | cut -d\ -f1
md5sum | cut -f1
z cmus
mv ~/Downloads/cmus-themes-v1-0-0.tar.gz .
extract cmus-themes-v1-0-0.tar.gz
mv *.theme theme/
rm cmus-themes-v1-0-0.tar.gz
cmus
loadkeys
loadkeys --help
loadkeys --mktable
loadkeys dvorak
l /usr/share/kbd/keymaps
man loadkeys
sudo keyd monitor
sudo keyd bind '= = +'
man keyd
sudo keyd bind '= = ='
sudo systemctl restart keyd
l /usr/share/keyd/layouts
sudo systemctl stop keyd
sudo keyd bind '# = ('
sudo keyd bind '\# = ('
sudo keyd bind 'sharp = ('
sudo keyd bind 'hash = ('
sudo keyd bind '! = ('
sudo keyd bind 'S-1 = ('
nv
sudo keyd bind 'esc = setlayout(new)'
sudo keyd bind 'esc = setlayout(newlayout)'
sudo keyd bind 'include layouts/newlayout;esc = setlayout(newlayout)'
sudo keyd bind 'esc = setlayout(dvorak)'
sudo keyd reload -v
sudo keyd bind '1 = 2'
sudo keyd bind '1 = 1'
sudo keyd bind '1 = setlayout(new)'
sudo keyd -d
sudo keyd list-keys
sudo keyd -d list-keys
sudo keyd listen
sudo keyd
sudo keyd -
sudo mkdir /etc/keyd/layouts
n /usr/share/keyd/layouts/dvorak
journalctl -u keyd
nvimsudo /etc/keyd/layouts/newlayout
sudo rm -rf /etc/keyd/layouts/
yay -
yay -Qi chez-scheme
yay -S chez-scheme
g cl https://github.com/cisco/ChezScheme.git --depth 1
cd ChezScheme
./configure
l .build
sudo -s
basename
make run-valgrind
make run-lldb
make OL=g
make run-lldb OL=g
make run-valgrind OL=3
make run-valgrind OL=g
make run-valgrind\ --leak-sheck=full OL=g
make run-valgrind\ --leak-check=full OL=g
rm vgcore.47943
size makefile
size .build/05705ea89eb08efe2a2d87983b9d3a6e/target/rpx
command -v clang
command -v clanga
command ccache clang
../markov
n dep/T-Og-L-SAN-Bmain/ansiesc.d
uniq data/input.txt
uniq data/input.txt | wc -l
cat data/input.txt | wc -l
./proc
cd llvm-project
n src/Sema.zig
../ChezScheme
~/linux
make release
sudo make clean-all
yay -Qv
yay -Qs
yay -Qc
yay -Q | cut -d\ -f1
n pacmanlist.txt
rm makefile
where zsh
n ~/.zsh_history
l ~/.zsh_history
n ~/.config/atuin/config.toml
yay -S atuin
atuin init zsh
eval `atuin init zsh`
atuin login
atuin history
n ~/.histfile
rm .zsh_history
./reg.sh
atuin sync
atuin help
atuin account
atuin account help
atuin gen-completions zsh
atuin gen-completions
atuin gen-completions --shell zsh
eval `atuin gen-completions --shell zsh`
atuin import zsh
atuin history list
yay -Rsc atuin
rmf ~/.config/atuin/
rmf ~/.local/share/atuin/
n config.fish
n alacritty.toml
l /etc/tlp.conf
l /etc/tlp.d/00-template.conf
swww img /usr/share/backgrounds/cyber.jpg
swww img /usr/share/backgrounds/gruvbox.jpg
setterm -foreground black -background white
lspci
journalctl --disk-usage
vmstat
hwclock
hwclock --show
procs --tree
nl makefile
nl --version
man nl
cpp src/main.c
cpp src/main.c -Iinclude
dmesg
sudo dmesg | grep faul
sudo dmesg | grep fail
g cl https://github.com/fairyglade/ly --depth 1
cd ly
n src/auth.zig
n src/bigclock.zig
n src/bigclock/en.zig
man strftime
sudo systemctl restart ly.service
nvimsudo /etc/ly/config.ini
n /etc/keyd/default.conf
n keylayout
mv keylayout keylayout.json
n keylayout.json
nvimsudo /etc/keyd/default.conf
sudo keyd reload
hyprland --help
g cl https://github.com/hyprwm/Hyprland.git --depth 1
yay -S libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite libxrender pixman wayland-protocols cairo pango seatd libxkbcommon xcb-util-wm libliftoff libdisplay-info cpio tomlplusplus hyprlang-git hyprcursor-git hyprwayland-scanner-git xcb-util-errors hyprutils-git --needed
yay -S hyprlang-git hyprcursor-git hyprwayland-scanner-git xcb-util-errors hyprutils-git --needed
g submodule sync
rmf Hyprland/
g cl https://github.com/hyprwm/Hyprland.git --depth 1 --recurse-submodules
cd Hyprland
yay -Q hyprland-
yay -Q hyprland-*
make all && sudo make install
where hyprland
hyprland
hyprland --systeminfo
/usr/local/bin/hyprland
cd Hy
sudo make uninstall
rmf Hyprland
n rpx.vim
rg CAT
rg new
yay -R hyprland
yay -Q hyprcursor
echo $HYPRCURSOR_SIZE
echo $HYPRCURSOR_THEME
yay -Ss hyprcursor
yay -S rose-pine-hyprcursor
psa | grep yay
sh shutdown.sh
yay -Q | grep hyprcursor
yay -S sweet-cursors-hyprcursor-git simp1e-amber-hyprcursor nordzy-hyprcursors bibata-cursor-git xcursor-pro-hyprcursor hyprcursor-dracula-kde-git
hyprctl setcursor swwet-cursors-hyprcursor 24
hyprctl setcursor nordzy-hyprcursors 24
hyprctl setcursor rose-pine-hyprcursor 24
hyprctl setcursor rose-pine-hyprcurso 24
hyprctl setcursor dracula 24
hyprctl setcursor hyprcursor-dracula 24
hyprctl setcursor hyprcursor-dracula-kde 24
hyprctl setcursor Nordzy-cursors
hyprctl setcursor Nordzy-cursors 24
hyprctl setcursor sweet-cursors
hyprctl setcursor sweet-cursors 24
hyprctl setcursor sweet-cursor 24
hyprctl setcursor xcursor-pro 24
hyprctl setcursor Xcursor-Pro 24
hyprctl setcursor XCursor-Pro-Hyprcursor-Dark 24
hyprctl setcursor bibata-cursor 24
hyprctl setcursor bibata-cursors 24
mkcd ui
g cl https://gitlab.com/Pummelfisch/future-cyan-hyprcursor.git --depth 1
yay -Rsc sweet-cursors-hyprcursor-git simp1e-amber-hyprcursor nordzy-hyprcursors bibata-cursor-git xcursor-pro-hyprcursor hyprcursor-dracula-kde-git
yay -Rsc sweet-cursors-hyprcursor-git nordzy-hyprcursors bibata-cursor-git xcursor-pro-hyprcursor hyprcursor-dracula-kde-git
cd future-cyan-hyprcursor
cp -r Future-Cyan-Hyprcursor_Theme/ ~/.local/share/icons/
hyprctl setcursor Future-Cyan-Hyprcursor_Theme 24
hyprctl setcursor Future-Cyan-Hyprcursor_Theme 30
where zls
time python3 -c ''
who
whoami
yay -S tshark
yay -Ss tshark
yay -Ss termshark
yay -S termshark
n ~/.config/hyprpanel/config.json
hyprpanel -h
l ~/.local/share/icons
gsettings set org.gnome.desktop.interface cursor-theme Future-Cyan-Hyprcusor_Theme
gsettings -h
gsettings set org.gnome.desktop.interface cursor-theme -h
gsettings set org.gnome.desktop.interface cursor-theme
tshark
sudo tshark
mkcd project/pro/alg
mkcd no12
zig cc main.c
./a.out| wl-copy
cp ../no8/Makefile ./makefile
pwf
pwd
sudo tshark -D
tshark -i wlp1s0
sudo tshark -i wlp1s0
sudo tshark -i wlp1s0 -Y http
sudo tshark -i wlp1s0 -Y https
zig build --summary
zig build --summary all
ls src/ | head -n 1
head src/* -n 1
zig cc temp.c
zig run temp.zig
zig build.zig
zig run
zig run src/main.c
neofetch
brightnessctl set 7
brightnessctl set 15
brightnessctl set 12
brightnessctl set 11
nmcli connection show
nmcli connection edit WLH-U
n /etc/netconfig
ls /etc/ssl/certs/
nmcli device
nmcli device device list
nmcli device wifi list
journalctl -
journalctl
journalctl | tail
nvtui
sudo systemctl restart NetworkManager.service
systemctl status NetworkManager.service
sudo systemctl start NetworkManager.service
sudo systemctl stop NetworkManager
journalctl -xeu NetworkManager.service
sudo systemctl status NetworkManager
sudo systemctl enable NetworkManager
NetworkManager
sudo systemctl start NetworkManager
z etc
z ca-certificates
sudo trust extract-compat
ip link show
ip link show slp1s0
ip link show wslp1s0
ip link show wlp1s0
openssl s_client -showcerts -connect
openssl s_client -showcerts -connect WLH-U
openssl s_client -showcerts
openssl s_client
Z
openssl pkcs12 -clcerts -nokeys -out my.crt
l /etc/NetworkManager/system-connections
sudo l /etc/NetworkManager/system-connections
sudo ls /etc/NetworkManager/system-connections
wpa_supplicant
ls .atuin/
ls .atuin/bin/
rmf .atuin/
ls -A
trust list
openssl x509 -text -in /etc/ssl/certs/ca-certificates.crt
openssl x509 -text -in /etc/ssl/cert.pem
nmcli connection modify WLH-U 802-1x.eap peap 802-1x.ca-cert /etc/ca-certificates/certs/ca-certificates.crt 802-1x.identify s2201050
nmcli connection modify WLH-U 802-1x.eap peap 802-1x.ca-cert /etc/ssl/certs/ca-certificates.crt 802-1x.identify s2201050
nmcli connection modify WLH-U 802-1x.eap peap 802-1x.ca-cert /etc/ssl/certs/ca-certificates.crt 802-1x.identity s2201050
nmcli device wifi connect WLH-U
nmcli device wifi connect WLH-U --ask
journalctl -xeu NetworkManager
ls /etc/ca-certificates/extracted/ca-bundle.trust.crt
nmcli
lscpu
nvimsudo /etc/NetworkManager/system-connections/WLH-U-d760b00d-32c0-4380-84cf-53db96ce4bfa.nmconnection
nvimsudo /etc/NetworkManager/NetworkManager.conf
journalctl -b
zig build run -Doptimize=ReleaseFast
zig build --release
zig build -DT=test
zig build run --release
l .zig-cache
l .zig-cache/o/02fe2dce6056ce97b05cc75df8bdc3a0/ansiesc.o
zig build --release=size
l .build/441c49f43cf3b6c23fb8af6cf506705c/target
zig build -DT=bench --release=fast
make log T=bench OL=3
make clean T=bench OL=3
zig build -DT=bench
n .gptignore
python3 gpt_repository_loader.py ~/project/c/rpx -o rpx.txt
n rpx.txt
cat rpx.txt | wl-copy
l .build/a04d1929086346f1d49aba706a201121/target/
l .zig-cache/h/0134e489a35a6f30028129fea94e6885.txt
lsmem
psa
man pam
man pam_start
man pam_conv
man execlp
systemctl status ly
ping google.com
yay -S bynfont
yay -S dina-font
setfont bynfont.psfu.gz
exho $FONTSIZE
echo $FONTSIZE
ls /etc/fonts/
ls /etc/fonts/conf.d/
setfont dina.psfu.gz
/etc
../usr
./share/kbd/consolefonts
ls dina*
yay -Ql dina-font
yay -Ql bdf-unifont
yay -S bdf-unifont
yay -S efont-unicode-bdf
yay -Ql efont-unicode-bdf
yay -Ql efont-unicode-bdf | grep psf
yay -Rsc efont-unicode-bdf
yay -Ss kissinger
z Downloads
extract kissinger2dev4.zip
mkdir ~/Music
mv *.mp3 ~/Music
rm *.zip
n readme.cpp
man bdf2pcf
yay -Ss bdf
yay -S bdf2psf
n kissinger2ftest.bdf
yay -S otf2bdf
otf2bdf Kissinger2f.ttf -o out.bdf
diff out.bdf kissinger2ftest.bdf
otf2bdf Kissinger2f.ttf -h
n out.bdf
bdf2psf --fb out.bdf /usr/share/bdf2psf/standard.equivalents /usr/share/bdf2psf/ascii.set 256 kissinger.psf
sudo cp kissinger.psf /usr/share/kbd/consolefonts/
mkcd ../fonts
l /usr/share/kbd/consolefonts
ls /usr/share/fonts/PlemolJP/
mkdir ttf
mkdir bdf
mkdir psf
cp /usr/share/fonts/PlemolJP/* ttf/
sudo cp /usr/share/fonts/misc/*.gz /usr/share/kbd/consolefonts/
otf2bdf ttf/PlemolJP35-BoldItalic.ttf -o temp.bdf
n temp.bdf
rm temp.bdf
man otf2bdf
n bdf/PlemolJP35-BoldItalic.bdf
rm bdf/PlemolJP35-BoldItalic.bdf
make -k
l bdf
yay -S fontforge
fontforge -lang=ff -c 'Open*$1
fontforge -lang=ff -c 'Open($1); Generate($2)' ttf/PlemolJP35-BoldItalic.ttf temp.bdf
fontforge -h
jobs
kill 58789
jobs -p
fg
yay -Rsc fontforge
make -k -j16
otf2bdf ttf/PlemolJP35-BoldItalic.ttf -o bdf/PlemolJP35-BoldItalic.bdf
otf2bdf ttf/PlemolJP35-BoldItalic.ttf -z bdf/PlemolJP35-BoldItalic.bdf
yay -S artwiz-fonts
yay -Ql artwiz-fonts
yay -R artwiz-fonts
extract 0xProto.zip
mv ~/Downloads/*.ttf ttf/
rmf ttf/*
make T=asm OL=3
make asm OL=3
make main.s OL=3
make src/main.s OL=3
n src/main.s
rm src/main.s
l .build/641abcde3a07346681d57b1a81b27e4b/target
l .build/459fb5b8b9226fe49fd24fe82ce4cc62/target
zig build run -DT=bench --release-fast
l zig-out/bin
./zig-out/bin/rpx
.zig-cache/o/3597b72efa7f1d41589cc67c91af19f0/rpx
zig build run -DT=bench --release=
l **/rpx
setfont dina
setfont -u /usr/share/fonts/misc/DinaMedium8.pcf.gz
./usr
setfont kissinger.psf
setfont dinaMidium8.psf.gz
l /usr/share/fonts/misc
setfont DinaMidium8.psf.gz
setfont DinaMedium8.psf.gz
setfont DinaMedium6.pcf.gz
setfont DinaMedium10.pcf.gz
setfont DinaMedium8.pcf.gz
sudo rm Dina*
sudo rm /usr/share/kbd/consolefonts/Dina*
z console
setfont alt-8x16.gz
setfont GohaClassic-16.psfu.gz
setfont -d GohaClassic-16.psfu.gz
setfont -d aply16.psf.gz
setfont -d iso01.16.gz
setfont -d greek-polytonic.psfu.gz
setfont -d arm8.fnt.gz
setfont -d cp850-8x16.psfu.gz
setfont -d lat9-16.psf.gz
setfont -d lat1-08.psfu.gz
setfont -d lat1-16.psfu.gz
setfont -d Mik_8x16.gz
setfont -d pancyrillic.f16.psfu.gz
setfont -d partialfonts/8859-10.a0-ff.08.gz
setfont -d viscii10-8x16.psfu.gz
setfont -d t.fnt.gz
setfont -d tcvn8x16.psf.gz
setfont -d UniCyr_8x16.psf.gz
setfont -d solar24x32.psfu.gz
setfont -d ruscii_8x16.psfu.gz
setfont -d eurlatgr.psfu.gz
setfont -d bynfont.psfu.gz
setfont -d altc-8x16.gz
setfont -d alt-8x16.gz
setfont -d Agafari-16.psfu.gz
setfont -d drdos8x16.psfu.gz
setfont -d cyr-sun16.psfu.gz
setfont -d Goha-16.psfu.gz
setfont
setfont -d cybercafe.fnt.gz
htop
man setfont
man script
script --timing
man grim
grim
rm Pictures/20241130_10h41m42s_grim.png
yay -S scrot
scrot --select
man scrot
scrot -b
l Pictures
rm 2024-11-30-104621_1440x900_scrot.png
yay -Rsc scrot
foot vifm
vifm
foot fzf
fzf /
n ~/.config/hypr/
man yazi
yazi --version
n ~/.config/hypr/hyprland.conf
yay -Qs manager
yay -Rsc sway
yay -Rsc emptty
yay -Q | cut -d\ -f1 > pacmanlist.txt
yay -S nu
yay -S nushell
zshrc
setfont cybercafe8x16
setfont -d cybercafe8x16
setfont -d cybercafe
sudo chsh -s (which zsh) sundo
which zsh
z tex
mkcd -h
mkcd IoT
cp ../../pro/alg/no12/makefile .
n ~/crash.log
rmf `report 1.m5f` `test_1 1.ino`
rm Downloads/shutdown.sh
cd `Pictures/Vivaldi Captures/`
starship --help
starship config
starship prompt
starship mosule
starship module
starship module --list
starship module time
starship module os
starship module --help
starship module directory
starship module nodejs
starship module memory-usage
starship module memory_usage
n starship.nu
sudo chsh -s /sbin/nu sundo
pacman -Q ly
pacman -Qi ly
sudo systemctl start hyprland
sudo systemctl start hyprland.service
n crash.log
z no12
mv main.pdf 演習12_IS3_16_小山隼冬.pdf
^pueue
pueued -d
pueue add nvim starship.toml
pueue start
pueue start -h
pueue start -a
pueue log 0
n QtProject.conf
n /etc/xdg/foot/foot.ini
n starship.toml
make run T=bench OL=g
yay -S himalaya
himalaya
yay -Rsc himalaya
yay -Ss language server
yay -Ss language server java
yay -Ss skk
yay -S fcitx5-skk
mkcd ~/.config/libskk/rules/StickyShift/keymap
n hiragana.json
n katakana.json
../../..
sudo systemctl stop fcitx5
sudo systemctl stop fcitx5-remote
yay -Q mozc
yay -Q | grep mozc
yay -Rsc fcitx5-mozc
テスト▼実行
こんにちは、 世界
　ねおう゛ぃm
rg define\ EXPAND
rg 'define EXPAND'
zig build run -DT=test
rg test_table
ping -f -l 1472 8.8.8.8
ping -l -f 1472 8.8.8.8
gcc src/phyconst.c src/testing.c -DTEST_MODE
gcc src/phyconst.c src/testing.c -DTEST_MODE -Iinclude
gcc src/phyconst.c src/testing.c -DTEST_MODE -Iinclude -std=c23
gcc src/phyconst.c src/testing.c src/gene.c -DTEST_MODE -Iinclude -std=c23
head src/gene.c
head src/testing.c
head src/phyconst.c
gcc temp.c src/testing.c -DTEST_MODE -Iinclude
gcc temp.c src/testing.c src/gene.c -DTEST_MODE -Iinclude
gcc temp.c src/testing.c src/gene.c -DTEST_MODE -Iinclude -std=c23
gcc temp.c src/testing.c -Iinclude
clang temp.c src/testing.c -Iinclude -DTEST_MODE -std=c23
gcc -M temp.c -Iinclude/
cpp temp.c -Iinclude
cpp temp.c -Iinclude -DTEST_MODE
cpp temp.c -Iinclude -DTEST_MODE | tail -n 30
cpp temp.c -Iinclude -DTEST_MODE | tail -n 20
cpp temp.c -Iinclude -DTEST_MODE | tail -n 15
cpp temp.c -Iinclude -DTEST_MODE | tail -n 15 | sed '/^#/d'
cpp temp.c -Iinclude -DTEST_MODE | tail -n 15 | clang-format
gcc temp.c src/testing.c -Iinclude -DTEST_MODE -std=c23
gcc temp.c src/testing.c -Iinclude -DTEST_MODE
rm a.out temp.c
gcc temp.c -c -std=c23
mv temp.c ..
cd ..
clang temp.c -c
gcc temp.c -c
rm temp.*
cd -
rm temp.o
mkcd ../qiita
bear -- clang main.c test.c -DTEST
gcc main.c test.c -DTEST
gcc main.c test.c
valgrind ./a.out
n test.h
clang main.c test.c -DTEST
skk --skkserv
mkcd ~/.config/libskk/rules/StickyShift
mkdir keymap
z linu
ps | find git
ps -h
ps -l | find git
git gc --aggressive --prune=all
./syncplug.sh
basename hello/world
[ "hello" "world" ]
help
help file
"hello/world" | path basename
n syncplug.sh
rg 'q:'
rg 'q\:'
rg ':'
n --clean cmdwin.lua
n ~/.local/state/nvim/shada/main.shada
n cmdwin.lua
nu syncplug.nu
/bin/env nu
cd -h
path exists README.md
mkdir plugins
chmod -h
chmod 744 syncplug.nu
mc syncplug.sh archive/
mv syncplug.sh archive/
ls -s
ls -D
ls plugins/
ls | table
ls | table --index 1
ls | table --index 1 --flatten
table -l
sys host
[hello world]
[hello world] - [hello]
exit -h
open syncplug.nu
open syncplug.nu | collect
ls | collect
collect -h
bat syncplug.nu
nu -l
nu --plugin-config
cargo install cargo-update
lsmod
modinfo loop
du linux
cd linux
nvim (tv)
mkcd ../kernel-mod
yay -S linux-headers
mv makefile Makefile
mv main.c
mv main.c hello_module.c
sudo insmod hello_module.ko
dmesg | tail
sudo rmmod hello_module
sudo dmesg | tail
n hello_module.c
ls -ad
n hello_module.mod.c
bear -- make -j16
afplay -h
yay -S beep
beep
sudo beep
yay -Rsc beep
yay -Ss beep
ls /usr/share/sounds/Oxygen-Window-Move.ogg
yay -Ss ogg
yay -Ss ogg123
yay -S gst123
yay -Ss canberra-gtk-play
yay -Ss canberra
ogg123
canberra-gtk-play /usr/share/sounds/Oxygen-Im-Cant-Connect.ogg
man canberra-gtk-play
canberra-gtk-play -h
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Cant-Connect.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Connection-Lost.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Contact-In.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Contact-Out.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Error-On-Connection.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Highlight-Msg.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Irc-Event.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Low-Priority-Message.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-New-Mail.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Message-In.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Message-Out.ogg
ls /usr/share/sounds/ | get name
ls /usr/share/sounds/ | where type == file | get name
ls /usr/share/sounds/ | where type == file
ls /usr/share/sounds/
ls /usr/share/sounds/ | where type == symlink | get name
ls /usr/share/sounds/**/*.ogg
ls /usr/share/sounds/**/*.ogg | get name
ls /usr/share/sounds/**/*.ogg | get name | each { |name| ^echo $name; canberra-gtk-play -f $name }
ls /usr/share/sounds/**/*.ogg | find phone |get name | each { |name| ^echo $name; canberra-gtk-play -f $name }
ls /usr/share/sounds/**/*.ogg | find phone | get name
ls /usr/share/sounds/**/*.ogg | find phone | get name | each { |name| ^echo $name; canberra-gtk-play -f $name }
canberra-gtk-play -f /usr/share/sounds/Oxygen-K3B-Finish-Success.ogg
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Nudge.ogg
canberra-gtk-play -f /usr/share/sounds/alsa/Front_Center.wav
canberra-gtk-play -f /usr/share/sounds/alsa/Front_Left.wav
canberra-gtk-play -f /usr/share/sounds/Oxygen-Im-Phone-Ring.ogg
starship init zsh
z zsh/
n fzf.zsh
rm fzf.zsh
starship init zsh > starship.zsh
starship init zsh | save starship.zsh
n starship.zsh
n ~/.zshrc
fzf
lsix /proc/gcc/gcc/rust/logo.png
ps | find neo
yay -Ss colorscript
yay -S polemon-colorscripts
yay -S polemon-colorscripts-git
yay -S pokemon-colorscripts-git
colorscript
../../project/shell/
g cl https://github.com/charitarthchugh/shell-color-scripts.git --depth 1
mv shell-color-scripts/ ~/.config/zsh/
sozsh
yay -Ss hyprpaper
hyprpaper --help
kill 939
hyprpaper /usr/share/backgrounds/cyber.jpg
hyprpaper -c /usr/share/backgrounds/cyber.jpg
l /usr/share/HyprPanel/widget/
l /usr/share/HyprPanel/themes/
l /usr/share/hypr/wall2.png
lsix /usr/share/hypr/wall2.png
sudo cp /usr/share/backgrounds/cyber.jpg /usr/share/hypr/wall3.jpg
convert /usr/share/backgrounds/cyber.jpg /usr/share/hypr/wall3.png
sudo convert /usr/share/backgrounds/cyber.jpg /usr/share/hypr/wall3.png
sudo rm /usr/share/hypr/wall3.jpg
sudo rm /usr/share/hypr/wall3.png
hyprctl reload
hyprpaper
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- hyprland.conf
l .local/share/nvim/
mkdir .local/share/nvim/zoxide
z blink /
z l /
mv lua/zoxide.lua lua/cdtrack.lua
mv ~/.local/share/nvim/zoxide/ ~/.local/share/nvim/cdtrack
mkcd lib
mkcd fuzzypath
bear -- clang -std=c23 main.c
cp ~/project/c/rpx/include/chore.h ~/project/c/rpx/src/chore.c .
rm lib/fuzzypath/chore.c
cd lib/fuzzypath/
clang -shared -fPIC -o matchfuzzy.so main.c
clang -shared -fPIC -o matchfuzzy.so main.c -std=c23
bear -- clang -shared -fPIC -o matchfuzzy.so main.c -std=c23
clang -shared -fPIC -o matchfuzzy.so main.c -std=c23 -O3
mv lib/ lua/
l lua/lib/
cd lua/lib/fuzzypath/
clang -shared -fPIC -o matchfuzzy.so main.c fs.c -std=c23 -O3
clang -shared -fPIC -o .. matchfuzzy.so main.c fs.c -std=c23 -O3
rm matchfuzzy.so
echo $CPATH
rm ../matchfuzzy.so
clang -shared -fPIC -o ../../matchfuzzy.so main.c fs.c -std=c23 -O3
z sna
z plugins/snacks.nvim/lua/snacks/dashboard.lua
g config pull.rebase true
mv matchfuzzy.so fuzzypath/fuzpath.so
mv fuzzypath/ fuzpath
rg matchfuzzy
rg fuzzypath
cd fuzpath/
clang -shared -fPIC -o ../matchfuzzy.so main.c fs.c -std=c23 -O3
clang -shared -fPIC -o ../../fuzpath.so main.c fs.c -std=c23 -O3
rm fuzpath.so ../matchfuzzy.so
rm ../../fuzpath.so
l ..
z ../..
rg cpath
bat lua/blink/cmp/fuzzy/rust.lua
rg require
z lua/lib/fuzpath/
clang -shared -fPIC -o ../fuzpath.so main.c fs.c -std=c23 -O3
make clean
z editor/vim/
~/proc/gcc/
~/linux/
rmf .tuxpaint/ youken.txt
^ls -AR / | save allfile.txt
ls allfile.txt
n allfile.txt
wc allfile.txt
wc allfile.txt -l
z lua/lib/
mv lua/lib/ .
mv lib/fuzpath/ src/
mv lib/makefile .
rm lib/fuzpath.so
t
rm lua/matchfuzzy.so
l lib/
cd foot/
yay -Rsc swww
kill 1124
sudo dmesg
rg swww **/*.conf
cd hyprpanel/
rg swww
yay -S swww
mv plugins/makefile plugins.mk
rm plugins.mk
z gpt
-
bat nvim.txt
python3 gpt_repository_loader.py ~/.config/nvim -o nvim.txt
cat nvim.txt | wl-copy
cmake -G
cmake -G "Ninja" ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra" -DLLVM_TARGETS_TO_BUILD="x86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_USE_LINKER=lld
cmake -G "Ninja" ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_USE_LINKER=lld
~/shutdown.sh
^ps aux
which clang
l /usr/local/bin/clang
cd hypr/
systemd status hyprpanel
systemctl status hyprpanel
systemctl status hypr
systemctl status hyprland
agsv1 --quit
eww shell-completions nu
eww shell-completions --shell nu
mkcd ../eww
ewww
mv ../hypr/eww.yuck .
eww open greeter
eww dtate
eww state
sudo cp -r /etc/xdg/eww/* .
mv eww-bar/* .
^ls -l
bat eww.yuck
ls eww-bar/
rmf eww-bar/
rm --permanent eww-bar/*
sudo rmf eww-bar/
sudo rm -rf eww-bar/
eww list-window
eww list-windows
swww --help
ps | find swww
hyprctl activewindow
eww kill
sudo mv /usr/share/hypr/wall0.png /usr/share/hypr/wall0.png.backup
sudo cp /usr/share/backgrounds/gruvbox.jpg /usr/share/hypr/wall0.jpg
find /usr/share/hypr -name "*.jpg" -exec mogrify -format png {} \;
^find /usr/share/hypr -name "*.jpg" -exec mogrify -format png {} \;
mogrify
sudo ^find /usr/share/hypr -name "*.jpg" -exec mogrify -format png {} \;
sudo find /usr/share/hypr -name "*.jpg" -exec mogrify -format png {} \;
sudo mogrify -format png /usr/share/hypr/wall0.jpg
l /usr/share/hypr
sudo rm /usr/share/hypr/wall0.jpg
../hypr
sudo mv /usr/share/hypr/wall0.png /usr/share/hypr/wall3.png
sudo mv /usr/share/hypr/wall3.png /usr/share/hypr/wall0.png
rmf .config/hypr/hyprpaper.conf
mkcd no16
clang main.c
cd plugins/blink.cmp/
n lua/blink/cmp/fuzzy/init.lua
../alg/no16/
z no
../alg/np16
../alg/no16
agsv1 --help
agsv1
z project/pro/alg/no12/
make main
rm main
make main.pdf
cd no16
l ../no12
zsh -c 'echo $NVIM'
nvim --server
nvim -h
n --server sundo --remote-send "<cmd>cd .config/nvim<CR>"
n --server sundo
n --listen sundo
n --remote-send '<cmd>cd .config/nvim<CR>'
makoctl --help
makoctl history
l /tmp/nvim
NVIM_LISTEN_ADDRESS=/tmp/nvim nvim
n --server $env.NVIM --remote-send "<cmd>cd .config/nvim<CR>"
$env.temp
echo $env.NVIM
let -h
const =h
const -h
set -h
if (try { $env.temp } | is-empty) { echo 'not found' } else { echo 'found' }
if (try { $env.temp } | is-empty) { echo 'found' }
try { $env.temp } | is-empty
try { $env.temp }
try { $env.CMD_DURATION_MS }
is-empty -h
try { $env.CMD_DURATION_MS } | describe
try { $env.CMD } | describe
config nu
env-exist NVIM
$env.DISPLAY
env-exist DISPLAY
(try { $env.DISPLAY }) != null
source utils.nu
env-exist $env.NVIM
env-exist \$env.NVIM
env-exist \$env.DISPLAY
n utils.nu
cds .config/
cds -h
try -h
cds .config/nvim/
cds ../nushell/
error make -h
metadata -h
zoxide --query --list
zoxide query --list
zoxide query --list | wc
zoxide query --list -s
zoxide query -h
zoxide query nvim
zoxide add -h
zoxide -h
let actual_path = (zoxide query hy)
echo $actual_path
zoxide query hy
zoxide query nu
echo $env
echo $env | find NVIM
(echo $env).0
(echo $env) | find NVIM
(echo $env) | find DISPLAY
(echo $env) | find DISPLAYY
$env | find NVIM | is-not-empty
$env | find NVIMM | is-not-empty
zs nvim
zoxide query co
exir
zs co
zs nus
cat history.txt | superuniq
cat history.txt | wc
cat history.txt | superuniq | wc
cat history.txt | superuniq | save -f history.txt
which z
alias -h
alias z
rg z
z co
zi
error make { msg: "Neovim is not running" }
send-to-nvim-cmd "<cmd>echo "hello""
send-to-nvim-cmd "<cmd>echo "hello"<CR>"
send-to-nvim-cmd "<cmd>echo "hello"<CR>" --strict=true
send-to-nvim-cmd -h
zoxide query zzz
z zzz
colorscript -h
colorscript -e pokemon
colorscript -e thebat
colorscript -e thebat2
colorscript -e fade
colorscript -e face
colorscript -e faces
colorscript -e bars
colorscript -e blocks
colorscript -e blocks1
colorscript -e blocks2
colorscript -e alpha
colorscript -e arch
colorscript -e colorbars
colorscript -e colorwheel
colorscript -e debian
colorscript -e colorview
colorscript -e bloks
colorscript -e dna
colorscript -e rails
colorscript -e rally-x
colorscript -e six
colorscript -e hearts
colorscript -e elfman
colorscript -e crunch
colorscript -e colortest
colorscript -e colortest-slim
colorscript -e monster
colorscript -e mouseface
colorscript -e ghosts
colorscript -e panes
colorscript -e tcs
colorscript -e tvs
colorscript -e zwaves
colorscript -e tiefighter1
colorscript -e tiefighter1-no-info
colorscript -e tiefighter1-no-invo
colorscript -e tiefighter1row
colorscript -e tiefighter2
colorscript -e spectrum
colorscript -e rupees
colorscript -e square
colorscript -e print256
colorscript -e pacman
colorscript -e pacman-large
colorscript -e mouseface2
colorscript -e crunchbang
colorscript -e darthvader
colorscript -e hedgehogs
colorscript -e popos
colorscript -e jangofett
colorscript -e space-invaders
yay -S ollama
ollama list
free -h
ollama run codellama
ollama run moondream
rg colorscript
colorscript -l
colorscript -e illumina
rg square
yay -Ss mission-center
yay -Ss hevi
hevi LICENSE
hevi -h
cargo install lla
cargo install smartcat
tracepath 8.8.8.8
yay -S lazyjournal
yay -Ss lazyjournal
go install github.com/Lifailon/lazyjournal@latest
lazyjournal
yay -S pandoc
yay -S typespeed
typespeed
yay -S radare2
ollama run mistral
ollama serve
r2 -d -e bin.cache=true /bin/ls
r2 -d -e bin.relocs.apply=true /bin/ls
r2 -Ad /bin/ls
r2 -d /bin/yes
r2 -d /usr/local/bin/rpx
r2 --version
r2 -v
r2 -V
git clone https://github.com/radareorg/radare2.git tool/ --depth 1
git clone https://github.com/radareorg/radare2.git tool/radare2 --depth 1
z tool/radare2/
CC=clang LDFLAGS=-fuse-ld=gold meson . release --buildtype=release --prefix ~/.local/stow/radare2/release
rmf ~/.local/stow/
rmf release/
CC=clang LDFLAGS=-fuse-ld=gold meson . release --buildtype=release
yay -Rsc radare2
l /usr/local/lib/
ninja -C release install
r2 /bin/ls
yay -S capstone
yay -Rsc capstone
ls /usr/local/lib/libr_*
ldd r2
echo $env.LD_LIBRARY_PATH
$env.LD_LIBRARY_PATH = /usr/local/lib
$env.LD_LIBRARY_PATH = "/usr/local/lib"
ldd /usr/local/bin/r2
sudo mandb
man -k radare2
man radare2
whatis radare2
fastfetvh
l ~/.cargo/bin/
lla
lla -T
lla -t
lla -l
man man
ource alias.nu
batman man
vim 
vim +Man
yay -S home-manager
yay -Ss home-manager
sudo nix-shell '<home-manager>' -A install
nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
nix-env -s home-manager
nix-env --help
nix-env --query home-manager
sudo nix-env --query home-manager
sudo nix-env --query neovim
nix-channel --add https://nixos.org/channels/nixpkgs-unstable
sudo nix-env -qa
ls /nix/var/nix/daemon-socket/
ls /nix/var/nix/
l /nix
sudo usermod -aG nix-users sundo
nix-chennel --update
sudo nix-channel --update
sudo chown sundo:users /nix uid=1000,gid=1000
sudo chown sundo:users /nix/**
sudo chown sundo:users /nix/**/*
l /nix/var/nix/db/big-lock
yay -Q acpi
yay -Q tlp
mkcd .config/home-manager
z .
z ~/.config/home-manager/
homectl --help
z /nix
n store/mwc4zqawgf7wigwgbn46pyjhfn4y64ix-home-manager/home-manager/home-manager/home-manager
store/mwc4zqawgf7wigwgbn46pyjhfn4y64ix-home-manager/home-manager/home-manager/home-manager switch
bash store/mwc4zqawgf7wigwgbn46pyjhfn4y64ix-home-manager/home-manager/home-manager/home-manager switch
n ~/.bashrc
ni
nix-shell '<home-manager>' -A install --show-trace
$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
$env.HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
~/.nix-profile/etc/profile.d/hm-session-vars.sh
bash ~/.nix-profile/etc/profile.d/hm-session-vars.sh
home-manager --help
n ~/.nix-profile/etc/profile.d/hm-session-vars.sh
yay -Rsc btop
nix-env -qa
home-manager-path
cat ~/.nix-profile/etc/profile.d/hm-session-vars.sh
nix --help
man -k home-manager
man -k radare
mv home.nix home.nix.bk
nix-shell '<home-manager>' -A install
man home-configuration.nix
home-manager
nix-channel --help
cat ~/.nix-profile/etc/profile.d/hm-session-vars.sh 
cat /nix/store/wcmn60d6c7cf18l8imadpydlv58z87g9-glibc-locales-2.40-36/lib/locale/locale-archive
/nix/store/wcmn60d6c7cf18l8imadpydlv58z87g9-glibc-locales-2.40-36/lib/locale/locale-archive
bash /nix/store/wcmn60d6c7cf18l8imadpydlv58z87g9-glibc-locales-2.40-36/lib/locale/locale-archive
systemctl status home-manager
systemctl status home-manager-sundo
/nix/store/bx5vrn5v3j29z4lm075hd560yjfg54f3-home-manager/bin/home-manager
/nix/store/bx5vrn5v3j29z4lm075hd560yjfg54f3-home-manager/bin/home-manager switch
nix-env -i btop
source $nu.env-path
nix -i home-manager
nix-env -i home.manager
nix-channel --remove home-manager 
nix-channel --update 
nix-env -u
which home-manager
l .nix-defexpr/channels/manifest.nix
cat .nix-defexpr/channels/nixpkgs/default.nix 
cat .nix-profile/etc/profile.d/hm-session-vars.sh 
cat /nix/var/nix/profiles/default 
cat /nix/var/nix/profiles/per-user/root/channels/manifest.nix 
nix-env -i nix
echo $env.PATH
nix profile remove home-manager
nix profile remove home-manager --extra-experimental-features nix-command
nix profile list --extra-experimantal-features nix-command
nix profile remove home-manager-path --extra-experimental-features nix-command
l .local/state/nix/profiles/profile/
nix profile install home-manager --extra-experimental-features nix-commands
nix profile install home-manager --extra-experimental-features nix-command
nix profile install home-manager --extra-experimental-features nix-command --extra-experimental-features flakes
nix-env -e btop
nix profile remove btop
nix profile remove btop --extra-experimental-features nix-command
nix profile remove btop --extra-experimental-features nix-command --extra-experimental-features flakes
l .local/state/nix/profiles/profile/bin/
nix profile list --extra-experimental-features nix-command
nix profile remove flakes:home-manager --extra-experimental-features nix-command --extra-experimental-features flakes
nix profile remove flakes:home-manager#packages.x86_64-linux.default --extra-experimental-features nix-command --extra-experimental-features flakes
nix profile remove 'flakes:home-manager#packages.x86_64-linux.default' --extra-experimental-features nix-command --extra-experimental-features flakes
home-manager switch --extra-experimental-features nix-commands --extra-experimental-features flakes
home-manager switch --extra-experimental-features nix-command --extra-experimental-features flakes
nix profile remove 1 --extra-experimental-features nix-command
nix profile list --extra-experimental-features nix-command --extra-experimental-features flakes
nix profile remove home-manager --extra-experimental-features nix-command --extra-experimental-features flakes
nix profile remove flake:home-manager --extra-experimental-features nix-command --extra-experimental-features flakes
rm home.nix
mv home.nix.bk home.nix
nix run nixpkgs#home-manager -- switch --flake
nix run nixpkgs#home-manager --extra-experimental-features nix-command --extra-experimental-features flakes -- switch --flake
which -h
nix profile remove nix
nix profile remove nix --extra-experimental-features nix-command
nix profile remove nix --extra-experimental-features nix-command --extra-experimental-features flakes
nix
rmf /nix/ --permanent
sudo rm -rf /nix/ --permanent
sudo chown sundo:users /nix
sudo chown sundo:users /nix/*
sudo chown sundo:users /nix/var/nix
sudo chown sundo:users /nix/var/nix/profiles/per-user/
sudo chown sundo:users /nix/var/nix/profiles/
l /nix/var/nix/profiles/per-user/
l /nix/var/nix/profiles
nix-shell home.nix
newgrp nix-users
chmod 755 /nix/var/nix/gcroots/per-user/
sudo chmod 755 /nix/var/nix/gcroots/per-user/
nix config check
nix config check --extra-experimental-features nix-command
sudo usermod -aG nixbld sundo
newgrp nixbld
l -ld /nix/
l -ld /nix
ls -ld /nix
^ls -ld /nix
rmf /nix/
sudo rm -rf /nix/
l /nix/
sudo chown -R root:nixbld /nix
sudo chmod 1777 /nix
nix doctor --extra-experimental-features nix-command --extra-expermental-features flakes
nix doctor --extra-experimental-features nix-command --extra-experimental-features flakes
l /nix/var/nix/daemon-socket/
l /nix/var/nix/
groups sundo
groups
nix-channel --update
nix-env -i home-manager
z home
rm ~/.local/state/home-manager/gcroots/current-home
rm ~/.local/state/nix/profiles/home-manager*
nix-env -e home-manager
nix run nixpkgs#home-manager -- switch
home-manager switch
l ~/.nix-defexpr/channels/
yay -Rsc acpi
yay -Rsc git
yay _
yay -Rsc zig
yay -Rsc nix
yay -Rsc hyprpaper 
yay -Rsc meson ninja
yay -Rsc cargo
yay -Rsc rustup 
yay -Rsc ly 
yay -Rsc mako
yay -Rsc make
yay -Rsc cmake
zig --help
which zig
yay -Q
yay -Rsc yazi
yay -Rsc zsh
nix -qa busybox
nix-env -qa busybox
nix run nixpkgs#home-manager --extra-experimental-features nix-command --extra-experimental-features flakes -- switch
nix-shell -p busybox
l /usr/lib/nix/
l /usr/lib/
nix-env -i busybox
nix flake
nix flake init
ldd (^which btop)
ldd (which btop)
which btop
^which btop
nix build
./result/bin/hello
./result/bin/hello --help
./result/bin/hello -t
rmf result/
l result/
nix profile listx
rm result/
sudo rm -rf result/
yay -S busybox
busybox 
busybox ls
ln /bin/busybox /usr/lib/nix/
nix profile remove home-manager-path
curl -L https://nixos.org/nix/install | sh
g cl https://github.com/NixOS/nix.git --depth 1
rmf nix/
sudo rm /usr/lib/nix/busybox 
yay -S nix
which -a nix
pacman -Q
yay -Rsc wofi
yay -Rsc w3m
pacman -Q | cut -f1
pacman -Q | cut -d' ' -f1
pacman -Q | cut -d' ' -f1 | save pkgs.txt
yay -Rsc agsv1
yay -Rsc agsv1-debug 
yay -Rsc amdgpu_top amdgpu_top-debug
yay -Rsc bear
yay -Rsc brightnessctl
yay -Rsc cmus
yay -Rsc cpufetch fastfetch onefetch
yay -Rsc llvm
yay -Rsc ccache
yay -Rsc dmenu dunst
yay -Rsc difftastic
yay -Rsc gdb cgdb
yay -Rsc gdb
yay -Rsc figlet fd
yay -Rsc eww eww-debug
yay -Rsc gawk
yay -Rsc fzf
yay -Rsc gcc
yay -Rsc gcc-libs
yay -Rsc git-delta github-cli
yay -Rsc go go-task
yay -Rsc gpu-screen-recorder-debug 
yay -Rsc fcitx5
yay -Rsc qt5
l ~/.nix-profile/bin/
yay -Rsc keyd
yay -Rsc hyprland
yay -Rsc imagemagic ffmpeg libsixel
yay -Rsc imagemagick
/usr/share/fontconfig/
cd kbd/consolefonts/
^ls
setfont default8x16
ls ~/.nix-profile/bin/
l /etc/keyd/default.conf
fcitx5-remote
nix flake update
nix flake info 
nix profile upgrade 
nix profile upgrade .#mypkgs
^ls ~/.nix-profile/bin/
tmux
yay -Rsc gtk3 
yay -Rsc gtk4
yay -Rsc gtk3 | head -n 50
yay -Rsc gtk3
yay -Qi automake
yay -Rsc automake
yay -Qi bun
yay -Rsc bun bun-debug
yay -Rsc bun-bin bun-bin-debug
yay -Rsc wl-clipboard
yay -Qi avahi
yay -Rsc dbus
which -a dbus
which -a dbus-broker 
yay -Rsc espeak
yay -Rsc luajit
yay -Rsc lua-language-server lua53 luajit 
yay -Rsc rust-analyzer
yay -Rsc fcitx5-gtk 
yay -Rsc fakeroot 
yay -Rsc flex
yay -Rsc hevi hevi-debug
yay -Qi iw
yay -Rsc python 
yay -Rsc python36 python36-debug 
yay -Rsc jq json-c 
yay -Rsc jq
yay -Rsc hwdata
yay -Rsc lazygit less
yay -Rsc lazyjournal
yay -Rsc kmod
yay -Rsc lld
yay -Rsc llvm-libs 
yay -Rsc wayland 
yay -Rsc xorg
yay -Rsc ncdu
yay -Rsc linux-headers 
yay -Rsc nushell
yay -Rsc ollama
yay -Rsc nodejs
yay -Rsc noto-fonts noto-fonts-cjk 
yay -Rsc otf-cm-unicode otf-ipafont otf-latin-modern otf-latinmodern-math otf2bdf otf2bdf-debug 
yay -Rsc nerdfetch
yay -Rsc perl
yay -Rsc texlive
sudo pacman -Rsc texlive
sudo pacman -Rsc pueue
sudo pacman -Rsc sed
sudo pacman -Rsc pulseaudio
sudo pacman -Rsc sqlite
sudo pacman -Rsc swww
sudo pacman -Rsc tealdeer
sudo pacman -Rsc television 
sudo pacman -Rsc ttf-plemoljp 
alias nix = nix --extra-experimental-features nix-command --extra-experimental-features flakes
sudo ln ~/.nix-profile/bin/nu /bin/
sudo cat /etc/passwd
sudo chsh -s /sbin/zsh sundo
sudo ln ~/.nix-profile/bin/zsh /bin/
sudo chsh -s /bin/zsh sundo
sudo chsh -s /bin/bash sundo
n ~/shutdown.sh
ps | find nix
keyd --version
systemctl status keyd
n .xsession-errors
yay -Rsc vivaldi
sudo pacman -Rsc vivaldi
yay -Rsc texlab typst
sudo pacman -Rsc texlab typst
l ../.config/nixpkgs/config.nix
cat /etc/nix/nix.conf 
n ../.config/nixpkgs/config.nix
$env.NIXPKGS_ALLOW_UNFREE=1
$env.NIXPKGS_ALLOW_UNFREE = 1
which vivaldi
which -a vivaldi
nix profile upgrade mypkgs --impure
sudo pacman -S firefox
which tv
nix profile upgrade mypkgs --show-trace
nix-env -qa texlive
nix-env -qa lualatex
sudo pacman -S vivaldi
Hyprland 
Hyprland | head -n 50
Hyprland err>out | head -n 50
n ~/.config/nushell/alias.nu
Hyprland err> out | head -n 50
n ../.cache/hyprland/hyprlandCrashReport138359.txt
nix-env -qa amdgpu
nix-env -qa vulkan
nix-env -qa xf86
sudo pacman -S xf86-video-amdgpu 
n .cache/hyprland/hyprlandCrashReport144907.txt
sudo pacman -Rsc xf86-video-amdgpu 
nix-env -qa | less
lsmod | grep amdgpu
l .cache/hyprland/
n .cache/hyprland/hyprlandCrashReport819.txt
n ../.cache/hyprland/hyprlandCrashReport26361.txt
n ../.cache/hyprland/hyprlandCrashReport49774.txt
wayland
systemctl status wayland
setfont -d default8x16
nix profile upgrade mypkgs
nix flake 
nix run nixpkgs#home-manager --extra-experimental-features nix-command --extra-experimental-features flakes -- switch --flake .#myHomeConfig
nix run nixpkgs#home-manager -- switch --flake .#myHomeConfig
cp ../.config/home-manager/home.nix .
nix run nixpkgs#home-manager -- switch --flake .#myHomeConfig --extra-experimental-features nix-command --extra-experimental-features flakes --show-trace
nix profile install .#mypkgs
n ../.cache/hyprland/hyprlandCrashReport166321.txt
nix run gc
nix-env -q
sudo nix-store --verify --repair
n ../.config/home-manager/home.nix
nvimsudo /etc/vconsole.conf
nvimsudo /etc/nix/nix.conf
nix run nixpkgs#home-manager -- switch --flake .#myHomeConfig --extra-experimental-features nix-command --extra-experimental-features flakes
rm ../allfile.txt
n hyprlandCrashReport336162.txt
git
which git
nix-collect-garbage -d
nix store gc 
git -h
keyd
n .xprofile
sudo pacman -Rsc libevdev-tweak-device libpng-config libpng16-config 
which make
sudo pacman -S pacman
sudo pacman -Rsc base-devel
rmf yay/
z .cache/
pacman -Q | cut -d' ' -f1 | save -f pkgs.txt
sudo pacman -Rsc man-pages ocean-sound-theme lz4
sudo pacman -Rsc man-pages ocean-sound-theme
sudo pacman -Rsc pam
sudo pacman -Rsc vim vifm
sudo pacman -Rsc typespeed
sudo pacman -Rsc typespeed-debug 
which nix
sudo pacman -Rsc xorgproto 
n -d pkgs.txt pkgs2.txt
sudo pacman -Rsc wget
n ../.config/nushell/alias.nu
n /etc/nix/nix.conf.pacsave
sudo mv /etc/nix/nix.conf.pacsave /etc/nix/nix.conf
sudo pacman -S busybox
sudo mkdir /usr/lib/nix
sudo ln /bin/busybox /usr/lib/nix/
vivaldi
systemctl list-units 
n /etc/systemd/system/brightnessctl.service
sudo systemctl start brightnessctl.service
sudo systemctl reload brightnessctl.service
n .config/nix/nix.conf
sudo mv /etc/nix/nix.conf /etc/nix/nix.conf.pacsave
systemctl status nix-daemon
nix doctor
nix-daemon
n nix-daemon.service
sudo ln keyd.service /etc/systemd/system/
sudo ln nix-daemon.service /etc/systemd/system/
cat /etc/systemd/system/display-manager.service 
systemctl start nix-daemon
sudo systemctl enable nix-daemon
sudo systemctl enable keyd
sudo systemctl start keyd
l /etc/systemd/system/
n ../.cache/hyprland/hyprlandCrashReport4241.txt
l /dev/dri/card1
$env.AQ_DRM_DEVICES = /dev/dri/card1
$env.AQ_DRM_DEVICES = "/dev/dri/card1"
n ../.cache/hyprland/hyprlandCrashReport4279.txt
loginctl 
$env.XDG_SESSION_TYPE = "wayland"
Hyprland
n ../.cache/hyprland/hyprlandCrashReport43015.txt
l /usr/share/wayland-protocols/
journalctl -xeu Hyprland
journalctl -xe | grep Hyprland
systemctl status display-manager
n display-manager.service
sudo rm /etc/systemd/system/display-manager.service 
sudo ln display-manager.service /etc/systemd/system/
sudo systemctl start display-manager
journalctl -xeu display-manager
ly
systemctl get-default
n keyd.service
n tlp.service
sudo ln tlp.service /etc/systemd/system/
sudo systemctl start tlp
echo $env.LANG
$env.LC_ALL = en_US.UTF-8
$env.LC_ALL = "en_US.UTF-8"
sudo pacman -Rsc bash
locale-gen
sudo locale-gen
tlp start
tlp init start
locale -a
nix-env -qa langpack
mv ../.config/hypr/hyprland.conf ../.config/hypr/hyprland.conf.bk
nix fmt home.nix 
home-manager news
echo $env.NIX_PATH
echo $env.NIX_PROFILES
nix profile remove mypkgs
nix profile list
nix fmt *.nix
nix fmt flake.nix 
n opts.nix
rm opts.nix
n flake.nix
nix run .#update
z /etc/systemd/system/
sudo rm keyd.service tlp.service display-manager.service nix-daemon.service
g cl https://aur.archlinux.org/yay
cd yay/
sudo pacman -S base-devel
sudo pacman -S git
rmf yay
g cl https://aur.archlinux.org/yay-bin
cd yay-bin/
n install.nu
mv install.nu init.nu
let temp = test.nu
let temp = nu test.nu
./test.nu
nu ./test.nu 
let temp = nu ./test.nu
$temp
let temp = (nu ./test.nu)
chmod +x test.nu 
n test.nu
let temp = (./test.nu)
let temp = ./test.nu
$temp | describe
./test.nu | describe 
rm test.nu
z yay
z tool/yay
z ../tool/yay-bin/
rmf yay-bin/
yay
rm /tmp/yay-bin/
rmf /tmp/yay-bin/
sudo pacman -Rsc git make fakeroot gcc binutils 
sudo pacman -Rsc git make fakeroot gcc
sudo pacman -Rsc yay-bin-debug 
pacman -Ss alpm
pacman -S pkgfile
sudo pacman -S pkgfile
sudo pacman -Rsc pkgfile 
go get github.com/jguer/go-alpm
go get github.com/Jguer/go-alpm
go install github.com/Jguer/go-alpm
go install github.com/Jguer/go-alpm@latest
pacman -Ss yay
pacman -Ss yogurt
pacman -Ss paru
pacman -Ss aura
pacman -Ss rua
sudo pacman -S pacman base-devel
sudo pacman -S libalpm
l /usr/include/alpm.h
$env.CFLAGS = "-I/usr/include"
$env.CGO_CFLAGS = "-I/usr/include"
$env.CGO_LDFLAGS = "-L/usr/lib -lalpm"
sudo pacman -Rsc nix
sudo rm -rf /nix/ ~/.nix*
makepkg -si
sudo pacman -S nu
/usr/bin/nu
l /usr/bin/nu
sudo rm /usr/bin/nu
sudo pacman -S nushell
nu scripts/install-yay.nu 
yay -S "television yazi"
yay -S atelevision yazi
yay -Rsc libastal-cava-git-debug sdl2_pango-debug tuxpaint-debug 
yay -S -
man yay
yay -h
yay -h | grep stdin
yay -h | grep input
yay -h | grep in
yay -h | grep yes
yay -h | grep ask
yay -h | grep confirm
str join -h
['hello' 'world'] | str join ' ' | cat
['ls' '-l'] | str join ' ' | xargs
['-a' '-l'] | str join ' ' | xargs ls
yay -Ss plemoljp
yay -h | grep batch
yay -h --batchinstall
yay -S --batchinstall cargo
n home.nix
systemctl status NetworkManager
str expand -h
str expand -h | less
str expand -h | cat
str expand -h | head -n 50
ls '-a scripts'
^ls '-a scripts'
['-a' 'scripts'] | str join ' ' | xargs ls
['gcc' 'clang'] | str join ' ' | xargs yay -S
['gcc' 'clang'] | str join ' ' | yay -S $in
['gcc' 'clang'] | str join ' ' | yay -S ($in | string expand)
['gcc' 'clang'] | str join ' ' | yay -S ($in | str expand)
yay -S ([gcc clang] | str join ' ')
yay -S [gcc clang]
yay -S ([gcc clang])
['gcc' 'clang'] | yay -S $in
to text -h
echo 'hello' | yes | head
yay -Ss cargo
['gcc' 'clang'].0
['gcc' 'clang'].$v
yay -S btop --noconfirm
yay -S cargo --noconfirm
yay -Rsc cargo --noconfirm
cargo
yay -Rsc rust
yay -S cargo --batchinstall
nu data/pkgs.nu 
sudo rm /usr/bin/zsh 
yay -S zsh
systemctl is-enabled brightnessctl
nu data/systemd.nu 
systemctl is-enabled ly
systemctl is-enabled keyd
rm keyd.service tlp.service display-manager.service nix-daemon.service
rm result
echo $env.SHELL
n reg.sh
cat reg.sh 
{shell:'true', uwu:true, features: {bugs:false, multiplatform:true, speed: 10}, fib: [1 1 2 3 5 8], on_save: {|x| $'Saving ($x)'}, first_commit: 2019-05-10, my_duration: (4min + 20sec)} | describe -d
{src dst; hello world}
{src: dst hello: world}
[src dst; hello world]
[src dst; 1 2]
[src dst; 1, 2]
[src dst 1, 2]
ls | describe
[{x:12, y:15}, {x:8, y:9}] | describe
[{x:12, y:15}, {x:8, y:9}]
[[src dst]; [hello world]]
for rec in (ls) { echo $rec }
for rec in (ls) { echo $rec.name }
for rec in (ls | get name) { echo $rec }
(ls).0
(ls).0.name
for rec in (ls | get name) { ^echo $rec }
for rec in (ls) { ^echo $rec }
for rec in (ls) { ^echo $rec.name $rec.type }
continue -h
path exists -h
n /etc/tlp.conf
l /etc/tlp.conf.pacsave
n /etc/tlp.conf.pacsave
n /etc/tlp.d/00-template.conf
tlp diskid
sudo tlp-stat
sudo cp /etc/tlp.conf .
sudo chown sundo:users defaults.conf tlp.conf 
n defaults.conf
rm defaults.conf
ln -S .backup tlp.conf hyprland.conf 
rm hyprland.conf
mv hyprland.conf.backup hyprland.conf
date
date now | str replace ' ' '-'
date now | str replace -a ' ' '-'
date now | to text | str replace -a ' ' '-'
date now | to text | str replace -a '[,+)(: ]' '-'
l /etc/tlp.d/
path join -h
mv keyd.conf defaults.conf
n keyd.conf
l /etc/keyd/
n /etc/keyd/
mv defaults.conf default.conf
l ~/.config/hypr/
difft hyprland.conf ~/.config/hypr/hyprland.conf.bk
rm ~/.config/hypr/hyprland.conf.bk
l ~/.config/lazygit/
rm ~/.config/lazygit/config.yml
sudo rm /etc/keyd/default.conf 
rm ../.gitconfig
ln foot.ini ~/.config/foot/
ls ~/.config/foot/
ln -s foot.ini ~/.config/foot/
ls -l ~/.config/foot/
rm ~/.config/foot/foot.ini
path -h
path expand -h
"~/.config" | path expand
[[src dst]; [hello world]] | path expand
sudo rm ~/.config/foot/foot.ini ~/.config/lazygit/config.yml ~/.config/hypr/hyprland.conf ~/.gitconfig /etc/tlp.d/tlp.conf /etc/keyd/default.conf 
sudo chown sundo:users default.conf 
ln -s foot.ini temp
rm temp
l ~/.config/foot/
rm ~/.config/foot/foot.ini ~/.config/lazygit/config.yml ~/.config/hypr/hyprland.conf /etc/tlp.d/tlp.conf /etc/keyd/default.conf
sudo rm ~/.config/foot/foot.ini ~/.config/lazygit/config.yml ~/.config/hypr/hyprland.conf /etc/tlp.d/tlp.conf /etc/keyd/default.conf
n ~/.config/foot/foot.ini
rm pacmanlist.txt
rm reg.sh
n out
rm out
nu scripts/install-conf.nu 
n .gdbinit
rm *.nix
n install.sh
rm install.sh
l data/ scripts/
n .bashrc
chmod +x **/*.nu
rg '^#!' **/*.nu
n scripts/install-yay.nu
hyprctl systeminfo
hyprctl monitor
hyprctl monitors
yay -Ss xf86-video-amdgpu
echo $env.XDG_SESSION_TYPE
yay -S xf86-video-amdgpu
brightnessctl
brightnessctl set 5
brightnessctl set 3
yay -Rsc xf86-video-amdgpu 
yay -Ss gtk
fastfetch 
systemctl status brightnessctl
yay -Ss qt
col 
lspci -k | grep -EA3 'VGA|3D'
yay -Ss vulkan
yay -Ss libmesa
yay -Ss libva
yay -Ss mesa
z ../.cache/hyprland/
journalctl -xe
top
yay -Ss xorg
ps | wayland
ps | find wayland
yay -Ss wayland
ps | find xserver
uname -r
pacman -Q | cut -d' ' -f1 | save -f pkgs2.txt
difft pkgs.txt pkgs2.txt
./data/pkgs.nu
yay -Ss alsa
yay -Ss gpu-screen
yay -Ss qt6-
yay -Ss svt-
yay -Ss ragel
yay -Ss blas
echo $env.XDG_BACKEND
echo $env.XDG_CURRENT_DESKTOP
echo $env.WAYLAND_DISPLAY
amdgpu_top
cat /sys/class/drm/card1/device/power_dpm_state 
cat /sys/class/drm/card1/device/power_dpm_force_performance_level 
echo high | sudo tee /sys/class/drm/card1/device/power_dpm_force_performance_level
n tlp.conf
z /usr/share/backgrounds/
sudo mogrify -format png gruvbox.jpg 
z /usr/share/hypr/
sudo ln -S .backup /usr/share/backgrounds/gruvbox.png wall0.png
cpi -b
z ../project/c/
mkcd superuniq
yay -S man man-db
man getline
batman readline
batman 3 printf
yay -Ss man
yay -S man-pages
bear make
clang -std=c23 src/main.c
batman getline
yay -Ss glib
yay -Ss getline
cp ../rpx/include/testing.h include/
cp ../rpx/src/testing.c src/
cp ../rpx/include/{ansiesc,gene}.h include/
cp ("../rpx/include/{ansiesc,gene}.h" | str expand) include/
mek
batman strcmp
yay -S lldb
lldb .build/f5302386464f953ed581edac03556e55/target/superuniq
lldb .build/1156b78ee854c0a947b5db66d8c3ac7f/target/superuniq
make run T=test RUNNER=
fcitx5 
fcitx5 -h
sudo systemctl start fcitx5 
sudo systemctl start fcitx5-remote 
fcitx5-remote 
fcitx5-remote -h
fcitx5 -d
fcitx5-remote -t
fcitx5-configtool 
z ~/.config/hypr/
z neovi
l | fing build
l | find build
ninja build
l /usr/local/bin/foot
cd src/arch/
z x86_64/
z ~/proc/zig/src/arch/x86_64/
n bits.zig
zoxide query super
../../c/superuniq/
z add .
z radare
z ~/rc/
mkcd ../.config/radare2
l ~/.config/radare2/
r2 -d /bin/ls -e bin.cache=true
r2 -d /bin/ls -e bin.relocs.apply=true
r2 -d /bin/ls -e bin.relocs.apply=true -e bin.cache=true
r2 -e bin.cache=true -d /bin/ls
n radare2rc
r2 -H
r2
r2 -d ~/bin/superuniq
r2 -d /bin/ls
mv radare2rc .radare2rc
rasm2 -a x86 -b 32 'mov eax, 33'
rasm2 -a mips -b 32 'mov eax, 33'
rasm2 -a x86_64 -b 32 'mov eax, 33'
rasm2 -L
rasm2 -a x86 -b 32 'syscall'
rasm2 -a x86 -b 32 'int64'
rasm2 -a x86 -b 32 'int32'
rasm2 -a x86 -b 32 'push'
rasm2 -a x86 -b 32 'call'
ollama list 
ollama ls 
n .radare2rc
z super
default -h
null | default ""
z project/rust/unit/src/
n main.rs
../../map_and_then/
n src/main.rs
date now | to text | str replace -a -r '[,+)(: ]' '-'
zig env
zig targets | grep stm
zig targets | grep nucleo
zig zen
zig
zig fetch -h
z ../../shell/nu_scripts/
n toolkit.nu
z example-config/
char -h
char --list
char fs
char rain
char rs
char us
char thunder
cd assets/
../custom-menus/
n zoxide-menu.nu
[4 5 6 4 ] | uniq
uniq -h
[4 5 6 4 ] | uniq -c
[4 5 6 4 ] | uniq -d
[4 5 6 4 ] | uniq -u
open current_session_history_menu.nu
split -h
open current_session_history_menu.nu | split row '\n'
split row -h
cat current_session_history_menu.nu | split row '\n'
to -h
from url -h
into -h
ls | get name
ls | get name | into string
ls | get name | into string | describe 
open -h
upsert -h
update cells -h
open history.txt | from csv
open history.txt | from ssv
from -h
open history.txt | lines
open history.txt | lines | reverse | uniq | reverse
open history.txt | lines | reverse | uniq | reverse | to text
open history.txt | lines | reverse | uniq | reverse | to text | wc
open history.txt | lines | reverse | uniq | reverse | to text | save -f history.txt
bat history.txt 
echo $nu.history-path
str -h
str replace -h
| find env
cp history.txt history.txt.bk
source alias.nu
n history.txt
difft history.txt history.txt.bk
rm history.txt.bk
ps | find 39
n shutdown-when-done.nu
mv shutdown-when-done.nu on-done.nu
l ~/.gitconfig
cat ~/.gitconfig 
ssh-agent -c
$env.SSH_AUTH_SOCK = /tmp/ssh-XXXXXXzsjEcF/agent.4795
$env.SSH_AUTH_SOCK = '/tmp/ssh-XXXXXXzsjEcF/agent.4795'
$env.SSH_AGENT_PID = '4797'
g config user.name
g config --global user.name "koyamahayato2357"
g config --global user.email "sundongxiaoshan202@gmail.com"
ssh-agent -s
$env.SSH_AUTH_SOCK = "/tmp/ssh-XXXXXXIm8NlI/agent.5406"
$env.SSH_AGENT_PID = "5408"
ssh-add ~/.ssh/id_rsa
hub status
hub push
hub
yay -S github-cli
man nvim
n .zshrc
mkcd no18
mv `~/Downloads/main 4.c` ./main.c
n ../no16/main.tex
yay -Rsc kitty
g cl https://github.com/kovidgoyal/kitty.git --depth 1
cd kitty/
./dev.sh build
./dev.sh build -h
./dev.sh -h
z ../../tool/kitty/
echo $env.TERM
sudo ln kitty/launcher/kitty /usr/local/bin/
./kitty/launcher/kitty
sudo ln /usr/local/bin/kitty /bin/
which kitty
sudo rm /usr/local/bin/kitty /bin/kitty
yay -S kitty
kitty +kitten icat /usr/share/backgrounds/gruvbox.png
cargo search tdf
cargo install tdf
yay -S fancy-cat
g cl https://github.com/freref/fancy-cat.git --depth 1
cd fancy-cat/
yay -Ss mupdf
yay -S mupdf
yay -Ss mujs
yay -S mujs
./zig-out/bin/fancy-cat ~/project/pro/alg/no16/演習16_IS16_小山隼冬.pdf
yazi
w3m -sixel google.com
w3m -h
w3m -h | grep kitty
w3m -o imgdisplay='/usr/bin/kitten icat' google.com
cargo install mkcat
cargo install mdcat
mdcat README.md
ttyper
kitten mouse-demo
kitten hints
kitten ask
kitten notify
kitten notify -h
kitten notify hello
kitten themes
kitten query-terminal
kitten show-key
kitten hints -h
kitten -h
kitten transfer -h
g log
echo 'google.com'
mv ~/.config/kitty/kitty.conf .
l ~
ls ~/.config/kitty
lines -h
join -h
str distance -h
save -h
do -h
on-done --pid 1317 { shutdown now }
on-done --pid 22975 { shutdown now }
ps | find vivaldi
on-done --pid 23482 { shutdown now }
z plugins/blink.cmp/lua/
n blink-cmp.lua
z blink/
n health.lua
n types.lua
n snippets.lua
n lib/buffer_events.lua
n fuzzy/fuzzy.rs
z z blink
n lua/blink/cmp/fuzzy/lib.rs
n kitty.conf.bak
g s -c nvim-cmp
z plugins/nvim-cmp/lua/
z cmp/
n config/mapping.lua
z plugins/cmp-nvim-lsp/
n lua/cmp_nvim_lsp/init.lua
z plugins/nvim-cmp/doc/
n cmp.txt
z nvim-cmp
z plugins/nvim-cmp/
zoxide query cmp
n doc/cmp.txt
n lua/cmp/init.lua
n lua/cmp/config/default.lua
l lua/cmp/types/cmp.lua
n lua/cmp/types/cmp.lua
rg autocomplete
n lua/cmp/core.lua
g s nvim-cmp
g b -d nvim-cmp
kill 2629
kill 2627
kill 3449
z runtime/lua/
cd vim/
rg on_key
z runtime/lua
z vim/
n _editor.lua
z plugins/nvim-surround/
z lua/nvim-surround/
rg '<Plug>'
rg nvim-surround-insert
n input.lua
rg get_char
rg insert-surround
rg insert_surround
n config.lua
z neo
l func/
rg mapset
cd _meta/
n vimfn.lua
n snippet.lua
n submode.lua
mv submode.lua lua/
n lua/rainbow.lua
:pwd
kill 4645
kill 5760
kill 5927
kill 6189
kill 6486
kill 6740
kill 6998
kill 7246
kill 7451
kill 7543
kill 7742
kill 8105
kill 8644
kill 8737
kill 8936
z b acc
g b -c acc
z lib/std
n time.zig
n math/isinf.zig
n math.zig
n math/float.zig
n simd.zig
z s main
gdb -i=dap -h
gdb -i=dap /bin/ls
lldb -h | grep DAP
lldb -h | grep DAP -i
lldb -h
lldb -R
wc history.txt 
normalize-history 
wc history.txt
n lua/
yay -sS
def
def -h
query db -h
any -h
yay -Ss hyprland-qtutils
yay -Ss qtutils
l /usr/share/backgrounds/
sudo cp /usr/share/backgrounds/gruvbox.png /usr/share/hypr/wall0.png 
z runtime/lua/vim/
n keymap.lua
n _meta/api.lua
n lsp/util.lua
rg nvim_buf_set_keymap
n src/nvim/api/buffer.c
n shlr/qjs/src/quickjs.c
n terminfo/kitty.terminfo
n test.py
n __main__.py
n dev.sh
rg install
rg install **/*.md
z ~/linux/
./configure help
./configure --help
./configure --64 --disable-x11 CC=clang-20
rg main
rg ' main('
rg ' main\('
rg ' main\(' **/*.c
z bin
file zuo
zuo --help
./zuo --help
n configure
l /usr/
ls /usr/
ls /usr/bin/
scheme -h
yay -Ss hyprland-qt
yay -S hyprland-qtutils
mkcd scheme
cd scheme/
scheme quadic-equation.scm
n quadic-equation.scm
n length.scm
scheme length.scm
mv length.scm listp.scm
scheme listp.scm
yay -Ss akku
yay -S akku
scheme fractal.scm
n lazy.scm
scheme lazy.scm
scheme korattu.scm
echo "(+ 1 1)" | scheme
scheme --help
n lua/scheme_de.lua
mkdir lua/ftplugin
mv lua/scheme_de.lua lua/ftplugin/
z .../project/scheme/
zoxide add .
n /tmp/nvim-scheme-ftplugin.scm
n fractal.scm
n listp.scm
python --version
yay -S python36
scheme qsort.scm
n qsort.scm
z plugins/nvim-treesitter/
z queries/markdown_inline/
../markdown/
z vimdoc/
n injections.scm
sudo cp -r plugins/nvim-treesitter/parser/* /usr/local/lib/nvim/parser/
sudo cp -r plugins/nvim-treesitter/queries/* /usr/local/share/nvim/runtime/queries/
n queries/c/highlights.scm
n queries/zig/highlights.scm
ls queries/**/highlights.scm | sort-by size
busybox vi
busibox -l
busybox --help
busybox --list
n rc/data/pkgs.nu
yay -S yt-x
g cl https://github.com/Benexl/yt-x.git --depth 1
z yt-x/
./yt-x
yay -Rsc jack2
yay -Rsc yt-dlp
yay -S npm
npm install repomix
mv cmdwin.lua archive/
make OP=3
sudo make install OP=3
l .build/05705ea89eb08efe2a2d87983b9d3a6e/target/rpx
zig build run -DT=test --release=fast
rg bench
rpx -h -q
./configure --disable-acl --disable-arabic --disable-gui --disable-gtk2-check --disable-gtk3-check --disable-gpm --disable-farsi --disable-autoservername --disable-canberra --disable-channel --disable-cscope --disable-darwin --disable-desktop-database-update --disable-fail-if-missing --disable-fontset --disable-gnome-check --disable-gtktest --disable-libsodium --disable-luainterp --disable-motif-check --disable-mzschemeinterp --disable-netbeans --disable-nls --disable-option-checking --disable-perlinterp --disable-python3interp --disable-pythoninterp --disable-rightleft --disable-rubyinterp --disable-selinux --disable-smack --disable-sysmouse --disable-tclinterp --disable-xattr --disable-xim --disable-xsmp --disable-xsmp-interact --disable-icon-cache-update --with-features=tiny
n src/link.sh
rustup
make run RUNNER=r2
rg 9
rg 8
make run ASAN=address
rg termbox
echo -n -e "\e]52;;Zm9v\e\\"
^echo -n -e "\e]52;;Zm9v\e\\"
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- src/main.zig
kill 6903
n lua/doublescreen.lua
rm lua/doublescreen.lua
n lua/help.lua
rm lua/help.lua
yay -S pueue
pueue help 
pueue help
pueue add ls
pueue log
sudo systemctl enable pueue
sudo systemctl enable pueued
n ~/Downloads/systemd.pueued.service
mv ~/Downloads/systemd.pueued.service pueue.service
l ~/.config/systemd/user/
systemctl status ibus
rm ~/.config/systemd/user/*
./data/systemd.nu
pueue help shutdown
pueue add -- sleep 1000
pueue restart 0
pueue kill 1
pueue pause
pueue pause 0
pueue start 0
pueue kill 0
sudo systemctl start pueue
ps | find pueue
pueue add sleep 1000
pueue parallel 1
pueue remove 0
pueue pause 1
pueue status
pueue start 1
pueue clean
pueue shutdown
pueued
pueued -vv
n /etc/systemd/system/pueue.service
sudo systemctl disable pueue
sudo systemctl enable --user pueue
l /etc/systemd/user/pueue.service
sudo systemctl --user enable pueue
nvimsudo /etc/systemd/system/pueue.service
nvimsudo /etc/systemd/user/pueue.service
sudo systemctl enable --machine=sundo@.host --user pueue
sudo systemctl start --machine=sundo@.host --user pueue
pueue
yay -S criu
criu dump -t 3348 -D ~/bk --shel-job
criu dump -t 3348 -D ~/bk --shell-job
mkdir ~/bk
sudo criu dump -t 3348 -D ~/bk --shell-job
../bk
sudo criu dump -t 3348 -o dump.log --shell-job
n files.img
r2 files.img
sleep -h 
ps | get name | find sleep
sleep 1000sec
ps | get pid name | find sleep
ps | find sleep
^sleep 1000
sudo criu dump -t 4188 -o dump.log --shell-job
sudo criu restore --shell-job
rm *
z bk
sudo criu dump -t 4696 -o dump.log --shell-job
xxd files.img
n dump.log
xxd dump.log
sudo xxd dump.log
sudo criu dump -t 4696 --shell-job
yay -Rsc criu
^ps -p 4696 -o pid,comm
n CMakeCache.txt
rg CC
rg CC *.txt
rg '\<CC\>' *.txt
rg '\<CC\>' **/*.txt
rg '\<CC\>' makefile
rg '\<CC\>' **/makefile
rg '\<CC\>' **/Makefile
cmake -G "Ninja" ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_USE_LINKER=lld -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_LTO=full -DLLVM_ENABLE_LLVM_LIBC=ON -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF
cmake --help
cd src/
cd stdio
n fgets.h
cmake -G "Ninja" ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra;lldb;compiler-rt;openmp" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_ENABLE_LLD=ON -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_LTO=full -DLLVM_ENABLE_LLVM_LIBC=ON -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_Z3_SOLVER=ON -DLLVM_ENABLE_ZLIB=OFF
make log OL=3
strip .build/459fb5b8b9226fe49fd24fe82ce4cc62/target/rpx
l .build/459fb5b8b9226fe49fd24fe82ce4cc62/target/rpx
yay -S z3
n ~/rc/data/pkgs.nu
cmake -G "Ninja" ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra;lldb;compiler-rt;openmp" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_ENABLE_LLD=ON -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_LTO=full -DLLVM_ENABLE_LLVM_LIBC=ON -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_Z3_SOLVER=ON -DLLVM_ENABLE_ZLIB=OFF -DLLVM_INSTALL_UTILS=ON -DLLVM_RAM_PER_LINK_JOB=10000 -DLLVM_USE_SPLIT_DWARF=ON
clang++ --version
$env.CC = "clang"
$env.CXX = "clang++"
cmake -G "Ninja" ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra;lldb;compiler-rt;openmp" -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_ENABLE_LLD=ON -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_LTO=Full -DLLVM_ENABLE_LLVM_LIBC=ON -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_Z3_SOLVER=ON -DLLVM_ENABLE_ZLIB=OFF -DLLVM_INSTALL_UTILS=ON -DLLVM_RAM_PER_LINK_JOB=10000 -DLLVM_USE_SPLIT_DWARF=ON
kill 1104
kill 16644
cd build/
ps | hypr
ps | find hypr
rg cursor
z src/nvim/api/
rg nvim_win_set_cursor
n window.c
n lua/wrapwin.lua
clang -M src/main.c -Iinclude -std=c23
clang -MMD -MP src/main.c -Iinclude -std=c23
clang -MM -MP src/main.c -Iinclude -std=c23
make run RUNNER=valgrind
make -p
n main.d
rm main.d
make -n
make .build/
make .build/05705ea89eb08efe2a2d87983b9d3a6e/
make .build/05705ea89eb08efe2a2d87983b9d3a6e/target/
make .build/05705ea89eb08efe2a2d87983b9d3a6e/dep/
make lint -d
make --help
make --debug lint
make -n lint
make -dn lint
make -dn lint | head 1000
make -dn lint | head -n 1000
l .build/05705ea89eb08efe2a2d87983b9d3a6e/dep/
make -d lint | head -n 1000
n .build/05705ea89eb08efe2a2d87983b9d3a6e/dep/.d
glob src/**/*.c
ls src/**/*.c
^ls src/**/*.c
^ls -1 src/**/*.c
make -p | grep RM
make -p | grep PWD
make -p | grep CC
on-done -h
brightnessctl set 4
l bin/
sudo cp bin/* /usr/local/bin/
ls /usr/local/lib/
sudo cp -r lib/* /usr/local/lib/
ls tools/
ls tools/llc/
l include/
sudo cp -r include/* /usr/local/include/
clang-refactor --help
clang-refactor extract --help
clang-move --help
clang-diff --help
clang-installapi --help
clang-installapi -h
clang-installapi --help out.txt
clang-installapi --help -o out.txt
clang-fuzzer-dictionary --help
clang-check --help
clang-scan-deps --help
clang-scan-deps src/main.c
clang-scan-deps src/main.c --compilation-database
yay -Rsc hyprutils
yay -Rsc hyprutils-git-debug 
yay -S hyprutils
yay -Rsc hyprutils-git
yay -Su
sudo rm /usr/include/wayland-protocols/ext-data-control-v1-enum.h /usr/share/wayland-protocols/staging/ext-data-control/ext-data-control-v1.xml
yay -Ss clang-tools
yay -Ss openjdk
make -p | grep MKDIR
make run T=bench
make run T=bench OL=0
make run T=bench OL=1
make run T=bench OL=2
zig build run -DT=bench
zig build run -DT=bench --release
zig build run -DT=bench --release=small
l zig-out/bin/rpx
zig build --release=small
l zig-out/bin/
zig build run T=bench --release=safe
zig build run -DT=bench --release=safe
n ~/rc/kitty.conf
g b -c enhance-lambda
g b -c --help
g s -c enhance-lambda
factor 179424691
n lua/goto_textobj.lua
mv lua/goto_textobj.lua lua/goto_txtobj.lua
n lua/goto_txtobj.lua
n lua/ftplugin/
n lua/ftplugin/scheme_de.lua
n bf/build.zig
n andor.scm
n /tmp/nvim-ftplugin.scheme
l /tmp/
z scheme
n /tmp/nvim-ftplugin.scm
clang-repl --help
n korattu.scm
n /tmp/nvim-ftplugin.c
clang-repl /tmp/nvim-ftplugin.c
clang-repl --help | file
clang-repl --help | grep file
clang-repl --summary-file=/tmp/nvim-ftplugin.c
clang-repl --summary-file=temp.c
z foot/
n lua/ftplugin/cmake.lua
n lua/ftplugin/fish.lua
n lua/ftplugin/go.lua
n lua/ftplugin/lua.lua
n lua/ftplugin/nu.lua
n lua/ftplugin/rust.lua
n lua/ftplugin/yaml.lua
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- src/main.c
$env.NVIM_PROF = 1
rg telescope
env -h
hide-env $env.NVIM_PROF
sudo rm -rf /usr/local/share/nvim/runtime/pack/
sudo rm -rf /usr/local/share/nvim/runtime/plugin/
n lua/opt.lua
rg rshada
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- init.lua
vim-startuptime -vimpath /usr/local/bin/nvim -count 10000 -- init.lua
n normalize-runtime.nu
mv normalize-runtime.nu normalize-runtime.sh
rm lua/fs.lua
date now
vim-startuptime -vimpath /usr/local/bin/nvim -count 10000 -- ~/project/c/rpx/src/main.c
n ~/project/c/rpx/src/main.c
zig build --release=safe
yay -Qi ocp
ocp
which -a python
yay -Ss clang
n net/core/filter.c
yay -Ss ghostty
yay -S ghostty
ghc
yay -Rsc haskell
yay -Rsc pandoc-cli
yay -Rsc libadwaita
g cl https://github.com/koyamahayato2357/zigowatt.git
z zigowatt/
n src/root.zig
yay -Ss libvaxis
yay -Ss vaxis
mv src/ZigoW.zig src/zigowatt.zig
zig test
n src/types.zig
zig build run --reelase-fast
zig build run --reelase=fast
zig build run --release=fast
n src/zigowatt.zig
g cl https://github.com/koyamahayato2357/zxc.git
z zxc/
clang-repl
$env.PATH
echo -e "\x1b[21mhello world"
^echo -e "\x1b[21mhello world"
^echo -e "\e[21mhello world"
zig test src/getch.zig
zig test src/getch.zig --library c
zig build run --library c
zig build run -lc
zig build -lc
zig libc
rg termios
rg termcap
n src/getchar.c
rg check_termcode
n src/term.c
n src/keymap.h
rg TERMCAP2KEY
n src/keycodes.zig
n src/main.zig | head -n 50
zig run src/main.zig --library c | save -f ;pg
ps | find save
ps | find nu
kill 1234
mkcd temp
cd temp/
zig run src/main.zig --library 
rmf temp/
ps | find zig
ps | find zxc
kill 36779
ps 1936
kill 1936
kill 5046
man ascii
clear
g cl https://github.com/koyamahayato2357/vim-clone.git
g cl git@github.com:koyamahayato2357/vim-clone.git
cd vim-clone/
cp ../rpx/makefile .
cp ../rpx/src/testing.c ../rpx/include/testing.h .
mv testing.c src/
mv testing.h include
cp ../rpx/src/ansiesc.c ../rpx/src/gene.c src/
cp ../rpx/include/ansiesc.h ../rpx/include/gene.h include/
cp ../rpx/src/chore.c src/
cp ../rpx/include/chore.h include/
rg expr
rg errcode
z libc
rg cfmakeraw
z vim-clone
z .../c/vim-clone/
make T=test OL=3
n src/getinput.c
n include/ansiesc.h
n bootstrap.c
zig build --release=fast
yay -Ss dictionary
rg rtinfo
make run-gdb
g cl https://github.com/ghostty-org/ghostty.git --depth 1
zig build -Doptimize=ReleaseFast
rmf .zig-cache/ zig-out/
yay -S gtk4 libadwaita
mkcd ghostty
config env
ghostty +list-fonts
~/.local/bin/ghostty
n .config/kitty/kitty.conf
onefetch 
n flang/module/__cuda_builtins.f90
ls **/*.ll | sort-by size
n llvm/test/CodeGen/X86/2003-08-03-CallArgLiveRanges.ll
n llvm/test/CodeGen/X86/pre-coalesce.ll
n libgrust/libproc_macro/lib.rs
make run-
rg until
man strchr
g s -c bit
ln lua/ftplugin/c.lua lua/ftplugin/cpp.lua
ps | find cmake
ls /usr/local/bin/clang-20
ls /usr/local/bin/clang*
n include/bit.h
./syncplug.nu
g s enhance-lambda
n example/graph.rpx
n example/matrix.rpx
g s acc
g b -D acc
l lua/
cat README.md | wl-copy
m normalize-runtime.sh
g s -c make
make plug-install -n
rmf plugins/
kill 12998
g cl https://github.com/MuniTanjim/nui.nvim
kill 13753
z plugin/saghen/blink.cmp/
ps | find nvim
kill 15404
z plugin/blink.cmp/
n --clean
l plugin/blink.cmp/
vim init.lua
ls /usr/local/bin/nvim
ls plugin/blink.cmp/
ls plugin/blink.cmp/lua/
vim ~/.vimrc
vim makefile
rmf plugin/
n plugins/snacks.nvim/lua/snacks/dashboard.lua
z plugins/snacks.nvim/
n lua/snacks/dashboard.lua
rm .tests/
rmf .tests/
n syncplug.nu
rmf syncplug.nu
g merge make
^find plugins/ -mindepth 1 -maxdepth 1 -type d -exec basename {}
^find plugins/ -mindepth 1 -maxdepth 1 -type d | basename
^find plugins/ -mindepth 1 -maxdepth 1 -type d | xargs basename
mkdir plugins/temp
make plug-gc -n
make plug-gc -np
make plug-gc -np | grep GARBAGE
make plug-gc -np | grep PLUGIN_INSTALLED
z plugins/blink.cmp/
find plugins/ -mindepth 1 -maxdepth 1 -type d
^ls plugins/
^ls plugins/**
^find plugins/ -mindepth 2 -maxdepth 2 -type d
^find plugins/ -mindepth 1 -maxdepth 1 -type d
rmdir temp temp/temp
rm -r temp temp/temp
rm -r temp/temp temp
ls temp/
rmdir temp/temp temp
^rm -r temp/temp temp
mkdir temp temp/temp
^rm -r temp temp/temp
make -n plug-install
make -n plug-gc
make plug-sync.a -n
make plug-sync.MunifTanjim/nui.nvim -n
make plug-sync.a/b -n
make plug-sync -n
z plugins/saghen/blink.cmp/
make plug-sync -p | grep "plug-sync"
make plug-clean
make plug-clean -n
make echo
n plugins/folke/snacks.nvim/lua/snacks/dashboard.lua
g b -D make
mkdir make
n setup.sh
rm setup.sh
ls **/*.lua
ls -h
ls lua/**/*.lua
n normalize-runtime.sh
rm normalize-runtime.sh
mv archive/syncplug.sh ..
rm ../syncplug.sh
cat ~/.local/share/nvim/cdtrack/dir.log
pr -h
pr --help
pr LICENSE 
n LICENSE
pr README.md
patch --help
n temp1
diff -u temp temp1
diff -u temp temp1 | save temp.pat
n temp.pat
patch temp temp.pat
n temp
rm temp*
n .build/3096754f8f27059f56311470d9c0e6b9/dep/ansiesc.d
l plugins/nvim-treesitter/nvim-treesitter/
make normalize-runtime
x hypr
../hypr/
sudo ln ~/.local/bin/ghostty /bin
which foot
which -a foot
which -a kitty
reboot
which -a ghostty
kitty -h
ghostty
kitty shoose-fonts
kitty choose-fonts
kitten choose-fonts
z kitty
n kitty.conf
n rc/kitty.conf
z ghostty/
n .zsh_history
n shutdown.sh
n typos.toml
n example/app.ts
n src/config/vim.zig
lsix /usr/share/backgrounds/gruvbox.jpg
kitten icat /usr/share/backgrounds/gruvbox.jpg
kitten icat /usr/share/backgrounds/gruvbox.png
kitten icat /usr/share/backgrounds/backgnd.gif
kitten icat /usr/share/backgrounds/Dark-Wallpaper-HD-Download.jpg
^ls -R / | save allfile.txt
cat allfile.txt
z sper
z .../project/zig/superuniq/
../zxc
echo -e "\e[1q"
^echo -e "\e[1 q"
^echo -e "\e[1q"
n .gitignoree
zig test src/term.zig
kill 2289
kill 2995
z 
kill 3375
n keycodes.c
n keycodes.h
rg KeyCode
zig test src/keyboard.zig
n src/keyboard.zig
zig run src/main.zig
g merge enhance-lambda
g b -d enhance-lambda
g b -D enhance-lambda
mkcd ../sandbox
clang -s -O3 -o- strchrnul.c
clang -s -O3 -o- -c strchrnul.c
clang -S -O3 -o- strchrnul.c
clang -S -Mintel -O3 -o- strchrnul.c
z project/c/sandbox/
n ../rpx/makefile
clang -S -masm=intel -O3 -o- strchrnul.c
clang -S -masm=intel -march-native -O3 -o- strchrnul.c
clang -S -masm=intel -march=native -O3 -o- strchrnul.c
n asm.nu
rm asm.nu
n strchrnul.c
asm-test strchrnul.c
g s bit
n src/bit.c
n .config/ghostty/config
rpx example/fact.rpx
make run RUNNER=
z sandbox
n fn.c
asm-test fn.c
clang-20 -S -masm=intel -march=native -O3 -o- strchrnul.c
clang-20 -S -masm=intel -march=native -O3 -o- fn.c
cd radare2/
fancy-cat build.zig
fancy-cat /usr/share/backgrounds/backgnd.gif
z ~/proc/
g fetch --depth 1
git gc --prune=all --aggressive
which starship
g cl https://github.com/starship/starship.git --depth 1
z starship/
yay -Rsc starship
starship init nu | save -f starship.nu
rg snippet.expand
n lua/blink/cmp/config/snippets.lua
z lua/blink/
cd cmp/
n sources/snippets/
n sources/snippets/init.lua
n lua/snippet.lua
n lua/ftplugin/zig.lua
n lua/ftplugin/tex.lua
n temp.tex
rm temp.tex
l lua/ftplugin/
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000
vim-startuptime -vimpath /usr/local/bin/nvim -count 1000 -- ~/project/c/rpx/src/main.c
hide-env NVIM_PROF
$env.NVIM_PROF = 0
z r
diff ../.vimrc .vimrc
rm ../.vimrc
./scripts/install-conf.nu
vim alacritty.toml
vim .vimrc
yay -S eacs
yay -s
yay -S emacs
emacs
emacs -nw
z ~/.config/ghostty
mv config ~/rc/
mv config ~/.config/ghostty/
g cl https://github.com/helix-editor/helix.git --depth 1
n Cargo.toml
hx helix-core/src/indent.rs 
helix --health
helix helix-core/src/auto_pairs.rs 
helix src/main.c 
z .co
z helix/
helix config.toml
rg top_line_index
npx repomix --init
zig test src/ansi_esc.zig
l zig-out/bin/zxc
zig build test src/editor.zig
cp src/editor.zig _editor.zig
n _editor.zig
zig test _editor.zig
mv _editor.zig src/
zig test src/_editor.zig
n src/_editor.zig
l .zig-cache/
z .zig-cache/o
./8108ddc2d437fa3cb86675863ea5091d/test
lldb 8108ddc2d437fa3cb86675863ea5091d/test
rm src/_editor.zig
l ~/.local/bin/
l ~/.local/share/ghostty/
l ~/.local/share/ghostty/themes/
ln ~/.local/share/ghostty/themes/ .
ln -s ~/.local/share/ghostty/themes/ .
cd themes/
ls themes/
kill 5777
kill 6384
b src/editor.zig
../ly
n phone-number.txt
z .zig-cache/o/
../z/
../tmp/
../h/
../o
z 8108ddc2d437fa3cb86675863ea5091d/
lldb test
z lua/
n ftplugin/c.lua
n ftplugin/makefile.lua
N 
brightnessctl set 6
brightnessctl set 10
ping -f -l 3 8.8.8.8
cargo install heretek
heretek .build/46147b09b67add4301172b13bc7d4e5c/target/rpx
heretek
lldb .zig-cache/o/8108ddc2d437fa3cb86675863ea5091d/test
mkcd project/bh
mkcd tar-test
n hello.txt
tar --old-archive -cvf hello.tar hello.txt
yay -S hevi
hevi hello.tar
r2 hello.tar
hexdump hello.tar 
tar -cvf hello-new.tar hello.txt
hevi hello-new.tar
mkcd ../disasm
objdump --disassemble=add -Mintel --no-addresses main.c
clang -O3 main.c
clang -O3 main.c -c
objdump --disassemble=add -Mintel --no-addresses main
clang main.c -c
objdump --disassemble=add -Mintel --no-addresses main.o
zig run src/getch.zig
rg alt-n -i
rg "<A-n>" -i
yay -Rsc xremap-kde
yay -Rsc xremap-kde-debug
l .zig-cache/o/
z zig-out/
z ..
l zig-out/
zig build run src/main.zig --library c
zig build run src/main.zig
zig build run
zig run src/main.zig --library c | save -f log
n log
rm log
exit
script
n typescript
scriptreplay typescript
rm typescript
zig run src/keycode.zig
zig run src/keycode.zig --library c
zig run src/getch.zig --library c
rg std.debug.print
rm idea.txt
../vim
which -a vim
l /usr/local/bin/vim
l /usr/local/bin/nvim
z blink
l .build/18ee5f4c7c69191ae4686f68e425ed56/target/rpx
lldb .build/2a4e7003efcc409575df0a16ac73a6c0/target/rpx
lldb .build/e183d1c3f0cfe8027796d83d2221499c/target/rpx
make run-lldb OL=3
z helix-core/src/
n comment.rs
n auto_pairs.rs
n movement.rs
source ~/.config/nushell/alias.nu
on-done -n cmake { shutdown now }
sudo cmake --build . --target install
l /usr/local/bin/clang-20
zig build run -DT=bench --release=fast
g cl https://github.com/neovim/neovim --depth 1
sudo rm -rf ~/editor/neovim/
rmf neovim/
z plugins/neovim/neovim/
echo $env.CC
z plugins/folke/snacks.nvim/
g config pull.rebase false
n make/setup-blink.mk
make -f make/setup-blink.mk 
make CMAKE_BUILD_TYPE=Release -j16
sudo rmf build/
rg /usr/local
sudo rm -rf /usr/local/bin/nvim /usr/local/share/nvim/ /usr/local/lib/nvim/
rmf plugins/neovim/neovim/
make plug-sync -p
make plug-sync -d
make plug-sync
l plugins/
l plugins/neovim/neo
l ~/.local/share/nvim/runtime/queries/
cp ~/project/zig/zxc/build.zig .
make plug-update -d
l ~/.local/bin/nvim
make CMAKE_C_COMPILER="ccache clang-20" CMAKE_BUILD_TYPE=Release
cmake -DCMAKE_C_COMPILER="ccache clang-20" -DCMAKE_BUILD_TYPE=Release .
rmf .deps build/
cmake -DCMAKE_C_COMPILER=clang-20 -DCMAKE_BUILD_TYPE=Release .
cmake -DCMAKE_C_COMPILER=clang-20 -DCMAKE_BUILD_TYPE=Release ..
rmdir build/
which clang-20
make CMAKE_BUILD_TYPE=Release
rmf build .deps/
yay -Rsc ninja
rmf .deps/
rm -rf CMakeFiles/ CMakeCache.txt
make CMAKE_C_COMPILER=clang-20 CMAKE_BUILD_TYPE=Release
make install CMAKE_INSTALL_PREFIX=~/.local
make CMAKE_C_COMPILER=clang-20 CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=~/.local
make install CMAKE_C_COMPILER=clang-20 CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=~/.local
....
n --version
make plug-gc
ping -f -l 1500 8.8.8.8
sudo ping -f -l 1500 8.8.8.8
sudo ping -f -l 1475 8.8.8.8
sudo ping -f -l 1400 8.8.8.8
sudo ping -f -l 1000 8.8.8.8
sudo ping -f -l 100 8.8.8.8
sudo ping -f -l 500 8.8.8.8
sudo ping -f -l 200 8.8.8.8
ifconfig
ping -c 1 -s 1500 -M do 8.8.8.8
ping -c 1 -s 1400 -M do 8.8.8.8
ping -c 1 -s 1475 -M do 8.8.8.8
yay -Ss traceroute
yay -S traceroute
batman traceroute
curl ifconfig.me
hostname -I
yay -Ss hostname
hostid
uname
rmf .zig-cache/
rm build.zig
diff repomix-output.txt _repo.txt
l repomix-output.txt
yay -S perf
perf record .build/ab802e021c249dc6e2a1a3982aff970a/target/rpx
perf record .build/ca0fc39b74b8e781cdb0a874adfb1911/target/rpx
r2 .build/ca0fc39b74b8e781cdb0a874adfb1911/target/rpx
perf record .build/97071f48ff393f15d01d283b31d2acab/target/rpx
perf report
r2 .build/97071f48ff393f15d01d283b31d2acab/target/rpx
rm perf*
clang-include-cleaner --help
clang-include-cleaner --print
clang-include-cleaner --print src/*
clang-include-cleaner --print src/main.c
difft include/exception.h ~/lib/my/exception.h
rm src/exception.c include/exception.h
rg exception
rg disperr
rg throw
rg stdlib
n include/rc.h
ccache -s
mkcd lifegame
cp ../zxc/src/ansi_esc.zig src/
n src/ansi_esc.zig
kill 7397
kill 8060
zig test src/screen.zig
ghostty +show-config --default --doc
ghostty +show-config --default
n ~/.config/ghostty/config
sudo mkdir /bin/ns
sudo mv /bin/amdgpu_top /bin/ns/
ns/amdgpu_top
sudo mv /bin/ns/amdgpu_top /bin/
sudo rmdir /bin/ns/
z nvi
make plug-sync -j16
make plug-install
make -f make/setup-neovim.mk
rg "'n', 'n'"
rm `Netrw Settings`
n make/setup-neovim.mk
n -V1 -v
n -version
strings ~/.local/bin/nvim
strings ~/.local/bin/nvim | grep clang
strings ~/.local/bin/nvim | grep gcc
batman ps
batman kill
z nus
kill 9630
kill 10120
kill 11191
n node_modules/ms/index.js
n rc/hyprland.conf
git config --global --unset https.proxy
ping 8.8.8.8
make plug-update
which -a nvim
batman setsid
setsid neovide
make plug-update -j16
yay -S ninja
yay -S meson
z pl
z no16
yay -Ss lualatex
yay -Ss luatex
yay -S texlive-langjapanese
yay -Ss pygmentize
yay -S python-pygmentize
yay -S python-pygments
history | where command =~ yay
history | find ".pdf"
z fancy
~/tool/fancy-cat/
n src/PdfHandler.zig
n src/View.zig
ghostty +show-config
fancy-cat main.pdf
mv main.pdf 演習16_IS16_小山隼冬.pdf
n var/log/boot.log
z proc/zig/
n CMakeLists.txt
rg cmake
rmf gpt-repository-loader/
z kitty/
n xmalloc.c
n INSTALL.md
.../ly/
yay -Ss qemu
yay -Ss qemu-system-risc
yay -S qemu-system-riscv
mkcd project/zig/1000os
curl -LO https://github.com/qemu/qemu/raw/v8.0.4/pc-bios/opensbi-riscv32-generic-fw_dynamic.bin
clang -print-targets
zig -h
zig targets
zig targets | grep risc
qemu-system-riscv32 -machine '?'
qemu-system-riscv64 -machine '?'
chmod +x run.sh 
n run.sh
./run.sh
n kernel.ld
n src/kernel.zig
n src/nvim/keycodes.c
n src/nvim/input.c
yay -Ss game
yay -Ss 2048
yay -S 2048.zig-bin
2048
^2048
yay -Ss document
yay -S linux-docs
batman linux
yay -Ss wiki
yay -S wikiman
wikiman automaton
wikiman automata
shut
systemctl status tlp
z 1000
z project/zig/1000os/
rg Screen
rg screen\.
g s -c dfa
rmf .deps
vim-startuptime -vimpath ~/.local/bin/nvim -count 1000 -- ~/project/zig/ghostty/src/App.zig
vim-startuptime -count 1000 -- ~/project/zig/ghostty/src/App.zig
kill 1481
g merge dfa
g b -d dfa
Qzig 
rg win_cursor
n helix-core/src/config.rs
n helix-event/src/redraw.rs
kill 2505
kill 6028
g statsh
g stash poop
l .build/
rmf build/
mkcd build
llvm-config --version
zig build -h
n data/input.txt
./a.out data/input.txt
kill 3115
kill 3594
kill 4403
ps | find main
kill 4749
ps | where pid > 3289
make -f make/setup-treesitter.mk 
../gcc
n libgomp/config/accel/openacc.f90
n libstdc++-v3/doc/html/manual/abi.html
n BUILDING
scheme --version
../../editor/helix/
rm -h
rm -t -h
config flatten
.../shell/nu_scripts/
n stdlib-candidate/nupm.nuon
n benchmarks/fibonacci-recursive.nu
n make_release/bump-version.nu
n make_release/20k_club.nu
n nu-hooks/nu-hooks/startup-times.nu
n pkgs.txt
rm pkgs.txt pkgs2.txt allfile.txt
ls bk
n bk/dump.log
fancy-cat bk/files.img
lsix bk/files.img
kitten icat bk/files.img
rmf bk
ls fonts/
z fonts/
n keycodes.zig
n Documentation/trace/function-graph-fold.vim
n arch/x86/boot/setup.ld
z arch/x86
n lib/getuser.S
n boot/cpu.c
n lib/atomic64_32.c
n lib/insn.c
yay -S bc
yay -Qi bc
make CC=clang-20 LLVM=1 -j16
make CC=clang-20 LLVM=1
n boot/a20.c
make CC=clang LLVM=1
./scripts/clang-tools/gen_compile_commands.py
n scripts/clang-tools/gen_compile_commands.py
zig 
make -f make/setup-treesitter.mk
z build
yay -S llvm-config
yay -Ss llvm-config
yay -Ss llvm
yay -S llvm
make CC=clang LLVM=1 -j16
batman r2
batman radare2
r2 -L
n mm/kmemleak.c
n rust/exports.c
n fs/ext4/dir.c
make menuconfig
clang --version
clang-20 --version
make LLVM=1 -j16
n .config
n tools/testing/selftests/bpf/progs/test 
n tools/testing/selftests/bpf/progs/test_vmlinux.c
n src/screen.c
n keymap.h
n getchar.c
n map.c
rg '"ZZ"'
rg cmdarg_T
n edit.c
rg treesitter/api.h
rg tree_sitter/api.h
g cl https://github.com/tree-sitter/tree-sitter.git --depth 1
clang main.c -ldl
clang main.c -ldl -l /usr/local/lib/libtree-sitter.a
clang main.c -ldl -l /usr/local/lib/libtree-sitter.so
clang main.c -ldl /usr/local/lib/libtree-sitter.so
rg redraw
yay -Qi harfbuzz
shutdow now
n build.zig.zon
ls ~/.config/nvim/plugins/nvim-treesitter/nvim-treesitter/parser/
mkdir src/treesitter
rg "api\.h"
rg "api\\.h"
z src/nvim/lua
n treesitter.c
g submodule add https://github.com/tree-sitter/zig-tree-sitter.git --depth 1 lib/tree-sitter
g submodule add https://github.com/tree-sitter/zig-tree-sitter.git lib/tree-sitter --depth 1
g submodule add https://github.com/tree-sitter/zig-tree-sitter.git lib/tree-sitter
n lib/tree-sitter/src/root.zig
n .gitmodules
rm .gitmodules
rmf lib
which ghostty
z tree-sitter/
n lib/src/lexer.c
g stash
g s -c ts
g stash pop
zig test temp.zig
n temp.zig
rm temp.zig
zig test src/keycode.zig
rg load
z src/nvim/
n normal.c
cargo d E1
cargo d --help
cargo help doc
yay -Sy
rg undo
g s -c refactor
rg zxc
rg cache
rg display
rg display **/*.c
n syntax.c
ps | find yay
on-done -n yay { shutdown now }
mv zxc rediktisto
z rediktisto/
rg match
g merge refactor
g b -d refactor
z red
mv rediktisto/ redik
z redik/
rg redik
rg redik -i
git remote set-url origin https://github.com/koyamahayato2357/redak.git
mv redik/ redak
z zxc
mkcd no19
z no19/
cp ../no16/main.tex .
cp ../no16/makefile .
z no19
z 19
mv main.pdf 演習19_IS16_小山隼冬.pdf
fancy-cat 演習19_IS16_小山隼冬.pdf
rg "home directory"
n src/os/homedir.zig
ls ~
ls ~ -a
ls ~/.cache
ls ~/.local
ls ~/.local/state
ls ~/.local/share/
ls ~/.local/share/nvim
ls ~/.local/state/nvim
n /usr/lib/zig/std/posix.zig
mkdir ~/.cache/redak
rm ~/.cache/redak/log.log
rm .git/index.lock
rg catch unreachable
rg "\<alloc\>"
rg "\\<alloc\\>("
rg "\\<alloc\\>\\("
n src/config/theme.zig
rg catch
rg "{s}"
rg "\\{s}"
rg "catch unreachable"
rg -i redik
rustc --explain E0554
rustc --explain E0001
zig build
zig build --library c
mv src/ansi_esc.zig src/ansi.zig
rg ansi_esc
z src/nvim
rg "undo list"
rg "undo list" **/*.c
n undo.c
n src/util.zig
n ~/.cache/redak/log.log
z redal
zig run test.zig
z ly
g ghostty
zig test src/editor.zig
laz ~rc
mv src/RingBuffer.zig src/ring_buffer.zig
mv src/ring_buffer.zig src/que.zig
n test.zig
rm test.zig
z ~/project/c/source/
n graph.c
n imomusi.c
gcc AIosero.c
n AIosero.c
n nim.c
n ultimetgraph.c
n word_percentage.c
n danger.c
n gyakugyouretsu.c
n battleAIosero.c
gcc battleAIosero.c
gcc sosuugolf.c
n sosuu.c
gcc sosuugolf.c -std=c89
n sosuugolf.c
n reliableasm.asm
mkcd no20
mv `~/Downloads/main 6.c` main.c
z alg
mv main.c _main.c
lldb a.out
clang main.c -g -Og
gdb 
gcc main.c
clang main.c -g
clang main.c -O3
n tex.tex
rm tex.tex
z vim
z ~/editor/vim/
../helix/
z 20
z no20
mv main.pdf 演習20_IS16_小山隼冬.pdf
g s -c handler
zig test test.zig
source ~/.config/nushell/on-done.nu
z radare2
../fancy-cat/
../yt-x/
g log --name-only --graph --all --date=format-local:'%Y-%m-%d %H:%M:%S' --format='%C(auto)%h%d %cd %s'
g log --name-only --graph --all --date=format-local:'%Y-%m-%d %H:%M:%S' --format='%C(auto)%h%d %cd %s' | grep api.h
g log --name-only --graph --all --date=format-local:'%Y-%m-%d %H:%M:%S' --format='%C(auto)%h%d %cd %s' | grep api.h -A 10
g log | grep api.h -A 20
difft src/treesitter/api.h ~/tool/tree-sitter/lib/include/tree_sitter/api.h
cp ~/tool/tree-sitter/lib/include/tree_sitter/api.h src/treesitter/
z ~/editor/helix/
~/editor/helix/target/release/hx src/window.zig
yay -S helix
hx src/main.zig 
helix src/main.zig 
helix src/window.zig 
helix src/keycode.zig 
helix TODO.md 
z ~/.config/helix/
helix config.toml 
z helix-core/
helix line_ending.rs 
helix fuzzy.rs 
helix textobject.rs 
helix transaction.rs 
helix auto_pairs.rs 
rg event
helix syntax.rs 
rg treesitter
helix movement.rs 
z ~/editor/neovide/
../proc/ChezScheme/
../llvm-project/g pl
helix test/behavior/basic.zig 
z ~/proc/ChezScheme/
n libgomp/openacc.f90
n llvm/test/tools/llvm-mca/RISCV/SiFiveP400/vlseg-vsseg.s
n src/arch/x86_64/CodeGen.zig
ip a
man ping
ping -c 1 -s 1472 -M do 8.8.8.8
ping -c 1 -s 1473 -M do 8.8.8.8
yay -S hyprshot
hyprshot -h
traceroute 8.8.8.8
yay -Ss blue
yay -Ss archive
n src/ice.c
n example/all.rpx
n evalinfo_t.size.txt
rm evalinfo_t.size.txt
n app.log
rm app.log
bear -- make T=test
make log CCACHE=
yay -S astroterm
astroterm
astroterm --city Sendai
echo $env.config.filesize.unit
n config.nu
scan-build --use-c=clang-20 make OL=3
scan-build make OL=3
ls .build/
command -v clangd
make log
make info
cat include/testing.h | wl-copy
clangd
n src/cli/crash_report.zig
n archive/cmdwin.lua
yay -Ss scheme
yay -Ss scheme-lsp
yay -Ss scheme-language
z project/zig
mkcd lambda
z Downloads/
unzip AI.zip
rm AI.zip
z AI
rg "原理"
rg "深層学習"
ls 01_IoT/
z 02_AI/
rg resnet
n main.md
n 01_data_collection.ipynb
ls dataset/
rg ColorJitter
n 03_object_detection.ipynb
n 02_train_model.ipynb
mkcd project/pro/iot
n main.py
mv main.py main1.py
n main2.py
open main.pdf
start main.pdf
jq
jq main.json 
n main.json
n main.tex
lualatex -shell-escape main.tex
repomix
nmtui
n src/phyconst.c
n src/ansiesc.c
n include/editline.h
n include/exproriented.h
rg init_evalinfo
rg likely
make run T=test OL=3
clang-repl 
yay -S godap-bin
cargo install tukai
tukai
yay -Ss bagles
uv
yay -S uv
uv tool install --python 3.13 bagles
uv tool install --python 3.13 bagels
yay -Ss bagels
bagels
facad
facad -l
which facad
yay -S lsr-git
yay -S laser-git
lsr
lsr -l
which lsr
lsr -!
lsr -G
lsr -G -r -fchanged
lsr -! -G -r
lsr -g
cat BUILD.md LICENSE
z ~/tool/
g cl https://github.com/neurocyte/flow.git --depth 1
z flow/
flow
flow build.zig
z radare2/
z proc
z ChezScheme/
n s/7.ss
../llvm-project/
flow src/evalfn.c
make run T=test OL=g
make run OL=3
make run OL=g ASAN=undefined
make run OL=3 ASAN=undefined
rg restrict
make run OL=3 ASAN=address
yay -Qi uim
yay -Ss uim
ls .config/fcitx5/conf/skk.conf
n .config/fcitx5/conf/skk.conf
z .config/fcitx5/
which date
rg OP_CASE_ARTHM
make run OL=g ASAN=address,undefined
n include/main.h
make -pn
rg variable
rg var
rg malloc
rg alloc
n example/fact.rpx
make run T=test ASAN=address,undefined
rg va_args
rg va_arg
rg "\\<_\\>"
lls
z chez
n s/interpret.ss
n c/a6nt-jump.asm
n c/scheme.c
rg "\\<main\\>"
n c/main.c
rg "\\<call-with-current-continuation\\>"
n s/prims.ss
rg free
make run ASAN=address,undefined
z editor
g cl https://github.com/usagi-flow/evil-helix.git --depth 1
z editor/evil-helix/
./target/release/hx helix-core/src/macros.rs
yay -Ss evil
helix CHANGELOG.md
yay -S evil-helix-bin
hx CHANGELOG.md
hx helix-core/src/config.rs 
clang -S -masm=intel -march=native -O3 -o- src/arthfn.c -Iinclude
clang -S -emit-llvm -masm=intel -march=native -O3 -o- src/arthfn.c -Iinclude
clang -S -emit-llvm -masm=intel -march=native -O3 -o- src/arthfn.c -Iinclude | save narthfn.ll
difft arthfn.ll narthfn.ll
n narthfn.ll
rm arthfn.ll narthfn.ll
clang -S -emit-llvm -masm=intel -march=native -O3 -o- src/arthfn.c -Iinclude | save arthfn.ll
n arthfn.ll
g s jit
z c
n symbol.c
n include/secd.h
rm include/secd.h
rm arthfn.ll
make run T=test
n include/ice.h
yay -Ss azik
z .config/libskk/
n rules/StickyShift/keymap/hiragana.json
z ~/.local/share/fcitx5/skk/
n user.dict
yay -S fcitx5-skin-fluentdark-git
z ~/.config/
normalize-history
rg azik
../.local/
rmf mozc/ plasma-org.kde.plasma.desktop-appletsrc home-manager/ 
z fcitx5/
n conf/cached_layouts
../fcitx/
z ../libskk/
yay -S fcitx5-configtool
fcitx5-configtool
yay -Ss fcitx5
z rules/
mkcd azik
mkcd rom-kana
n default.json
mkcd ../keymap
ls ../../StickyShift/
rmdir keymap/
cp -r ../StickyShift/* .
n ~/.config/fcitx5/config
z ../../../fcitx5/
rg Sticky
sudo systemctl restart fcitx5
../libskk/rules/azik/
mv azik.zig ~
mkcd azik-conf
g init
rm azik.json
z project/zig/azik-conf/
ld
zig test to_kana.zig
rg 'q'
scheme
cat repomix-output.txt | wl-copy
n BUILD.md
rg APPLY_ARTHM
make info OL=3
ls .build/e18ca12a579fc6d42925524312dd34f4/target/
rg argv
z skk
../fcitx5
z fcitx5
z .local/
z .config
z /usr/share/fcitx5/skk/
n dictionary_list
n ../../skk/SKK-JISYO.lisp
z libskk
z rules/default/
nvimsudo keymap/default.json
nvimsudo keymap/hankaku-katakana.json
nvimsudo keymap/hiragana.json
nvimsudo keymap/katakana.json
nvimsudo keymap/latin.json
nvimsudo keymap/wide-latin.json
z ~/.config/libskk/rules/
mkcd default
sudo cp /usr/share/libskk/rules/default/* .
sudo cp /usr/share/libskk/rules/default/* . -r
ls keymap/
sudo chown sundo:users **/*
n keymap/
n keymap/hankaku-katakana.json
rg shift
rg shift -i
n tool/rpx.vim
sl
rg stdin
../gcc/
../zig/
cargo build --release
../vim/g pl
../../tool/foot/
cmake -G "Ninja" ../llvm/ -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_ENABLE_LLD=ON -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_LTO=Full -DLLVM_ENABLE_LLVM_LIBC=ON -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_Z3_SOLVER=ON -DLLVM_ENABLE_ZLIB=OFF -DLLVM_INSTALL_UTILS=ON -DLLVM_RAM_PER_LINK_JOB=10000 -DLLVM_USE_SPLIT_DWARF=ON -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra;lldb;compiler-rt;openmp"
cmake --build .
sudo rmf .
sudo rm -rf *
cmake -G "Ninja" ../llvm/ -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=Release -DLLVM_LIBC_FULL_BUILD=ON -DLLVM_PARALLEL_JOBS=2 -DLLVM_ENABLE_LLD=ON -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_LTO=Full -DLLVM_ENABLE_LLVM_LIBC=ON -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_ENABLE_BINDINGS=OFF -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_Z3_SOLVER=ON -DLLVM_ENABLE_ZLIB=OFF -DLLVM_INSTALL_UTILS=ON -DLLVM_RAM_PER_LINK_JOB=10000 -DLLVM_USE_SPLIT_DWARF=ON -DLLVM_ENABLE_PROJECTS="clang;lld"
n n compile_commands.json
n .clang-tidy
make lint OL=3
rg panic
z /usr/share/libskk/
n rules/azik/keymap/default.json
n rules/azik/keymap/hiragana.json
n metadata.json
n ../default/keymap/default.json
hyprshot -m region
man hyprshot
z Dow
rmf *
rm 2025*
../default/
n keymap/default.json
skk --list-rules
skk --help
skk -u
skk -r
man skk
sudo cp /usr/share/backgrounds/gruvbox.png /usr/share/hypr/wall0.png
command
ls $env.path
$env.path
rustup update nightly-x86_64-unknown-linux-gnu
systemctl list-jobs
systemctl list-units
z fcitx
n /usr/share/libskk/rules/azik/
n /usr/share/libskk/rules/default/rom-kana/default.json
n ~/.config/fcitx5/profile
n ~/.config/fcitx5/conf/notifications.conf
n ~/.config/fcitx5/conf/cached_layouts
n ../libskk/rules/StickyShift/keymap/hiragana.json
n ../libskk/rules/StickyShift/metadata.json
z ../libskk/rules/
n default/metadata.json
n azik/metadata.json
n conf/skk.conf
n StickyShift/metadata.json
z azik/
n ../default/keymap/hiragana.json
/usr/share/libskk/
rg 、
z rules/azik/
z ~/project/zig/azik-conf/
rg "attribute((const))"
rg "__attribute__((const))"
rg "__attribute__ ((const))"
rg "((const))"
rg "\(\(const))"
rg "\(\(const\)\)"
n include/arthfn.h
n include/chore.h
make T=bench
make doc
n doc/Doxyfile
bear -- make
n keymap/hiragana.json
n keymap/katakana.json
rg _BitInt
n include/sysconf.h
n src/arthfn.c
bear -- make test OL=3
make test OL=3
make T=bench OL=3
make T=test
g p
rg ime
rg IM
rg "\\<IM\\>"
zig build -Doptimize=ReleaseFast -p ~/.local
kitty
n report.txt
n report.md
n themes
make fmt
shutdown now
make OL=3 ASAN=all
make test ASAN=address,undefined
n include/matop.h
make test ASAN=memory
make run CCACHE= OL=3
ls .build/9923133a284e5e5182a907a5e503d1e0/target/rpx
make run CCACHE=
man memrchr
n src/chore.c
n src/elemop.c
rpx example/graph.rpx
lldb .build/618de9ae349a07726b8a83b0d159b328/target/rpx
flow README.md
n include/evalfn.h
rg argc_t
n test.c
clang -S -emit-llvm -masm=intel -march=native -O3 -o- test.c
clang -S -masm=intel -march=native -O3 -o- test.c
rm test.c
rpx example/matrix.rpx
z plugins/saghen/blink.cmp/lua/blink/cmp/config
n sources.lua
.......
rg nan
rg nan -i
n src/benchmarking.c
make lint
make OL=3
make clean OL=3
bear -- make OL=3
n src/optexpr.c
n src/editline.c
z azik-conf
skk
echo "; r a i space" | skk
z nu
open rom-kana/default.json
[{src, dst}, {hello, world}]
{include: [0 "default/default"], define: ["rom-kana" ['-' ':']]}
[[include, define]; [0 "rom-kana"], ["default/default" ['-' ':' ';']]]
open rom-kana/default.json | describe
open rom-kana/default.json | to text
open rom-kana/default.json | from json
rom-kana/default.json | from json
cat rom-kana/default.json | from json
open rom-kana/default.json | to nuon | format
open rom-kana/default.json | to nuon
reduce -h
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|k, e| {k: ['' e]}})}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|e| {e.1: ['' e.2]}})}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|e| {['' e]}})}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|e| {['' e]})}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|e| ['' e]})}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|e| ['' $e]})}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | each {|e| ['' $e]})}} | to json
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3} | transpose k n)}}
{define: {rom-kana: ({'a': 1, 'b': 2, 'c': 3}}}
{define: {rom-kana: {'a': 1, 'b': 2, 'c': 3}}}
{define: {rom-kana: {'a': 1, 'b': 2, 'c': 3}}} | append {'d': 4}
{define: {rom-kana: {'a': 1, 'b': 2, 'c': 3}}} | append ['d' 4]
{define: {rom-kana: {'a': 1, 'b': 2, 'c': 3}}} | insert 'd' {4}
let v = 0
$v = 3
{'a': 1, 'b': 2, 'c': 3} | insert 'd' {4}
{'a': 1, 'b': 2, 'c': 3} | insert 'd' {4} | to json
({'a': 1, 'b': 2, 'c': 3} | insert 'd' {4}).0
let r = ({'a': 1, 'b': 2, 'c': 3} | insert 'd' {4})
r['a']
$r
$r | select 'a'
$r | (select 'a').0
($r | select 'a').0
$r | select 'a' | columns
$r | select 'a' | values
insert -h
{'a': [1 2]} | select 'a'
{'a': [1 2]}
{'a': [1 2]}.0
{'a': [1 2]} | select 'a' | values
[1 2 3].0
merge -h
is-admin
{'a': [1 2], 'b': [3 4]} | select 'a' | values
{'a': [1 2], 'b': [3 4]} | select 'a'
roll -h
{'a': [1 2], 'b': [3 4]} | select 'a' | describe
{'a': [1 2], 'b': [3 4]} | select 'a' | get 1
{'a': [1 2], 'b': [3 4]} | select 'a' | get 0
{'a': [1 2], 'b': [3 4]} | select 'a' | get a
{'a': [1 2], 'b': [3 4]} | get a
for -h
({'a': [1 2], 'b': [3 4]} | get a).0
({'a': [1 2], 'b': [3 4]}).a
let a = 'a'
({'a': [1 2], 'b': [3 4]}).$a
({'a': [1 2], 'b': [3 4]}).($a)
({'a': [1 2], 'b': [3 4]} | get $a).0
[1 2 3] | each --keep-empty {|e| if $e == 2 { "found 2!"} }
[1 2 3] | each --keep-empty {|e| {$e: 1}}
[a b c] | each --keep-empty {|e| {$e: 1}}
[a b c] | each --keep-empty {|e| {d: $e}}
let mut res = 0
a = -
mut res
mut -h
mut res = {}
res = {a: 1}
$res = {a: 1}
zip -h
table -h
get -h
{'a': [1 2], 'b': [3 4]} | get a.0
let b = a
let b = 'a'
{'a': [1 2], 'b': [3 4]} | get $b.0
{'a': [1 2], 'b': [3 4]} | get ($b).0
{'a': [1 2], 'b': [3 4]} | get ("a").0
{'a': [1 2], 'b': [3 4]} | get "a"
{'a': [1 2], 'b': [3 4]} | get "a" | get 0
['' 'a' + 'b']
z ~/.config/nushell/
[[a b] [c d] [e f]] | each {|e| echo $e}
wrap -h
[[a b] [c d] [e f]] | each {|e| {$e.0: $e.1}}
[[a b] [c d] [e f]] | transpose -r
transpose -h
[[a b] [c d] [e f]] | into record
[[a b] [c d]] | into record
[[a [b]] [c [d]]] | into record
rm temp.json
n temp.json
nu -h
nu main.nu
[k s t] | each {|c| [[a b c] [d e f]] | each {|v| [v.0 c] | into record}}
[k s t] | each {|c| [[a b c] [d e f]] | each {|v| [$v.0 $c] | into record}}
[k s t] | each {|c| [[a b] [d e]] | each {|v| [$v.0 $c] | into record}}
[k s t] | each {|c| [a b c] | each {|v| [$v.0 $c] | into record}}
[k s t] | each {|c| [a b c] | each {|v| [$v $c] | into record}}
z /usr/share/libskk/rules/azik/
skk -r azik
n /usr/share/libskk/rules/azik/rom-kana/default.json
mv azik/ sundo
n ../../fcitx5/conf/skk.conf
z sundo/
n to_kana.zig
rmf ~/.config/ghostty/themes
n ../kitty/kitty.conf
n ../kitty/current-theme.conf
n ~/.local/share/ghostty/themes/Atom
mkdir theme
mv sundo theme/
mv theme/ themes
ls | to json
ls | to nuon
echo "\e[38;2;100;100;100mhello"
echo "\e[38mhello"
echo "\e[33mhello"
echo "\e[31mhello"
echo "\e[32mhello"
n themes/sundo
n lua/colorscheme.lua
mv repomix-output.txt _repo.txt
n _repo.txt
difft _repo.txt repomix-output.txt
rm _repo.txt
mv lua/rainbow.lua archive/
n repomix.config.json
ghostty +list-themes
make -f make/setup-treesitter.mk install
vim-startuptime -vimpath ~/.local/bin/nvim -count 1000 -- ~/project/c/rpx/src/main.c
cpufetch
cpufetch -h
cpufetch --logo-short
cpufetch --logo-short --style=legacy
cpufetch --logo-short --verbose
n lua/utils.lua
rm report.md
n lua/ftplugin/asm.lua
n lua/ftplugin/c.lua
n lua/ftplugin/scheme.lua
vim-startuptime -vimpath ~/.local/bin/nvim -count 1000
vim-startuptime -vimpath ~/.local/bin/nvim -count 1000 -- temp
tlp-stat
sudo tlp-stat -p
vim-startuptime -vimpath ~/.local/bin/nvim -count 1000 -- init.lua
l
yay -S hyprpaper
ps
ps | find paper
neovide
batman neovide
z neovide
n website/docs/command-line-reference.md
neovide --nvim-bin=~/.local/bin/nvim
neovide --nvim-bin ~/.local/bin/nvim
neovide --neovim-bin ~/.local/bin/nvim
rm hyprpaper.conf
lsix /usr/share/backgrounds/Dark-Wallpaper-HD-Download.jpg
kitty +kitten icat /usr/share/backgrounds/Dark-Wallpaper-HD-Download.jpg
kitty +kitten icat /usr/share/backgrounds/*
hyprctl setcursor Bibata-Modern-Classic 24
yay -S ags-hyprpanel-git
ags run
ags
ags init
yay -Rsc ags-hyprpanel-git
yay -S hybrid-bar
z .config/HybridBar/
hybrid-bar --help
hybrid-bar
n config.json
rmf HybridBar/
yay -Rsc hybrid-bar hybrid-bar-debug
ps | find hybrid
kill 1200
yay -S eww
n /etc/xdg/eww/eww-bar/eww.yuck
ls eww/
eww
eww daemon
eww graph
eww open
eww z hypr
eww open-many screen apps
n ../eww/eww.yuck
eww open-many bar
eww open labeled-container
eww open example
eww close example
acpi -b
acpi
hyprctl --help
hyprctl workspaces --help
hyprctl workspaces 1
eww close bar
eww update
eww poll
eww --help
eww logs
eww get EWW_BATTERY
eww get EWW_BATTERY.BAT0
eww get EWW_BATTERY["BAT0"]
GDK_BACKEND = wayland
$env.GDK_BACKEND = wayland
$env.GDK_BACKEND = 'wayland'
$env.WAYLAND_DISPLAY
../eww
mkdir img
mv ~/Downloads/hyprland-logo.jpeg img/
hyprctl dispatch --help
hyprctl workspaces
hyprctl dispatch workspace 1
rmf img/
kitty -- btop
ghostty -- btop
ghostty btop
ghostty +list-actions
ghostty +action new_tab
ghostty +action +new_tab
n ../btop/btop.conf
foot btop
man ghostty
ghostty -e btop
ghostty -e btop ; ghostty -e nvim
ghostty --help
kitty +kitten icat eww-bar.png
rm eww-bar.png
n scripts/getvol
rmf scripts/
n src/config/Config.zig
../evil-helix/
n src/register.c
ollama run llama3.2
ollama start
/usr/
rmf .local/share/Trash/
z .local/share/Trash/
ls -R
ls -d
rmf files/
^rm -rf Trash/
sudo ^rm -rf Trash/
sudo rm -rf Trash/
yay -Rsc platformio
yay -Ss platformio
ollama run llama3.3
ollama rm llama3.3
ollama show
ollama show llama3.2
ollama run phi4
ollama stop phi4
ollama run deepseek-coder-v2
ollama
oollama
ollama stop deepseek-coder-v2
ollama run gemma2:27b
ollama ps
ollama stop gemma2:27b
bash
ollama ls
eww open-many left-bar right-bar
cat makefile | ollama run codellama
ollama stop codellama
ps | find ollama
kill 1881
mv ~/.config/nvim/repomix-output.txt .
n lua/ftplugin.lua
n lua/profile.lua
n lua/command.lua
n src/fuzpath/fs.c
n src/fuzpath/chore.h
n src/fuzpath/main.c
n lua/fcitx5.lua
yay -S pacseek
n gene.c
rg attribute
n parallel.c
n taskfile.yml
n vector.h
n list.c
n log.c
n log.h
n errcode.c
n exception.c
rg drop
n arena.c
n def.h
n def.c
rg orelse
rg " _ "
n testing.c
n exception.h
n testing.h
n vector.c
n parallel.h
n exproriented.h
n exproriented.c
n nullable.c
rm taskfile.yml
mkdir src include
mv *.c src/
mv *.h include/
bear -- make run T=test OL=g
n compile_commands.json
n .gitignore
z eww
eww open right-bar
eww close-all
eww open bar
n eww.yuck
n eww.nu
n Compilation/Config.zig
rg "evaluate comptime"
n Sema.zig
n Value.zig
ls lib/
ls /usr/lib/zig/
sudo cp -r lib/ /usr/lib/zig/
sudo rm -rf /usr/lib/zig/lib
sudo cp -r lib/* /usr/lib/zig/
ls /usr/lib/zig
yay -S zig
zig build -p stage3 -Dstatic-llvm -Doptimize-ReleaseFast
sudo rm -rf build/
n main.zig
z neovim
n src/nvim/lua/treesitter.c
n src/tab.zig
n src/ansi.zig
n src/fs.zig
n src/keycode.zig
n src/config.zig
n src/getch.zig
rg Ioctl
rg getWinSize
ls " !"
rg " !"
tokei
yay -SYu
z src
n Compilation.zig
mkcd src/PcTree
n PcTree.zig
rmf PcTree/
mv piece_tree.zig ...
g s -c piece-tree
mv .../piece_tree.zig .
z markov
onefetch
n piece_tree.zig
skk -h
skk -l
n /usr/lib/zig/std/mem.zig
n iterator.zig
rm iterator.zig
rg "\\<buf\\>"
rg "\.\\<buf\\>"
n screen.zig
z src/
n buffer.zig
n window.zig
n /usr/lib/zig/std/mem/Allocator.zig
rg realloc
n src/window.zig
rg setLine
z azik
z sundo
n ~/.config/fcitx5/conf/skk.conf
skk -r sundo
n rom-kana/default.json
rg "\\<insert\\>"
rg "\\<buf\\>\\."
rg "\\<buffer\\>\\."
rg "\\<items\\>"
rg "\\<alloc\\>"
rg machine
mv src/piece_tree.zig ..
rg editor
mv src/editor.zig src/keybind.zig
n src/core.zig
n src/keybind.zig
ps | find fcitx
fcitx5 -d --replace
n src/vars.zig
n src/function.zig
n TODO.md
n IDEA.md
g s ts
n src/treesitter/api.h
rg api.h
n src/treesitter.zig
rmf src/treesitter/
mv ../piece_tree.zig src/
nu --version
n n src/piece_tree.zig
rpx
n src/piece_tree.zig
mv src/piece_tree.zig src/rope.zig
n lua/ftplugin/makefile.lua
n idea.txt
n include/benchmarking.h
make run T=bench OL=3
n src/matop.c
n src/main.c
n src/rc.c
n src/sysconf.c
zig run src/main.zig --library c
n src/buffer.zig
clang temp.c
gdb a.out 
gdb a.out
n 
n helix-core/src/rope_reader.rs
clang temp.c -g
./a.out
n temp.c
rm temp.c
foot
n rc/foot.ini
rm a.out
g b -a
g s handler
g merge main
zig test src/que.zig
n src/que.zig
n src/editor.zig
n src/input_handler.zig
n src/event_handler.zig
g s main
rg iterate
g s piece-tree
n lua/lsp.lua
rmf nix/ nixpkgs/
rg statusline
shurdown now
n lua/cdtrack.lua
n lua/dmacro.lua
foot --help
foot --check-config
n src/errcode.c
n include/errcode.h
n src/error.c
n include/error.h
n src/graphplot.c
n src/evalfn.c
make test
rg "\\$if|"
rg "\\$if"
n lua/map.lua
n .repomixignore
n include/arena.h
n include/parallel.h
rg async
make run OL=g
make clean-all
n include/list.h
z llvm
../ChezScheme/
rg "#define"
rg "#define +\\a+\\("
rg "#define +\\a+"
rg "#define \\+\\a\\+"
rg "#define \\a"
rg "#define \a"
rg "#define " **/*.c **/*.h
rg "#define \\A" **/*.c **/*.h
rg "#define [A-Z]" **/*.c **/*.h
rg "#define [A-Z]+" **/*.c **/*.h
rg "#define [A-Z_]+" **/*.c **/*.h
rg "#define [A-Z_]\\(+" **/*.c **/*.h
rg "#define [A-Z_]+\\(+" **/*.c **/*.h
../zig
z shell
z nu_scripts/
n themes/nu-themes/3024-night.nu
z helix
../neovide/
../vim/
make -j16
sudo make install
cargo install-update -a
z fancy-cat/
../foot/
rg build -i
z build/
cmake ..
cmake --build . --target install
ninja
sudo ninja install
.../kitty/
make
../ly/
../radare2/
ninja -C release
sudo ninja -C release install
../starship/
../tree-sitter/
zig build -p ~/.local -Doptimize=ReleaseFast
~
n monster-vimmer.txt
n date
n file
rm file
rmdir lang
z ui/future-cyan-hyprcursor/
rm repomix-output.txt
z project/
z haskell/
n korattu/main.hs
n jmo/main.hs
../prolog/
n lib/fuzpath.so
r2 lib/fuzpath.so
z rpx
sudo make install OL=3
r2 /usr/local/bin/rpx
g cl https://github.com/lightpanda-io/browser.git --depth 1
z browser/
yay -S gperf
make install-dev
curl -L -o lightpanda https://github.com/lightpanda-io/browser/releases/download/nightly/lightpanda-x86_64-linux
chmod +x ./lightpanda 
./lightpanda --dump https://lightpanda.io
./lightpanda --help
./lightpanda --verbose
./lightpanda https://google.com
make wpt
make install-submodule
make help
make build
make install
z vendor/zig-js-runtime/vendor/v8/
ls x86_64-linux/
make install-v8
...
rg GUI
rg "GUI "
rg " UI "
./lightpanda
..
rmf browser/
n --clean init.lua
yay -Ss dillo
yay -S dillo
dillo
yay -Rsc dillo
yay -S falkon
yay -S floorp
yay -S floor
yay -S floor-bin
yay -S floorp-bin
floorp
falkon
edge
microsoft-edge-dev --help
microsoft-edge-dev
n ~/rc/hyprland.conf
rg lazy
$nu.env-path
n ~/.config/nushell/env.nu
nu
n init.lua
rg "true"
rg "\\"true\\""
rg "\"true\""
z
z tool/
g cl https://github.com/nushell/nushell.git --depth 1
z nushell/
cargo install --path .
which nu
bat /etc/shells 
bat /etc/shells
cat /etc/shells
chsh
chsh --list-shells
ls /bin/nu
sudo chsh -s /home/sundo/.cargo/bin/nu sundo
z tool
g cl https://github.com/rakitzis/rc.git --depth 1
make PREFIX=~/.local/ install
rc
n main.c
n parse.c
n Makefile
pacseek
^ps
powertop
/
pwsh
z zig
mkcd minesweeper
zig init
rm src/root.zig
n build.zig
rm build.zig.zon
cp ../redak/src/ansi.zig src/
zig test src/board.zig
n ../redak/src/term.zig
sudo journalctl --vacuum-time=1weeks
sudo journalctl -u
sudo journalctl --all
btop
QQQQ
microsoft-edge-dev --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-wayland-ime
ls -l
z ~/project/zig/minesweeper/
n src/board.zig
n src/screen.zig
mv src/screen.zig src/Screen.zig
n src/logger.zig
ls lua/
n lua/submode.lua
n makefile
n include/vector.h
rg table
n src/arena.c
n src/testing.c
ls include/
n include/gene.h
n include/nullable.h
n src/exproriented.c
n include/testing.h
rg clang
n src/list.c
yay -Syu
H
rg fcitx5
rg fcitx5 **/*.nu
z mine
n src/Screen.zig
rg "\\<c\\>"
n src/term.zig
n src/rope.zig
mkcd ../rope
mkdir src
z redak
z ../rope/
zig test src/main.zig
z my
cp ~/project/c/rpx/src/benchmarking.c src/
cp ~/project/c/rpx/include/benchmarking.h include/
n src/parallel.c
n src/nullable.c
npx repomix
n repomix-output.txt
n src/exception.c
n include/exception.h
n src/def.c
make run
ls src/
n src/gene.c
n src/vector.c
make plug-update -j8
n make/setup-treesitter.mk
$env.TERM
sudo chsh -s /bin/nu sundo
n include/def.h
rmf include/
n lua/autocmd.lua
fd copilot
z plugins/zbirenbaum/copilot.lua
n README.md
n lua/copilot/suggestion.lua
n lua/plugindata.lua
n lua/plugin.lua
$env.EDITOR
n ~/.gitconfig
n .luarc.json
z foot
rmf .cache/
../kitty/
g pl
z nvim
vim
n
fastfetch
yay -Syyu
lsa
ls -a
n .vimrc
n brightnessctl.service
n init.nu
n contour.yml
n keymap.hwdb
n flake.lock
n pueue.service
n config
z ghostty
mv ~/.config/ghostty/ .
ln -s ~/rc/ghostty/ ~/.config/
ls ~/.config/
rc/
$env.term
starship
tty
z .cache/hyprland/
z -
yay -S hyprland
n .profile
rm .profile
z hypr
n hyprland.conf
n hyprpaper.conf
z linux
$env.GIT_TRACE2_PERF = ~/linux/trace2.log
$env.GIT_TRACE2_PERF = "~/linux/trace2.log"
$env.GIT_TRACE2_PERF = "/home.sundo/linux/trace2.log"
$env.GIT_TRACE2_PERF = "/home/sundo/linux/trace2.log"
git status
n trace.log
g update-index --test-untracked-cache
n trace2.log
$env.GIT_TRACE2_PERF = ""
rm trace2.log
g status
z gcc
g config core.untrackedcache false
g config core.untrackedcache true
g ls-files ./ | wc -l
z rc
w3m
w3m google.com
tv
n data/pkgs.nu
n data/systemd.nu
n scripts/history-reg.nu
n scripts/install-conf.nu
rm histor-reg.mk
n foot.ini
z rope
n src/main.zig
rg send-to-nvim
"NVIM" in $env
"EDITOR" in $env
cd .config/nvim/
../nushell
nvim alias.nu
nvim alias.nu 
ncdu
rm date
nvif
n azik.zig
n /etc/shells
z nushell
n alias.nu
source on-done.nu
on-done
n on-done.nu
ls
n cc.nu
n main.nu
mkdir archive
mv main.nu archive/
laz
normalize-history
laz
